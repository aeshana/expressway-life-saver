

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Tue May 10 22:33:23 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	intentry,global,class=CODE,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	dabs	1,0x7E,2
    44  0000                     	;# 
    45  0001                     	;# 
    46  0002                     	;# 
    47  0003                     	;# 
    48  0004                     	;# 
    49  0005                     	;# 
    50  0006                     	;# 
    51  0007                     	;# 
    52  0008                     	;# 
    53  0009                     	;# 
    54  000A                     	;# 
    55  000B                     	;# 
    56  000C                     	;# 
    57  000D                     	;# 
    58  000E                     	;# 
    59  000E                     	;# 
    60  000F                     	;# 
    61  0010                     	;# 
    62  0011                     	;# 
    63  0012                     	;# 
    64  0013                     	;# 
    65  0014                     	;# 
    66  0015                     	;# 
    67  0015                     	;# 
    68  0016                     	;# 
    69  0017                     	;# 
    70  0018                     	;# 
    71  0019                     	;# 
    72  001A                     	;# 
    73  001B                     	;# 
    74  001B                     	;# 
    75  001C                     	;# 
    76  001D                     	;# 
    77  001E                     	;# 
    78  001F                     	;# 
    79  0081                     	;# 
    80  0085                     	;# 
    81  0086                     	;# 
    82  0087                     	;# 
    83  0088                     	;# 
    84  0089                     	;# 
    85  008C                     	;# 
    86  008D                     	;# 
    87  008E                     	;# 
    88  0091                     	;# 
    89  0092                     	;# 
    90  0093                     	;# 
    91  0094                     	;# 
    92  0098                     	;# 
    93  0099                     	;# 
    94  009C                     	;# 
    95  009D                     	;# 
    96  009E                     	;# 
    97  009F                     	;# 
    98  010C                     	;# 
    99  010D                     	;# 
   100  010E                     	;# 
   101  010F                     	;# 
   102  018C                     	;# 
   103  018D                     	;# 
   104  0000                     	;# 
   105  0001                     	;# 
   106  0002                     	;# 
   107  0003                     	;# 
   108  0004                     	;# 
   109  0005                     	;# 
   110  0006                     	;# 
   111  0007                     	;# 
   112  0008                     	;# 
   113  0009                     	;# 
   114  000A                     	;# 
   115  000B                     	;# 
   116  000C                     	;# 
   117  000D                     	;# 
   118  000E                     	;# 
   119  000E                     	;# 
   120  000F                     	;# 
   121  0010                     	;# 
   122  0011                     	;# 
   123  0012                     	;# 
   124  0013                     	;# 
   125  0014                     	;# 
   126  0015                     	;# 
   127  0015                     	;# 
   128  0016                     	;# 
   129  0017                     	;# 
   130  0018                     	;# 
   131  0019                     	;# 
   132  001A                     	;# 
   133  001B                     	;# 
   134  001B                     	;# 
   135  001C                     	;# 
   136  001D                     	;# 
   137  001E                     	;# 
   138  001F                     	;# 
   139  0081                     	;# 
   140  0085                     	;# 
   141  0086                     	;# 
   142  0087                     	;# 
   143  0088                     	;# 
   144  0089                     	;# 
   145  008C                     	;# 
   146  008D                     	;# 
   147  008E                     	;# 
   148  0091                     	;# 
   149  0092                     	;# 
   150  0093                     	;# 
   151  0094                     	;# 
   152  0098                     	;# 
   153  0099                     	;# 
   154  009C                     	;# 
   155  009D                     	;# 
   156  009E                     	;# 
   157  009F                     	;# 
   158  010C                     	;# 
   159  010D                     	;# 
   160  010E                     	;# 
   161  010F                     	;# 
   162  018C                     	;# 
   163  018D                     	;# 
   164  0000                     	;# 
   165  0001                     	;# 
   166  0002                     	;# 
   167  0003                     	;# 
   168  0004                     	;# 
   169  0005                     	;# 
   170  0006                     	;# 
   171  0007                     	;# 
   172  0008                     	;# 
   173  0009                     	;# 
   174  000A                     	;# 
   175  000B                     	;# 
   176  000C                     	;# 
   177  000D                     	;# 
   178  000E                     	;# 
   179  000E                     	;# 
   180  000F                     	;# 
   181  0010                     	;# 
   182  0011                     	;# 
   183  0012                     	;# 
   184  0013                     	;# 
   185  0014                     	;# 
   186  0015                     	;# 
   187  0015                     	;# 
   188  0016                     	;# 
   189  0017                     	;# 
   190  0018                     	;# 
   191  0019                     	;# 
   192  001A                     	;# 
   193  001B                     	;# 
   194  001B                     	;# 
   195  001C                     	;# 
   196  001D                     	;# 
   197  001E                     	;# 
   198  001F                     	;# 
   199  0081                     	;# 
   200  0085                     	;# 
   201  0086                     	;# 
   202  0087                     	;# 
   203  0088                     	;# 
   204  0089                     	;# 
   205  008C                     	;# 
   206  008D                     	;# 
   207  008E                     	;# 
   208  0091                     	;# 
   209  0092                     	;# 
   210  0093                     	;# 
   211  0094                     	;# 
   212  0098                     	;# 
   213  0099                     	;# 
   214  009C                     	;# 
   215  009D                     	;# 
   216  009E                     	;# 
   217  009F                     	;# 
   218  010C                     	;# 
   219  010D                     	;# 
   220  010E                     	;# 
   221  010F                     	;# 
   222  018C                     	;# 
   223  018D                     	;# 
   224  0000                     	;# 
   225  0001                     	;# 
   226  0002                     	;# 
   227  0003                     	;# 
   228  0004                     	;# 
   229  0005                     	;# 
   230  0006                     	;# 
   231  0007                     	;# 
   232  0008                     	;# 
   233  0009                     	;# 
   234  000A                     	;# 
   235  000B                     	;# 
   236  000C                     	;# 
   237  000D                     	;# 
   238  000E                     	;# 
   239  000E                     	;# 
   240  000F                     	;# 
   241  0010                     	;# 
   242  0011                     	;# 
   243  0012                     	;# 
   244  0013                     	;# 
   245  0014                     	;# 
   246  0015                     	;# 
   247  0015                     	;# 
   248  0016                     	;# 
   249  0017                     	;# 
   250  0018                     	;# 
   251  0019                     	;# 
   252  001A                     	;# 
   253  001B                     	;# 
   254  001B                     	;# 
   255  001C                     	;# 
   256  001D                     	;# 
   257  001E                     	;# 
   258  001F                     	;# 
   259  0081                     	;# 
   260  0085                     	;# 
   261  0086                     	;# 
   262  0087                     	;# 
   263  0088                     	;# 
   264  0089                     	;# 
   265  008C                     	;# 
   266  008D                     	;# 
   267  008E                     	;# 
   268  0091                     	;# 
   269  0092                     	;# 
   270  0093                     	;# 
   271  0094                     	;# 
   272  0098                     	;# 
   273  0099                     	;# 
   274  009C                     	;# 
   275  009D                     	;# 
   276  009E                     	;# 
   277  009F                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284                           
   285                           	psect	idataBANK2
   286  132A                     __pidataBANK2:	
   287                           
   288                           ;initializer for ___cgram
   289  132A  340C               	retlw	12
   290  132B  3412               	retlw	18
   291  132C  3412               	retlw	18
   292  132D  340C               	retlw	12
   293  132E  3400               	retlw	0
   294  132F  3400               	retlw	0
   295  1330  3400               	retlw	0
   296  1331  3400               	retlw	0
   297  1332  3400               	retlw	0
   298  1333  3404               	retlw	4
   299  1334  340E               	retlw	14
   300  1335  341F               	retlw	31
   301  1336  340E               	retlw	14
   302  1337  3404               	retlw	4
   303  1338  3400               	retlw	0
   304  1339  3400               	retlw	0
   305  133A  3404               	retlw	4
   306  133B  3404               	retlw	4
   307  133C  3404               	retlw	4
   308  133D  3404               	retlw	4
   309  133E  341F               	retlw	31
   310  133F  340E               	retlw	14
   311  1340  3404               	retlw	4
   312  1341  3400               	retlw	0
   313  1342  340A               	retlw	10
   314  1343  3415               	retlw	21
   315  1344  3411               	retlw	17
   316  1345  340A               	retlw	10
   317  1346  3404               	retlw	4
   318  1347  3400               	retlw	0
   319  1348  3400               	retlw	0
   320  1349  3400               	retlw	0
   321  134A  340A               	retlw	10
   322  134B  341F               	retlw	31
   323  134C  341F               	retlw	31
   324  134D  340E               	retlw	14
   325  134E  3404               	retlw	4
   326  134F  3400               	retlw	0
   327  1350  3400               	retlw	0
   328  1351  3400               	retlw	0
   329  1352  3400               	retlw	0
   330  1353  3400               	retlw	0
   331  1354  3400               	retlw	0
   332  1355  3400               	retlw	0
   333  1356  3400               	retlw	0
   334  1357  3400               	retlw	0
   335  1358  3400               	retlw	0
   336  1359  3400               	retlw	0
   337  135A  3400               	retlw	0
   338  135B  3400               	retlw	0
   339  135C  3400               	retlw	0
   340  135D  3400               	retlw	0
   341  135E  3400               	retlw	0
   342  135F  3400               	retlw	0
   343  1360  3400               	retlw	0
   344  1361  3400               	retlw	0
   345  1362  3400               	retlw	0
   346  1363  3400               	retlw	0
   347  1364  3400               	retlw	0
   348  1365  3400               	retlw	0
   349  1366  3400               	retlw	0
   350  1367  3400               	retlw	0
   351  1368  3400               	retlw	0
   352  1369  3400               	retlw	0
   353  001F                     _ADCON0	set	31
   354  001E                     _ADRESH	set	30
   355  000C                     _PIR1bits	set	12
   356  0008                     _PORTD	set	8
   357  001A                     _RCREG	set	26
   358  0018                     _RCSTAbits	set	24
   359  0019                     _TXREG	set	25
   360  005F                     _GIE	set	95
   361  00FA                     _GO_nDONE	set	250
   362  005E                     _PEIE	set	94
   363  0030                     _RB0	set	48
   364  0031                     _RB1	set	49
   365  0036                     _RB6	set	54
   366  0065                     _RCIF	set	101
   367  0044                     _RD4	set	68
   368  0045                     _RD5	set	69
   369  0046                     _RD6	set	70
   370  0064                     _TXIF	set	100
   371  009F                     _ADCON1	set	159
   372  009E                     _ADRESL	set	158
   373  0099                     _SPBRG	set	153
   374  0085                     _TRISA	set	133
   375  0088                     _TRISD	set	136
   376  0088                     _TRISDbits	set	136
   377  0098                     _TXSTAbits	set	152
   378  0465                     _RCIE	set	1125
   379  0430                     _TRISB0	set	1072
   380  0436                     _TRISB6	set	1078
   381                           
   382                           	psect	strings
   383  0941                     __pstrings:	
   384  0941                     stringtab:	
   385  0941                     __stringtab:	
   386                           
   387                           ;	String table - string pointers are 2 bytes each
   388  0941  1BFF               	btfsc	btemp+1,7
   389  0942  294B               	ljmp	stringcode
   390  0943  1383               	bcf	3,7
   391  0944  187F               	btfsc	btemp+1,0
   392  0945  1783               	bsf	3,7
   393  0946  0800               	movf	0,w
   394  0947  0A84               	incf	4,f
   395  0948  1903               	skipnz
   396  0949  0AFF               	incf	btemp+1,f
   397  094A  0008               	return
   398  094B                     stringcode:	
   399  094B  087F               	movf	btemp+1,w
   400  094C  397F               	andlw	127
   401  094D  008A               	movwf	10
   402  094E  0804               	movf	4,w
   403  094F  0A84               	incf	4,f
   404  0950  1903               	skipnz
   405  0951  0AFF               	incf	btemp+1,f
   406  0952  0082               	movwf	2
   407  0953                     __stringbase:	
   408  0953                     __end_of__stringtab:	
   409                           
   410                           	psect	stringtext
   411  0600                     __pstringtext:	
   412  0600                     STR_9:	
   413  0600  3441               	retlw	65	;'A'
   414  0601  3454               	retlw	84	;'T'
   415  0602  342B               	retlw	43	;'+'
   416  0603  3448               	retlw	72	;'H'
   417  0604  3454               	retlw	84	;'T'
   418  0605  3454               	retlw	84	;'T'
   419  0606  3450               	retlw	80	;'P'
   420  0607  3450               	retlw	80	;'P'
   421  0608  3441               	retlw	65	;'A'
   422  0609  3452               	retlw	82	;'R'
   423  060A  3441               	retlw	65	;'A'
   424  060B  343D               	retlw	61	;'='
   425  060C  3422               	retlw	34	;'"'
   426  060D  3455               	retlw	85	;'U'
   427  060E  3452               	retlw	82	;'R'
   428  060F  344C               	retlw	76	;'L'
   429  0610  3422               	retlw	34	;'"'
   430  0611  342C               	retlw	44	;','
   431  0612  3422               	retlw	34	;'"'
   432  0613  3468               	retlw	104	;'h'
   433  0614  3474               	retlw	116	;'t'
   434  0615  3474               	retlw	116	;'t'
   435  0616  3470               	retlw	112	;'p'
   436  0617  343A               	retlw	58	;':'
   437  0618  342F               	retlw	47	;'/'
   438  0619  342F               	retlw	47	;'/'
   439  061A  3431               	retlw	49	;'1'
   440  061B  3439               	retlw	57	;'9'
   441  061C  3432               	retlw	50	;'2'
   442  061D  342E               	retlw	46	;'.'
   443  061E  3432               	retlw	50	;'2'
   444  061F  3434               	retlw	52	;'4'
   445  0620  3438               	retlw	56	;'8'
   446  0621  342E               	retlw	46	;'.'
   447  0622  3431               	retlw	49	;'1'
   448  0623  3432               	retlw	50	;'2'
   449  0624  342E               	retlw	46	;'.'
   450  0625  3439               	retlw	57	;'9'
   451  0626  342F               	retlw	47	;'/'
   452  0627  347E               	retlw	126	;'~'
   453  0628  3473               	retlw	115	;'s'
   454  0629  3431               	retlw	49	;'1'
   455  062A  3434               	retlw	52	;'4'
   456  062B  3434               	retlw	52	;'4'
   457  062C  3431               	retlw	49	;'1'
   458  062D  3438               	retlw	56	;'8'
   459  062E  3436               	retlw	54	;'6'
   460  062F  342F               	retlw	47	;'/'
   461  0630  3474               	retlw	116	;'t'
   462  0631  3465               	retlw	101	;'e'
   463  0632  3473               	retlw	115	;'s'
   464  0633  3474               	retlw	116	;'t'
   465  0634  342E               	retlw	46	;'.'
   466  0635  3470               	retlw	112	;'p'
   467  0636  3468               	retlw	104	;'h'
   468  0637  3470               	retlw	112	;'p'
   469  0638  343F               	retlw	63	;'?'
   470  0639  3473               	retlw	115	;'s'
   471  063A  3470               	retlw	112	;'p'
   472  063B  3465               	retlw	101	;'e'
   473  063C  3465               	retlw	101	;'e'
   474  063D  3464               	retlw	100	;'d'
   475  063E  343D               	retlw	61	;'='
   476  063F  3400               	retlw	0
   477  0640                     STR_32:	
   478  0640  3456               	retlw	86	;'V'
   479  0641  3465               	retlw	101	;'e'
   480  0642  3468               	retlw	104	;'h'
   481  0643  3469               	retlw	105	;'i'
   482  0644  3463               	retlw	99	;'c'
   483  0645  346C               	retlw	108	;'l'
   484  0646  3465               	retlw	101	;'e'
   485  0647  3420               	retlw	32	;' '
   486  0648  3453               	retlw	83	;'S'
   487  0649  3474               	retlw	116	;'t'
   488  064A  346F               	retlw	111	;'o'
   489  064B  3470               	retlw	112	;'p'
   490  064C  3420               	retlw	32	;' '
   491  064D  3469               	retlw	105	;'i'
   492  064E  346E               	retlw	110	;'n'
   493  064F  3464               	retlw	100	;'d'
   494  0650  3469               	retlw	105	;'i'
   495  0651  3463               	retlw	99	;'c'
   496  0652  3461               	retlw	97	;'a'
   497  0653  3474               	retlw	116	;'t'
   498  0654  3465               	retlw	101	;'e'
   499  0655  3464               	retlw	100	;'d'
   500  0656  3420               	retlw	32	;' '
   501  0657  3469               	retlw	105	;'i'
   502  0658  346E               	retlw	110	;'n'
   503  0659  3420               	retlw	32	;' '
   504  065A  3444               	retlw	68	;'D'
   505  065B  3465               	retlw	101	;'e'
   506  065C  3476               	retlw	118	;'v'
   507  065D  3469               	retlw	105	;'i'
   508  065E  3463               	retlw	99	;'c'
   509  065F  3465               	retlw	101	;'e'
   510  0660  345F               	retlw	95	;'_'
   511  0661  3430               	retlw	48	;'0'
   512  0662  3431               	retlw	49	;'1'
   513  0663  3400               	retlw	0
   514  0664                     STR_25:	
   515  0664  3448               	retlw	72	;'H'
   516  0665  3469               	retlw	105	;'i'
   517  0666  3467               	retlw	103	;'g'
   518  0667  3468               	retlw	104	;'h'
   519  0668  3420               	retlw	32	;' '
   520  0669  3453               	retlw	83	;'S'
   521  066A  3470               	retlw	112	;'p'
   522  066B  3465               	retlw	101	;'e'
   523  066C  3465               	retlw	101	;'e'
   524  066D  3465               	retlw	101	;'e'
   525  066E  3464               	retlw	100	;'d'
   526  066F  3420               	retlw	32	;' '
   527  0670  3469               	retlw	105	;'i'
   528  0671  346E               	retlw	110	;'n'
   529  0672  3464               	retlw	100	;'d'
   530  0673  3469               	retlw	105	;'i'
   531  0674  3463               	retlw	99	;'c'
   532  0675  3461               	retlw	97	;'a'
   533  0676  3474               	retlw	116	;'t'
   534  0677  3465               	retlw	101	;'e'
   535  0678  3464               	retlw	100	;'d'
   536  0679  3420               	retlw	32	;' '
   537  067A  3469               	retlw	105	;'i'
   538  067B  346E               	retlw	110	;'n'
   539  067C  3420               	retlw	32	;' '
   540  067D  3444               	retlw	68	;'D'
   541  067E  3465               	retlw	101	;'e'
   542  067F  3476               	retlw	118	;'v'
   543  0680  3469               	retlw	105	;'i'
   544  0681  3463               	retlw	99	;'c'
   545  0682  3465               	retlw	101	;'e'
   546  0683  345F               	retlw	95	;'_'
   547  0684  3430               	retlw	48	;'0'
   548  0685  3431               	retlw	49	;'1'
   549  0686  3400               	retlw	0
   550  0687                     STR_5:	
   551  0687  3441               	retlw	65	;'A'
   552  0688  3454               	retlw	84	;'T'
   553  0689  342B               	retlw	43	;'+'
   554  068A  3453               	retlw	83	;'S'
   555  068B  3441               	retlw	65	;'A'
   556  068C  3450               	retlw	80	;'P'
   557  068D  3442               	retlw	66	;'B'
   558  068E  3452               	retlw	82	;'R'
   559  068F  343D               	retlw	61	;'='
   560  0690  3433               	retlw	51	;'3'
   561  0691  342C               	retlw	44	;','
   562  0692  3431               	retlw	49	;'1'
   563  0693  342C               	retlw	44	;','
   564  0694  3422               	retlw	34	;'"'
   565  0695  3443               	retlw	67	;'C'
   566  0696  344F               	retlw	79	;'O'
   567  0697  344E               	retlw	78	;'N'
   568  0698  3454               	retlw	84	;'T'
   569  0699  3459               	retlw	89	;'Y'
   570  069A  3450               	retlw	80	;'P'
   571  069B  3445               	retlw	69	;'E'
   572  069C  3422               	retlw	34	;'"'
   573  069D  342C               	retlw	44	;','
   574  069E  3422               	retlw	34	;'"'
   575  069F  3447               	retlw	71	;'G'
   576  06A0  3450               	retlw	80	;'P'
   577  06A1  3452               	retlw	82	;'R'
   578  06A2  3453               	retlw	83	;'S'
   579  06A3  3422               	retlw	34	;'"'
   580  06A4  3400               	retlw	0
   581  06A5                     STR_39:	
   582  06A5  3446               	retlw	70	;'F'
   583  06A6  3469               	retlw	105	;'i'
   584  06A7  3472               	retlw	114	;'r'
   585  06A8  3465               	retlw	101	;'e'
   586  06A9  3420               	retlw	32	;' '
   587  06AA  3449               	retlw	73	;'I'
   588  06AB  346E               	retlw	110	;'n'
   589  06AC  3464               	retlw	100	;'d'
   590  06AD  3469               	retlw	105	;'i'
   591  06AE  3463               	retlw	99	;'c'
   592  06AF  3461               	retlw	97	;'a'
   593  06B0  3474               	retlw	116	;'t'
   594  06B1  3465               	retlw	101	;'e'
   595  06B2  3464               	retlw	100	;'d'
   596  06B3  3420               	retlw	32	;' '
   597  06B4  3469               	retlw	105	;'i'
   598  06B5  346E               	retlw	110	;'n'
   599  06B6  3420               	retlw	32	;' '
   600  06B7  3444               	retlw	68	;'D'
   601  06B8  3465               	retlw	101	;'e'
   602  06B9  3476               	retlw	118	;'v'
   603  06BA  3469               	retlw	105	;'i'
   604  06BB  3463               	retlw	99	;'c'
   605  06BC  3465               	retlw	101	;'e'
   606  06BD  345F               	retlw	95	;'_'
   607  06BE  3430               	retlw	48	;'0'
   608  06BF  3431               	retlw	49	;'1'
   609  06C0  3400               	retlw	0
   610  06C1                     STR_6:	
   611  06C1  3441               	retlw	65	;'A'
   612  06C2  3454               	retlw	84	;'T'
   613  06C3  342B               	retlw	43	;'+'
   614  06C4  3453               	retlw	83	;'S'
   615  06C5  3441               	retlw	65	;'A'
   616  06C6  3450               	retlw	80	;'P'
   617  06C7  3442               	retlw	66	;'B'
   618  06C8  3452               	retlw	82	;'R'
   619  06C9  343D               	retlw	61	;'='
   620  06CA  3433               	retlw	51	;'3'
   621  06CB  342C               	retlw	44	;','
   622  06CC  3431               	retlw	49	;'1'
   623  06CD  342C               	retlw	44	;','
   624  06CE  3422               	retlw	34	;'"'
   625  06CF  3441               	retlw	65	;'A'
   626  06D0  3450               	retlw	80	;'P'
   627  06D1  344E               	retlw	78	;'N'
   628  06D2  3422               	retlw	34	;'"'
   629  06D3  342C               	retlw	44	;','
   630  06D4  3422               	retlw	34	;'"'
   631  06D5  3443               	retlw	67	;'C'
   632  06D6  344D               	retlw	77	;'M'
   633  06D7  344E               	retlw	78	;'N'
   634  06D8  3445               	retlw	69	;'E'
   635  06D9  3454               	retlw	84	;'T'
   636  06DA  3422               	retlw	34	;'"'
   637  06DB  3400               	retlw	0
   638  06DC                     STR_24:	
   639  06DC  3441               	retlw	65	;'A'
   640  06DD  3454               	retlw	84	;'T'
   641  06DE  342B               	retlw	43	;'+'
   642  06DF  3443               	retlw	67	;'C'
   643  06E0  344D               	retlw	77	;'M'
   644  06E1  3447               	retlw	71	;'G'
   645  06E2  3453               	retlw	83	;'S'
   646  06E3  343D               	retlw	61	;'='
   647  06E4  3422               	retlw	34	;'"'
   648  06E5  342B               	retlw	43	;'+'
   649  06E6  3439               	retlw	57	;'9'
   650  06E7  3434               	retlw	52	;'4'
   651  06E8  3437               	retlw	55	;'7'
   652  06E9  3431               	retlw	49	;'1'
   653  06EA  3432               	retlw	50	;'2'
   654  06EB  3434               	retlw	52	;'4'
   655  06EC  3431               	retlw	49	;'1'
   656  06ED  3439               	retlw	57	;'9'
   657  06EE  3436               	retlw	54	;'6'
   658  06EF  3431               	retlw	49	;'1'
   659  06F0  3438               	retlw	56	;'8'
   660  06F1  3422               	retlw	34	;'"'
   661  06F2  340D               	retlw	13
   662  06F3  3400               	retlw	0
   663  06F4                     STR_41:	
   664  06F4  3457               	retlw	87	;'W'
   665  06F5  3461               	retlw	97	;'a'
   666  06F6  3469               	retlw	105	;'i'
   667  06F7  3474               	retlw	116	;'t'
   668  06F8  3420               	retlw	32	;' '
   669  06F9  3446               	retlw	70	;'F'
   670  06FA  346F               	retlw	111	;'o'
   671  06FB  3472               	retlw	114	;'r'
   672  06FC  3420               	retlw	32	;' '
   673  06FD  3441               	retlw	65	;'A'
   674  06FE  3473               	retlw	115	;'s'
   675  06FF  3473               	retlw	115	;'s'
   676  0700  3469               	retlw	105	;'i'
   677  0701  3473               	retlw	115	;'s'
   678  0702  3474               	retlw	116	;'t'
   679  0703  3461               	retlw	97	;'a'
   680  0704  346E               	retlw	110	;'n'
   681  0705  3463               	retlw	99	;'c'
   682  0706  3465               	retlw	101	;'e'
   683  0707  3400               	retlw	0
   684  0708                     STR_52:	
   685  0708  3432               	retlw	50	;'2'
   686  0709  342E               	retlw	46	;'.'
   687  070A  3444               	retlw	68	;'D'
   688  070B  346F               	retlw	111	;'o'
   689  070C  346E               	retlw	110	;'n'
   690  070D  3427               	retlw	39	;'''
   691  070E  3474               	retlw	116	;'t'
   692  070F  3420               	retlw	32	;' '
   693  0710  3466               	retlw	102	;'f'
   694  0711  346F               	retlw	111	;'o'
   695  0712  3472               	retlw	114	;'r'
   696  0713  3467               	retlw	103	;'g'
   697  0714  3465               	retlw	101	;'e'
   698  0715  3474               	retlw	116	;'t'
   699  0716  3420               	retlw	32	;' '
   700  0717  3473               	retlw	115	;'s'
   701  0718  3465               	retlw	101	;'e'
   702  0719  3461               	retlw	97	;'a'
   703  071A  3474               	retlw	116	;'t'
   704  071B  3400               	retlw	0
   705  071C                     STR_59:	
   706  071C  3445               	retlw	69	;'E'
   707  071D  344C               	retlw	76	;'L'
   708  071E  3453               	retlw	83	;'S'
   709  071F  3420               	retlw	32	;' '
   710  0720  3477               	retlw	119	;'w'
   711  0721  3469               	retlw	105	;'i'
   712  0722  346C               	retlw	108	;'l'
   713  0723  346C               	retlw	108	;'l'
   714  0724  3420               	retlw	32	;' '
   715  0725  3474               	retlw	116	;'t'
   716  0726  3461               	retlw	97	;'a'
   717  0727  346B               	retlw	107	;'k'
   718  0728  3465               	retlw	101	;'e'
   719  0729  3420               	retlw	32	;' '
   720  072A  3463               	retlw	99	;'c'
   721  072B  3461               	retlw	97	;'a'
   722  072C  3472               	retlw	114	;'r'
   723  072D  3465               	retlw	101	;'e'
   724  072E  3400               	retlw	0
   725  072F                     STR_50:	
   726  072F  3431               	retlw	49	;'1'
   727  0730  342E               	retlw	46	;'.'
   728  0731  3448               	retlw	72	;'H'
   729  0732  346F               	retlw	111	;'o'
   730  0733  3470               	retlw	112	;'p'
   731  0734  3465               	retlw	101	;'e'
   732  0735  3420               	retlw	32	;' '
   733  0736  3479               	retlw	121	;'y'
   734  0737  346F               	retlw	111	;'o'
   735  0738  3475               	retlw	117	;'u'
   736  0739  3420               	retlw	32	;' '
   737  073A  3461               	retlw	97	;'a'
   738  073B  3472               	retlw	114	;'r'
   739  073C  3465               	retlw	101	;'e'
   740  073D  3420               	retlw	32	;' '
   741  073E  346E               	retlw	110	;'n'
   742  073F  346F               	retlw	111	;'o'
   743  0740  3474               	retlw	116	;'t'
   744  0741  3400               	retlw	0
   745  0742                     STR_28:	
   746  0742  3457               	retlw	87	;'W'
   747  0743  3461               	retlw	97	;'a'
   748  0744  3469               	retlw	105	;'i'
   749  0745  3474               	retlw	116	;'t'
   750  0746  3420               	retlw	32	;' '
   751  0747  3466               	retlw	102	;'f'
   752  0748  346F               	retlw	111	;'o'
   753  0749  3472               	retlw	114	;'r'
   754  074A  3420               	retlw	32	;' '
   755  074B  3445               	retlw	69	;'E'
   756  074C  346D               	retlw	109	;'m'
   757  074D  3465               	retlw	101	;'e'
   758  074E  3472               	retlw	114	;'r'
   759  074F  3467               	retlw	103	;'g'
   760  0750  3465               	retlw	101	;'e'
   761  0751  346E               	retlw	110	;'n'
   762  0752  3463               	retlw	99	;'c'
   763  0753  3479               	retlw	121	;'y'
   764  0754  3400               	retlw	0
   765  0755                     STR_20:	
   766  0755  3457               	retlw	87	;'W'
   767  0756  3468               	retlw	104	;'h'
   768  0757  3461               	retlw	97	;'a'
   769  0758  3474               	retlw	116	;'t'
   770  0759  3427               	retlw	39	;'''
   771  075A  3473               	retlw	115	;'s'
   772  075B  3420               	retlw	32	;' '
   773  075C  3474               	retlw	116	;'t'
   774  075D  3468               	retlw	104	;'h'
   775  075E  3465               	retlw	101	;'e'
   776  075F  3420               	retlw	32	;' '
   777  0760  3468               	retlw	104	;'h'
   778  0761  3475               	retlw	117	;'u'
   779  0762  3472               	retlw	114	;'r'
   780  0763  3472               	retlw	114	;'r'
   781  0764  3479               	retlw	121	;'y'
   782  0765  3421               	retlw	33	;'!'
   783  0766  3400               	retlw	0
   784  0767                     STR_57:	
   785  0767  3448               	retlw	72	;'H'
   786  0768  3461               	retlw	97	;'a'
   787  0769  3476               	retlw	118	;'v'
   788  076A  3465               	retlw	101	;'e'
   789  076B  3420               	retlw	32	;' '
   790  076C  3461               	retlw	97	;'a'
   791  076D  3420               	retlw	32	;' '
   792  076E  3473               	retlw	115	;'s'
   793  076F  3461               	retlw	97	;'a'
   794  0770  3466               	retlw	102	;'f'
   795  0771  3465               	retlw	101	;'e'
   796  0772  3420               	retlw	32	;' '
   797  0773  3464               	retlw	100	;'d'
   798  0774  3472               	retlw	114	;'r'
   799  0775  3469               	retlw	105	;'i'
   800  0776  3476               	retlw	118	;'v'
   801  0777  3465               	retlw	101	;'e'
   802  0778  3400               	retlw	0
   803  0779                     STR_61:	
   804  0779  3444               	retlw	68	;'D'
   805  077A  3465               	retlw	101	;'e'
   806  077B  3476               	retlw	118	;'v'
   807  077C  3469               	retlw	105	;'i'
   808  077D  3463               	retlw	99	;'c'
   809  077E  3465               	retlw	101	;'e'
   810  077F  3420               	retlw	32	;' '
   811  0780  3477               	retlw	119	;'w'
   812  0781  3469               	retlw	105	;'i'
   813  0782  346C               	retlw	108	;'l'
   814  0783  346C               	retlw	108	;'l'
   815  0784  3420               	retlw	32	;' '
   816  0785  3473               	retlw	115	;'s'
   817  0786  3474               	retlw	116	;'t'
   818  0787  3461               	retlw	97	;'a'
   819  0788  3472               	retlw	114	;'r'
   820  0789  3474               	retlw	116	;'t'
   821  078A  3400               	retlw	0
   822  078B                     STR_33:	
   823  078B  3446               	retlw	70	;'F'
   824  078C  3469               	retlw	105	;'i'
   825  078D  3472               	retlw	114	;'r'
   826  078E  3465               	retlw	101	;'e'
   827  078F  3420               	retlw	32	;' '
   828  0790  3449               	retlw	73	;'I'
   829  0791  346E               	retlw	110	;'n'
   830  0792  3464               	retlw	100	;'d'
   831  0793  3469               	retlw	105	;'i'
   832  0794  3463               	retlw	99	;'c'
   833  0795  3461               	retlw	97	;'a'
   834  0796  3474               	retlw	116	;'t'
   835  0797  3465               	retlw	101	;'e'
   836  0798  3464               	retlw	100	;'d'
   837  0799  3421               	retlw	33	;'!'
   838  079A  3421               	retlw	33	;'!'
   839  079B  3400               	retlw	0
   840  079C                     STR_1:	
   841  079C  3453               	retlw	83	;'S'
   842  079D  3465               	retlw	101	;'e'
   843  079E  346E               	retlw	110	;'n'
   844  079F  3464               	retlw	100	;'d'
   845  07A0  3469               	retlw	105	;'i'
   846  07A1  346E               	retlw	110	;'n'
   847  07A2  3467               	retlw	103	;'g'
   848  07A3  3420               	retlw	32	;' '
   849  07A4  3444               	retlw	68	;'D'
   850  07A5  3461               	retlw	97	;'a'
   851  07A6  3474               	retlw	116	;'t'
   852  07A7  3461               	retlw	97	;'a'
   853  07A8  3420               	retlw	32	;' '
   854  07A9  3476               	retlw	118	;'v'
   855  07AA  3469               	retlw	105	;'i'
   856  07AB  3461               	retlw	97	;'a'
   857  07AC  3400               	retlw	0
   858  07AD                     STR_26:	
   859  07AD  3459               	retlw	89	;'Y'
   860  07AE  346F               	retlw	111	;'o'
   861  07AF  3475               	retlw	117	;'u'
   862  07B0  3420               	retlw	32	;' '
   863  07B1  3461               	retlw	97	;'a'
   864  07B2  3472               	retlw	114	;'r'
   865  07B3  3465               	retlw	101	;'e'
   866  07B4  3420               	retlw	32	;' '
   867  07B5  3474               	retlw	116	;'t'
   868  07B6  346F               	retlw	111	;'o'
   869  07B7  346F               	retlw	111	;'o'
   870  07B8  3420               	retlw	32	;' '
   871  07B9  3473               	retlw	115	;'s'
   872  07BA  346C               	retlw	108	;'l'
   873  07BB  346F               	retlw	111	;'o'
   874  07BC  3477               	retlw	119	;'w'
   875  07BD  3400               	retlw	0
   876  07BE                     STR_13:	
   877  07BE  3441               	retlw	65	;'A'
   878  07BF  3454               	retlw	84	;'T'
   879  07C0  342B               	retlw	43	;'+'
   880  07C1  3448               	retlw	72	;'H'
   881  07C2  3454               	retlw	84	;'T'
   882  07C3  3454               	retlw	84	;'T'
   883  07C4  3450               	retlw	80	;'P'
   884  07C5  3441               	retlw	65	;'A'
   885  07C6  3443               	retlw	67	;'C'
   886  07C7  3454               	retlw	84	;'T'
   887  07C8  3449               	retlw	73	;'I'
   888  07C9  344F               	retlw	79	;'O'
   889  07CA  344E               	retlw	78	;'N'
   890  07CB  343D               	retlw	61	;'='
   891  07CC  3430               	retlw	48	;'0'
   892  07CD  3400               	retlw	0
   893  07CE                     STR_27:	
   894  07CE  3448               	retlw	72	;'H'
   895  07CF  3461               	retlw	97	;'a'
   896  07D0  3476               	retlw	118	;'v'
   897  07D1  3469               	retlw	105	;'i'
   898  07D2  346E               	retlw	110	;'n'
   899  07D3  3467               	retlw	103	;'g'
   900  07D4  3420               	retlw	32	;' '
   901  07D5  3454               	retlw	84	;'T'
   902  07D6  3472               	retlw	114	;'r'
   903  07D7  346F               	retlw	111	;'o'
   904  07D8  3475               	retlw	117	;'u'
   905  07D9  3462               	retlw	98	;'b'
   906  07DA  346C               	retlw	108	;'l'
   907  07DB  3465               	retlw	101	;'e'
   908  07DC  343F               	retlw	63	;'?'
   909  07DD  3400               	retlw	0
   910  07DE                     STR_34:	
   911  07DE  3453               	retlw	83	;'S'
   912  07DF  3465               	retlw	101	;'e'
   913  07E0  346E               	retlw	110	;'n'
   914  07E1  3464               	retlw	100	;'d'
   915  07E2  3469               	retlw	105	;'i'
   916  07E3  346E               	retlw	110	;'n'
   917  07E4  3467               	retlw	103	;'g'
   918  07E5  3420               	retlw	32	;' '
   919  07E6  344D               	retlw	77	;'M'
   920  07E7  3465               	retlw	101	;'e'
   921  07E8  3473               	retlw	115	;'s'
   922  07E9  3473               	retlw	115	;'s'
   923  07EA  3461               	retlw	97	;'a'
   924  07EB  3467               	retlw	103	;'g'
   925  07EC  3465               	retlw	101	;'e'
   926  07ED  3400               	retlw	0
   927  07EE                     STR_21:	
   928  07EE  344C               	retlw	76	;'L'
   929  07EF  3465               	retlw	101	;'e'
   930  07F0  3474               	retlw	116	;'t'
   931  07F1  3427               	retlw	39	;'''
   932  07F2  3473               	retlw	115	;'s'
   933  07F3  3420               	retlw	32	;' '
   934  07F4  3473               	retlw	115	;'s'
   935  07F5  346C               	retlw	108	;'l'
   936  07F6  346F               	retlw	111	;'o'
   937  07F7  3477               	retlw	119	;'w'
   938  07F8  3420               	retlw	32	;' '
   939  07F9  3464               	retlw	100	;'d'
   940  07FA  346F               	retlw	111	;'o'
   941  07FB  3477               	retlw	119	;'w'
   942  07FC  346E               	retlw	110	;'n'
   943  07FD  3400               	retlw	0
   944  07FE                     STR_55:	
   945  07FE  344C               	retlw	76	;'L'
   946  07FF  3465               	retlw	101	;'e'
   947  0800  3474               	retlw	116	;'t'
   948  0801  3427               	retlw	39	;'''
   949  0802  3473               	retlw	115	;'s'
   950  0803  3420               	retlw	32	;' '
   951  0804  346C               	retlw	108	;'l'
   952  0805  3469               	retlw	105	;'i'
   953  0806  3473               	retlw	115	;'s'
   954  0807  3474               	retlw	116	;'t'
   955  0808  3465               	retlw	101	;'e'
   956  0809  346E               	retlw	110	;'n'
   957  080A  3420               	retlw	32	;' '
   958  080B  3474               	retlw	116	;'t'
   959  080C  346F               	retlw	111	;'o'
   960  080D  3400               	retlw	0
   961  080E                     STR_42:	
   962  080E  3450               	retlw	80	;'P'
   963  080F  346C               	retlw	108	;'l'
   964  0810  3465               	retlw	101	;'e'
   965  0811  3461               	retlw	97	;'a'
   966  0812  3473               	retlw	115	;'s'
   967  0813  3465               	retlw	101	;'e'
   968  0814  3420               	retlw	32	;' '
   969  0815  3453               	retlw	83	;'S'
   970  0816  3474               	retlw	116	;'t'
   971  0817  3461               	retlw	97	;'a'
   972  0818  3479               	retlw	121	;'y'
   973  0819  3420               	retlw	32	;' '
   974  081A  344F               	retlw	79	;'O'
   975  081B  3475               	retlw	117	;'u'
   976  081C  3474               	retlw	116	;'t'
   977  081D  3400               	retlw	0
   978  081E                     STR_48:	
   979  081E  3454               	retlw	84	;'T'
   980  081F  3475               	retlw	117	;'u'
   981  0820  3472               	retlw	114	;'r'
   982  0821  346E               	retlw	110	;'n'
   983  0822  3469               	retlw	105	;'i'
   984  0823  346E               	retlw	110	;'n'
   985  0824  3467               	retlw	103	;'g'
   986  0825  3420               	retlw	32	;' '
   987  0826  3447               	retlw	71	;'G'
   988  0827  3453               	retlw	83	;'S'
   989  0828  344D               	retlw	77	;'M'
   990  0829  3420               	retlw	32	;' '
   991  082A  344F               	retlw	79	;'O'
   992  082B  344E               	retlw	78	;'N'
   993  082C  3400               	retlw	0
   994  082D                     STR_22:	
   995  082D  3457               	retlw	87	;'W'
   996  082E  3461               	retlw	97	;'a'
   997  082F  3472               	retlw	114	;'r'
   998  0830  346E               	retlw	110	;'n'
   999  0831  3469               	retlw	105	;'i'
  1000  0832  346E               	retlw	110	;'n'
  1001  0833  3467               	retlw	103	;'g'
  1002  0834  3420               	retlw	32	;' '
  1003  0835  344E               	retlw	78	;'N'
  1004  0836  346F               	retlw	111	;'o'
  1005  0837  342E               	retlw	46	;'.'
  1006  0838  3420               	retlw	32	;' '
  1007  0839  343A               	retlw	58	;':'
  1008  083A  3400               	retlw	0
  1009  083B                     STR_7:	
  1010  083B  3441               	retlw	65	;'A'
  1011  083C  3454               	retlw	84	;'T'
  1012  083D  342B               	retlw	43	;'+'
  1013  083E  3453               	retlw	83	;'S'
  1014  083F  3441               	retlw	65	;'A'
  1015  0840  3450               	retlw	80	;'P'
  1016  0841  3442               	retlw	66	;'B'
  1017  0842  3452               	retlw	82	;'R'
  1018  0843  343D               	retlw	61	;'='
  1019  0844  3431               	retlw	49	;'1'
  1020  0845  342C               	retlw	44	;','
  1021  0846  3431               	retlw	49	;'1'
  1022  0847  3400               	retlw	0
  1023  0848                     STR_43:	
  1024  0848  3446               	retlw	70	;'F'
  1025  0849  3472               	retlw	114	;'r'
  1026  084A  346F               	retlw	111	;'o'
  1027  084B  346D               	retlw	109	;'m'
  1028  084C  3420               	retlw	32	;' '
  1029  084D  3456               	retlw	86	;'V'
  1030  084E  3465               	retlw	101	;'e'
  1031  084F  3468               	retlw	104	;'h'
  1032  0850  3469               	retlw	105	;'i'
  1033  0851  3463               	retlw	99	;'c'
  1034  0852  346C               	retlw	108	;'l'
  1035  0853  3465               	retlw	101	;'e'
  1036  0854  3400               	retlw	0
  1037  0855                     STR_14:	
  1038  0855  3453               	retlw	83	;'S'
  1039  0856  3465               	retlw	101	;'e'
  1040  0857  346E               	retlw	110	;'n'
  1041  0858  3464               	retlw	100	;'d'
  1042  0859  3469               	retlw	105	;'i'
  1043  085A  346E               	retlw	110	;'n'
  1044  085B  3467               	retlw	103	;'g'
  1045  085C  3420               	retlw	32	;' '
  1046  085D  344F               	retlw	79	;'O'
  1047  085E  3476               	retlw	118	;'v'
  1048  085F  3465               	retlw	101	;'e'
  1049  0860  3472               	retlw	114	;'r'
  1050  0861  3400               	retlw	0
  1051  0862                     STR_40:	
  1052  0862  344D               	retlw	77	;'M'
  1053  0863  3465               	retlw	101	;'e'
  1054  0864  3473               	retlw	115	;'s'
  1055  0865  3473               	retlw	115	;'s'
  1056  0866  3461               	retlw	97	;'a'
  1057  0867  3467               	retlw	103	;'g'
  1058  0868  3465               	retlw	101	;'e'
  1059  0869  3420               	retlw	32	;' '
  1060  086A  3453               	retlw	83	;'S'
  1061  086B  3465               	retlw	101	;'e'
  1062  086C  346E               	retlw	110	;'n'
  1063  086D  3474               	retlw	116	;'t'
  1064  086E  3400               	retlw	0
  1065  086F                     STR_35:	
  1066  086F  3454               	retlw	84	;'T'
  1067  0870  346F               	retlw	111	;'o'
  1068  0871  3420               	retlw	32	;' '
  1069  0872  3445               	retlw	69	;'E'
  1070  0873  346D               	retlw	109	;'m'
  1071  0874  3465               	retlw	101	;'e'
  1072  0875  3472               	retlw	114	;'r'
  1073  0876  3467               	retlw	103	;'g'
  1074  0877  3465               	retlw	101	;'e'
  1075  0878  346E               	retlw	110	;'n'
  1076  0879  3463               	retlw	99	;'c'
  1077  087A  3479               	retlw	121	;'y'
  1078  087B  3400               	retlw	0
  1079  087C                     STR_8:	
  1080  087C  3441               	retlw	65	;'A'
  1081  087D  3454               	retlw	84	;'T'
  1082  087E  342B               	retlw	43	;'+'
  1083  087F  3448               	retlw	72	;'H'
  1084  0880  3454               	retlw	84	;'T'
  1085  0881  3454               	retlw	84	;'T'
  1086  0882  3450               	retlw	80	;'P'
  1087  0883  3449               	retlw	73	;'I'
  1088  0884  344E               	retlw	78	;'N'
  1089  0885  3449               	retlw	73	;'I'
  1090  0886  3454               	retlw	84	;'T'
  1091  0887  3400               	retlw	0
  1092  0888                     STR_49:	
  1093  0888  3447               	retlw	71	;'G'
  1094  0889  3453               	retlw	83	;'S'
  1095  088A  344D               	retlw	77	;'M'
  1096  088B  3420               	retlw	32	;' '
  1097  088C  3452               	retlw	82	;'R'
  1098  088D  3475               	retlw	117	;'u'
  1099  088E  346E               	retlw	110	;'n'
  1100  088F  346E               	retlw	110	;'n'
  1101  0890  3469               	retlw	105	;'i'
  1102  0891  346E               	retlw	110	;'n'
  1103  0892  3467               	retlw	103	;'g'
  1104  0893  3400               	retlw	0
  1105  0894                     STR_47:	
  1106  0894  344C               	retlw	76	;'L'
  1107  0895  3469               	retlw	105	;'i'
  1108  0896  3466               	retlw	102	;'f'
  1109  0897  3465               	retlw	101	;'e'
  1110  0898  3420               	retlw	32	;' '
  1111  0899  3453               	retlw	83	;'S'
  1112  089A  3461               	retlw	97	;'a'
  1113  089B  3476               	retlw	118	;'v'
  1114  089C  3465               	retlw	101	;'e'
  1115  089D  3472               	retlw	114	;'r'
  1116  089E  3400               	retlw	0
  1117  089F                     STR_46:	
  1118  089F  3445               	retlw	69	;'E'
  1119  08A0  3478               	retlw	120	;'x'
  1120  08A1  3470               	retlw	112	;'p'
  1121  08A2  3472               	retlw	114	;'r'
  1122  08A3  3465               	retlw	101	;'e'
  1123  08A4  3473               	retlw	115	;'s'
  1124  08A5  3473               	retlw	115	;'s'
  1125  08A6  3477               	retlw	119	;'w'
  1126  08A7  3461               	retlw	97	;'a'
  1127  08A8  3479               	retlw	121	;'y'
  1128  08A9  3400               	retlw	0
  1129  08AA                     STR_2:	
  1130  08AA  3447               	retlw	71	;'G'
  1131  08AB  3450               	retlw	80	;'P'
  1132  08AC  3452               	retlw	82	;'R'
  1133  08AD  3453               	retlw	83	;'S'
  1134  08AE  342E               	retlw	46	;'.'
  1135  08AF  342E               	retlw	46	;'.'
  1136  08B0  342E               	retlw	46	;'.'
  1137  08B1  342E               	retlw	46	;'.'
  1138  08B2  342E               	retlw	46	;'.'
  1139  08B3  3400               	retlw	0
  1140  08B4                     STR_23:	
  1141  08B4  3441               	retlw	65	;'A'
  1142  08B5  3454               	retlw	84	;'T'
  1143  08B6  342B               	retlw	43	;'+'
  1144  08B7  3443               	retlw	67	;'C'
  1145  08B8  344D               	retlw	77	;'M'
  1146  08B9  3447               	retlw	71	;'G'
  1147  08BA  3446               	retlw	70	;'F'
  1148  08BB  343D               	retlw	61	;'='
  1149  08BC  3431               	retlw	49	;'1'
  1150  08BD  3400               	retlw	0
  1151  08BE                     STR_4:	
  1152  08BE  3441               	retlw	65	;'A'
  1153  08BF  3454               	retlw	84	;'T'
  1154  08C0  342B               	retlw	43	;'+'
  1155  08C1  3443               	retlw	67	;'C'
  1156  08C2  3447               	retlw	71	;'G'
  1157  08C3  3441               	retlw	65	;'A'
  1158  08C4  3454               	retlw	84	;'T'
  1159  08C5  3454               	retlw	84	;'T'
  1160  08C6  343F               	retlw	63	;'?'
  1161  08C7  3400               	retlw	0
  1162  08C8                     STR_56:	
  1163  08C8  3474               	retlw	116	;'t'
  1164  08C9  3468               	retlw	104	;'h'
  1165  08CA  3465               	retlw	101	;'e'
  1166  08CB  3420               	retlw	32	;' '
  1167  08CC  3452               	retlw	82	;'R'
  1168  08CD  3461               	retlw	97	;'a'
  1169  08CE  3464               	retlw	100	;'d'
  1170  08CF  3469               	retlw	105	;'i'
  1171  08D0  346F               	retlw	111	;'o'
  1172  08D1  3400               	retlw	0
  1173  08D2                     STR_11:	
  1174  08D2  3426               	retlw	38	;'&'
  1175  08D3  346C               	retlw	108	;'l'
  1176  08D4  346F               	retlw	111	;'o'
  1177  08D5  346E               	retlw	110	;'n'
  1178  08D6  3467               	retlw	103	;'g'
  1179  08D7  3461               	retlw	97	;'a'
  1180  08D8  343D               	retlw	61	;'='
  1181  08D9  3400               	retlw	0
  1182  08DA                     STR_54:	
  1183  08DA  3453               	retlw	83	;'S'
  1184  08DB  346C               	retlw	108	;'l'
  1185  08DC  3465               	retlw	101	;'e'
  1186  08DD  3465               	retlw	101	;'e'
  1187  08DE  3470               	retlw	112	;'p'
  1188  08DF  3479               	retlw	121	;'y'
  1189  08E0  343F               	retlw	63	;'?'
  1190  08E1  3400               	retlw	0
  1191  08E2                     STR_44:	
  1192  08E2  3457               	retlw	87	;'W'
  1193  08E3  3465               	retlw	101	;'e'
  1194  08E4  346C               	retlw	108	;'l'
  1195  08E5  3463               	retlw	99	;'c'
  1196  08E6  346F               	retlw	111	;'o'
  1197  08E7  346D               	retlw	109	;'m'
  1198  08E8  3465               	retlw	101	;'e'
  1199  08E9  3400               	retlw	0
  1200  08EA                     STR_63:	
  1201  08EA  3473               	retlw	115	;'s'
  1202  08EB  3465               	retlw	101	;'e'
  1203  08EC  3463               	retlw	99	;'c'
  1204  08ED  346F               	retlw	111	;'o'
  1205  08EE  346E               	retlw	110	;'n'
  1206  08EF  3464               	retlw	100	;'d'
  1207  08F0  3473               	retlw	115	;'s'
  1208  08F1  3400               	retlw	0
  1209  08F2                     STR_10:	
  1210  08F2  3426               	retlw	38	;'&'
  1211  08F3  346C               	retlw	108	;'l'
  1212  08F4  3461               	retlw	97	;'a'
  1213  08F5  3474               	retlw	116	;'t'
  1214  08F6  3461               	retlw	97	;'a'
  1215  08F7  343D               	retlw	61	;'='
  1216  08F8  3400               	retlw	0
  1217  08F9                     STR_3:	
  1218  08F9  3441               	retlw	65	;'A'
  1219  08FA  3454               	retlw	84	;'T'
  1220  08FB  342B               	retlw	43	;'+'
  1221  08FC  3443               	retlw	67	;'C'
  1222  08FD  3453               	retlw	83	;'S'
  1223  08FE  3451               	retlw	81	;'Q'
  1224  08FF  3400               	retlw	0
  1225  0900                     STR_60:	
  1226  0900  346F               	retlw	111	;'o'
  1227  0901  3466               	retlw	102	;'f'
  1228  0902  3420               	retlw	32	;' '
  1229  0903  3479               	retlw	121	;'y'
  1230  0904  346F               	retlw	111	;'o'
  1231  0905  3475               	retlw	117	;'u'
  1232  0906  3400               	retlw	0
  1233  0907                     STR_19:	
  1234  0907  344F               	retlw	79	;'O'
  1235  0908  344F               	retlw	79	;'O'
  1236  0909  3450               	retlw	80	;'P'
  1237  090A  3453               	retlw	83	;'S'
  1238  090B  3421               	retlw	33	;'!'
  1239  090C  3400               	retlw	0
  1240  090D                     STR_16:	
  1241  090D  344C               	retlw	76	;'L'
  1242  090E  346F               	retlw	111	;'o'
  1243  090F  346E               	retlw	110	;'n'
  1244  0910  3420               	retlw	32	;' '
  1245  0911  343A               	retlw	58	;':'
  1246  0912  3400               	retlw	0
  1247  0913                     STR_15:	
  1248  0913  344C               	retlw	76	;'L'
  1249  0914  3461               	retlw	97	;'a'
  1250  0915  3474               	retlw	116	;'t'
  1251  0916  3420               	retlw	32	;' '
  1252  0917  343A               	retlw	58	;':'
  1253  0918  3400               	retlw	0
  1254  0919                     STR_17:	
  1255  0919  344B               	retlw	75	;'K'
  1256  091A  346D               	retlw	109	;'m'
  1257  091B  3470               	retlw	112	;'p'
  1258  091C  3468               	retlw	104	;'h'
  1259  091D  343A               	retlw	58	;':'
  1260  091E  3400               	retlw	0
  1261  091F                     STR_18:	
  1262  091F  344B               	retlw	75	;'K'
  1263  0920  346E               	retlw	110	;'n'
  1264  0921  346F               	retlw	111	;'o'
  1265  0922  3474               	retlw	116	;'t'
  1266  0923  343A               	retlw	58	;':'
  1267  0924  3400               	retlw	0
  1268  0925                     STR_51:	
  1269  0925  3464               	retlw	100	;'d'
  1270  0926  3472               	retlw	114	;'r'
  1271  0927  3475               	retlw	117	;'u'
  1272  0928  346E               	retlw	110	;'n'
  1273  0929  346B               	retlw	107	;'k'
  1274  092A  3400               	retlw	0
  1275  092B                     STR_29:	
  1276  092B  3455               	retlw	85	;'U'
  1277  092C  346E               	retlw	110	;'n'
  1278  092D  3469               	retlw	105	;'i'
  1279  092E  3474               	retlw	116	;'t'
  1280  092F  3473               	retlw	115	;'s'
  1281  0930  3400               	retlw	0
  1282  0931                     STR_53:	
  1283  0931  3462               	retlw	98	;'b'
  1284  0932  3465               	retlw	101	;'e'
  1285  0933  346C               	retlw	108	;'l'
  1286  0934  3474               	retlw	116	;'t'
  1287  0935  3473               	retlw	115	;'s'
  1288  0936  3400               	retlw	0
  1289  0937                     STR_62:	
  1290  0937  3469               	retlw	105	;'i'
  1291  0938  346E               	retlw	110	;'n'
  1292  0939  3420               	retlw	32	;' '
  1293  093A  3400               	retlw	0
  1294  093B                     STR_58:	
  1295  093B  343A               	retlw	58	;':'
  1296  093C  3429               	retlw	41	;')'
  1297  093D  3400               	retlw	0
  1298  093E                     STR_45:	
  1299  093E  3454               	retlw	84	;'T'
  1300  093F  346F               	retlw	111	;'o'
  1301  0940  3400               	retlw	0
  1302  06DC                     
  1303                           ; #config settings
  1304  0000                     
  1305                           	psect	cinit
  1306  0015                     start_initialization:	
  1307  0015                     __initialization:	
  1308                           
  1309                           ; Clear objects allocated to COMMON
  1310  0015  01F9               	clrf	__pbssCOMMON& (0+127)
  1311  0016  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
  1312  0017  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
  1313  0018  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
  1314                           
  1315                           ; Clear objects allocated to BANK0
  1316  0019  1383               	bcf	3,7	;select IRP bank0
  1317  001A  3063               	movlw	low __pbssBANK0
  1318  001B  0084               	movwf	4
  1319  001C  306D               	movlw	low (__pbssBANK0+10)
  1320  001D  160A  118A  21E8  120A  118A  	fcall	clear_ram0
  1321                           
  1322                           ; Clear objects allocated to BANK1
  1323  0022  30C2               	movlw	low __pbssBANK1
  1324  0023  0084               	movwf	4
  1325  0024  30E2               	movlw	low (__pbssBANK1+32)
  1326  0025  160A  118A  21E8  120A  118A  	fcall	clear_ram0
  1327                           
  1328                           ; Clear objects allocated to BANK3
  1329  002A  1783               	bsf	3,7	;select IRP bank2
  1330  002B  3090               	movlw	low __pbssBANK3
  1331  002C  0084               	movwf	4
  1332  002D  30D0               	movlw	low (__pbssBANK3+64)
  1333  002E  160A  118A  21E8  120A  118A  	fcall	clear_ram0
  1334                           
  1335                           ; Initialize objects allocated to BANK2
  1336  0033  3050               	movlw	low (__pdataBANK2+64)
  1337  0034  00FD               	movwf	btemp+-1
  1338  0035  3013               	movlw	high __pidataBANK2
  1339  0036  00FE               	movwf	btemp
  1340  0037  302A               	movlw	low __pidataBANK2
  1341  0038  00FF               	movwf	btemp+1
  1342  0039  3010               	movlw	low __pdataBANK2
  1343  003A  0084               	movwf	4
  1344  003B  160A  118A  21F4   	fcall	init_ram0
  1345  003E                     end_of_initialization:	
  1346                           ;End of C runtime variable initialization code
  1347                           
  1348  003E                     __end_of__initialization:	
  1349  003E  0183               	clrf	3
  1350  003F  120A  158A  2D0D   	ljmp	_main	;jump to C main() function
  1351                           
  1352                           	psect	bssCOMMON
  1353  0079                     __pbssCOMMON:	
  1354  0079                     _checkZero:	
  1355  0079                     	ds	2
  1356  007B                     _UQEnd:	
  1357  007B                     	ds	1
  1358  007C                     _UQFront:	
  1359  007C                     	ds	1
  1360                           
  1361                           	psect	bssBANK0
  1362  0063                     __pbssBANK0:	
  1363  0063                     LCDWriteInt@F1171:	
  1364  0063                     	ds	5
  1365  0068                     USARTWriteInt@F1170:	
  1366  0068                     	ds	5
  1367                           
  1368                           	psect	bssBANK1
  1369  00C2                     __pbssBANK1:	
  1370  00C2                     _checkSpd:	
  1371  00C2                     	ds	2
  1372  00C4                     _co:	
  1373  00C4                     	ds	2
  1374  00C6                     _warNo:	
  1375  00C6                     	ds	2
  1376  00C8                     _sendLo:	
  1377  00C8                     	ds	10
  1378  00D2                     _sendLa:	
  1379  00D2                     	ds	9
  1380  00DB                     _sendS:	
  1381  00DB                     	ds	7
  1382                           
  1383                           	psect	bssBANK3
  1384  0190                     __pbssBANK3:	
  1385  0190                     _URBuff:	
  1386  0190                     	ds	64
  1387                           
  1388                           	psect	dataBANK2
  1389  0110                     __pdataBANK2:	
  1390  0110                     ___cgram:	
  1391  0110                     	ds	64
  1392                           
  1393                           	psect	clrtext
  1394  11E8                     clear_ram0:	
  1395                           ;	Called with FSR containing the base address, and
  1396                           ;	W with the last address+1
  1397                           
  1398  11E8  0064               	clrwdt	;clear the watchdog before getting into this loop
  1399  11E9                     clrloop0:	
  1400  11E9  0180               	clrf	0	;clear RAM location pointed to by FSR
  1401  11EA  0A84               	incf	4,f	;increment pointer
  1402  11EB  0604               	xorwf	4,w	;XOR with final address
  1403  11EC  1903               	btfsc	3,2	;have we reached the end yet?
  1404  11ED  3400               	retlw	0	;all done for this memory range, return
  1405  11EE  0604               	xorwf	4,w	;XOR again to restore value
  1406  11EF  29E9               	goto	clrloop0	;do the next byte
  1407                           
  1408                           	psect	inittext
  1409  11F0                     init_fetch0:	
  1410                           ;	Called with low address in FSR and high address in W
  1411                           
  1412  11F0  087E               	movf	126,w
  1413  11F1  008A               	movwf	10
  1414  11F2  087F               	movf	127,w
  1415  11F3  0082               	movwf	2
  1416  11F4                     init_ram0:	
  1417                           ;Called with:
  1418                           ;	high address of idata address in btemp 
  1419                           ;	low address of idata address in btemp+1 
  1420                           ;	low address of data in FSR
  1421                           ;	high address + 1 of data in btemp-1
  1422                           
  1423  11F4  21F0  160A  118A   	fcall	init_fetch0
  1424  11F7  0080               	movwf	0
  1425  11F8  0A84               	incf	4,f
  1426  11F9  0804               	movf	4,w
  1427  11FA  067D               	xorwf	125,w
  1428  11FB  1903               	btfsc	3,2
  1429  11FC  3400               	retlw	0
  1430  11FD  0AFF               	incf	127,f
  1431  11FE  1903               	btfsc	3,2
  1432  11FF  0AFE               	incf	126,f
  1433  1200  29F4               	goto	init_ram0
  1434                           
  1435                           	psect	cstackBANK1
  1436  00A0                     __pcstackBANK1:	
  1437  00A0                     SPEED@knot:	
  1438                           
  1439                           ; 7 bytes @ 0x0
  1440  00A0                     	ds	7
  1441  00A7                     SPEED@kmph:	
  1442                           
  1443                           ; 7 bytes @ 0x7
  1444  00A7                     	ds	7
  1445  00AE                     SPEED@i:	
  1446                           
  1447                           ; 2 bytes @ 0xE
  1448  00AE                     	ds	2
  1449  00B0                     SPEED@i_354:	
  1450                           
  1451                           ; 2 bytes @ 0x10
  1452  00B0                     	ds	2
  1453  00B2                     SPEED@count1:	
  1454                           
  1455                           ; 2 bytes @ 0x12
  1456  00B2                     	ds	2
  1457  00B4                     SPEED@l:	
  1458                           
  1459                           ; 2 bytes @ 0x14
  1460  00B4                     	ds	2
  1461  00B6                     SPEED@l_356:	
  1462                           
  1463                           ; 2 bytes @ 0x16
  1464  00B6                     	ds	2
  1465  00B8                     SPEED@i_353:	
  1466                           
  1467                           ; 2 bytes @ 0x18
  1468  00B8                     	ds	2
  1469  00BA                     SPEED@l_359:	
  1470                           
  1471                           ; 2 bytes @ 0x1A
  1472  00BA                     	ds	2
  1473  00BC                     SPEED@l_360:	
  1474                           
  1475                           ; 2 bytes @ 0x1C
  1476  00BC                     	ds	2
  1477  00BE                     SPEED@i_377:	
  1478                           
  1479                           ; 2 bytes @ 0x1E
  1480  00BE                     	ds	2
  1481  00C0                     SPEED@l_361:	
  1482                           
  1483                           ; 2 bytes @ 0x20
  1484  00C0                     	ds	2
  1485                           
  1486                           	psect	cstackCOMMON
  1487  0070                     __pcstackCOMMON:	
  1488  0070                     ?_LCDBusyLoop:	
  1489  0070                     ?_USARTHandleRxInt:	
  1490                           ; 0 bytes @ 0x0
  1491                           
  1492  0070                     ??_USARTHandleRxInt:	
  1493                           ; 0 bytes @ 0x0
  1494                           
  1495  0070                     ?_fireIndiSend:	
  1496                           ; 0 bytes @ 0x0
  1497                           
  1498  0070                     ?_LCDInit:	
  1499                           ; 0 bytes @ 0x0
  1500                           
  1501  0070                     ?_LCDWriteChar:	
  1502                           ; 0 bytes @ 0x0
  1503                           
  1504  0070                     ?_ISR:	
  1505                           ; 0 bytes @ 0x0
  1506                           
  1507  0070                     ?_SendByteSerially:	
  1508                           ; 0 bytes @ 0x0
  1509                           
  1510  0070                     ?_sendByGPRS:	
  1511                           ; 0 bytes @ 0x0
  1512                           
  1513  0070                     ?_POSITION:	
  1514                           ; 0 bytes @ 0x0
  1515                           
  1516  0070                     ?_SPEED:	
  1517                           ; 0 bytes @ 0x0
  1518                           
  1519  0070                     ?_buzzerTone:	
  1520                           ; 0 bytes @ 0x0
  1521                           
  1522  0070                     ?_ADC_Init:	
  1523                           ; 0 bytes @ 0x0
  1524                           
  1525  0070                     ?_main:	
  1526                           ; 0 bytes @ 0x0
  1527                           
  1528  0070                     ?_USARTReadData:	
  1529                           ; 0 bytes @ 0x0
  1530                           
  1531                           
  1532                           ; 1 bytes @ 0x0
  1533  0070                     	ds	4
  1534  0074                     USARTHandleRxInt@data:	
  1535                           
  1536                           ; 1 bytes @ 0x4
  1537  0074                     	ds	1
  1538  0075                     ??_ISR:	
  1539                           
  1540                           ; 0 bytes @ 0x5
  1541  0075                     	ds	4
  1542                           
  1543                           	psect	cstackBANK0
  1544  0020                     __pcstackBANK0:	
  1545  0020                     ??_LCDBusyLoop:	
  1546  0020                     ?_USARTInit:	
  1547                           ; 0 bytes @ 0x0
  1548                           
  1549  0020                     ??_USARTReadData:	
  1550                           ; 0 bytes @ 0x0
  1551                           
  1552  0020                     ??_SendByteSerially:	
  1553                           ; 0 bytes @ 0x0
  1554                           
  1555  0020                     ??_buzzerTone:	
  1556                           ; 0 bytes @ 0x0
  1557                           
  1558  0020                     ??_ADC_Init:	
  1559                           ; 0 bytes @ 0x0
  1560                           
  1561  0020                     ?_ADC_Read:	
  1562                           ; 0 bytes @ 0x0
  1563                           
  1564  0020                     ?___wmul:	
  1565                           ; 2 bytes @ 0x0
  1566                           
  1567  0020                     ?___awdiv:	
  1568                           ; 2 bytes @ 0x0
  1569                           
  1570  0020                     ?___awmod:	
  1571                           ; 2 bytes @ 0x0
  1572                           
  1573  0020                     SendByteSerially@Byte:	
  1574                           ; 2 bytes @ 0x0
  1575                           
  1576  0020                     USARTInit@baud_rate:	
  1577                           ; 1 bytes @ 0x0
  1578                           
  1579  0020                     ___wmul@multiplier:	
  1580                           ; 2 bytes @ 0x0
  1581                           
  1582  0020                     ___awdiv@divisor:	
  1583                           ; 2 bytes @ 0x0
  1584                           
  1585  0020                     ___awmod@divisor:	
  1586                           ; 2 bytes @ 0x0
  1587                           
  1588                           
  1589                           ; 2 bytes @ 0x0
  1590  0020                     	ds	1
  1591  0021                     ?_SendStringSerially:	
  1592  0021                     USARTReadData@data:	
  1593                           ; 0 bytes @ 0x1
  1594                           
  1595  0021                     SendStringSerially@st:	
  1596                           ; 1 bytes @ 0x1
  1597                           
  1598                           
  1599                           ; 2 bytes @ 0x1
  1600  0021                     	ds	1
  1601  0022                     ??_USARTInit:	
  1602  0022                     ??_ADC_Read:	
  1603                           ; 0 bytes @ 0x2
  1604                           
  1605  0022                     LCDBusyLoop@busy:	
  1606                           ; 0 bytes @ 0x2
  1607                           
  1608  0022                     ___wmul@multiplicand:	
  1609                           ; 1 bytes @ 0x2
  1610                           
  1611  0022                     ___awdiv@dividend:	
  1612                           ; 2 bytes @ 0x2
  1613                           
  1614  0022                     ___awmod@dividend:	
  1615                           ; 2 bytes @ 0x2
  1616                           
  1617                           
  1618                           ; 2 bytes @ 0x2
  1619  0022                     	ds	1
  1620  0023                     ??_SendStringSerially:	
  1621  0023                     LCDBusyLoop@temp:	
  1622                           ; 0 bytes @ 0x3
  1623                           
  1624  0023                     buzzerTone@i:	
  1625                           ; 1 bytes @ 0x3
  1626                           
  1627                           
  1628                           ; 2 bytes @ 0x3
  1629  0023                     	ds	1
  1630  0024                     ??___wmul:	
  1631  0024                     ??___awdiv:	
  1632                           ; 0 bytes @ 0x4
  1633                           
  1634  0024                     ??___awmod:	
  1635                           ; 0 bytes @ 0x4
  1636                           
  1637  0024                     LCDBusyLoop@status:	
  1638                           ; 0 bytes @ 0x4
  1639                           
  1640  0024                     ADC_Read@channel:	
  1641                           ; 1 bytes @ 0x4
  1642                           
  1643  0024                     ___wmul@product:	
  1644                           ; 1 bytes @ 0x4
  1645                           
  1646                           
  1647                           ; 2 bytes @ 0x4
  1648  0024                     	ds	1
  1649  0025                     ?_LCDByte:	
  1650  0025                     LCDByte@isdata:	
  1651                           ; 0 bytes @ 0x5
  1652                           
  1653  0025                     ___awdiv@counter:	
  1654                           ; 1 bytes @ 0x5
  1655                           
  1656  0025                     ___awmod@counter:	
  1657                           ; 1 bytes @ 0x5
  1658                           
  1659                           
  1660                           ; 1 bytes @ 0x5
  1661  0025                     	ds	1
  1662  0026                     ??_LCDByte:	
  1663  0026                     ___awdiv@sign:	
  1664                           ; 0 bytes @ 0x6
  1665                           
  1666  0026                     ___awmod@sign:	
  1667                           ; 1 bytes @ 0x6
  1668                           
  1669                           
  1670                           ; 1 bytes @ 0x6
  1671  0026                     	ds	1
  1672  0027                     ___awdiv@quotient:	
  1673                           
  1674                           ; 2 bytes @ 0x7
  1675  0027                     	ds	1
  1676  0028                     LCDByte@hn:	
  1677                           
  1678                           ; 1 bytes @ 0x8
  1679  0028                     	ds	1
  1680  0029                     LCDByte@ln:	
  1681                           
  1682                           ; 1 bytes @ 0x9
  1683  0029                     	ds	1
  1684  002A                     LCDByte@c:	
  1685                           
  1686                           ; 1 bytes @ 0xA
  1687  002A                     	ds	1
  1688  002B                     LCDByte@temp:	
  1689                           
  1690                           ; 1 bytes @ 0xB
  1691  002B                     	ds	1
  1692  002C                     ??_LCDInit:	
  1693  002C                     ?_LCDWriteString:	
  1694                           ; 0 bytes @ 0xC
  1695                           
  1696  002C                     ?_LCDWriteInt:	
  1697                           ; 0 bytes @ 0xC
  1698                           
  1699  002C                     ?_LCDGotoXY:	
  1700                           ; 0 bytes @ 0xC
  1701                           
  1702  002C                     ??_LCDWriteChar:	
  1703                           ; 0 bytes @ 0xC
  1704                           
  1705  002C                     LCDGotoXY@y:	
  1706                           ; 0 bytes @ 0xC
  1707                           
  1708  002C                     LCDWriteString@msg:	
  1709                           ; 1 bytes @ 0xC
  1710                           
  1711  002C                     LCDWriteInt@val:	
  1712                           ; 2 bytes @ 0xC
  1713                           
  1714                           
  1715                           ; 2 bytes @ 0xC
  1716  002C                     	ds	1
  1717  002D                     ??_LCDGotoXY:	
  1718  002D                     LCDWriteChar@cc:	
  1719                           ; 0 bytes @ 0xD
  1720                           
  1721                           
  1722                           ; 1 bytes @ 0xD
  1723  002D                     	ds	1
  1724  002E                     ??_LCDWriteString:	
  1725  002E                     LCDInit@style:	
  1726                           ; 0 bytes @ 0xE
  1727                           
  1728  002E                     LCDWriteInt@field_length:	
  1729                           ; 1 bytes @ 0xE
  1730                           
  1731  002E                     LCDGotoXY@x:	
  1732                           ; 1 bytes @ 0xE
  1733                           
  1734  002E                     LCDWriteChar@ch:	
  1735                           ; 1 bytes @ 0xE
  1736                           
  1737                           
  1738                           ; 1 bytes @ 0xE
  1739  002E                     	ds	1
  1740  002F                     ??_LCDWriteInt:	
  1741  002F                     LCDInit@__i:	
  1742                           ; 0 bytes @ 0xF
  1743                           
  1744  002F                     LCDWriteString@cc:	
  1745                           ; 1 bytes @ 0xF
  1746                           
  1747                           
  1748                           ; 1 bytes @ 0xF
  1749  002F                     	ds	1
  1750  0030                     ??_fireIndiSend:	
  1751  0030                     ??_sendByGPRS:	
  1752                           ; 0 bytes @ 0x10
  1753                           
  1754                           
  1755                           ; 0 bytes @ 0x10
  1756  0030                     	ds	1
  1757  0031                     LCDWriteInt@str:	
  1758                           
  1759                           ; 5 bytes @ 0x11
  1760  0031                     	ds	2
  1761  0033                     ??_POSITION:	
  1762  0033                     fireIndiSend@a:	
  1763                           ; 0 bytes @ 0x13
  1764                           
  1765                           
  1766                           ; 2 bytes @ 0x13
  1767  0033                     	ds	3
  1768  0036                     LCDWriteInt@j:	
  1769  0036                     POSITION@longi:	
  1770                           ; 2 bytes @ 0x16
  1771                           
  1772                           
  1773                           ; 10 bytes @ 0x16
  1774  0036                     	ds	2
  1775  0038                     LCDWriteInt@i:	
  1776                           
  1777                           ; 2 bytes @ 0x18
  1778  0038                     	ds	8
  1779  0040                     POSITION@lat:	
  1780                           
  1781                           ; 9 bytes @ 0x20
  1782  0040                     	ds	9
  1783  0049                     POSITION@i:	
  1784                           
  1785                           ; 2 bytes @ 0x29
  1786  0049                     	ds	2
  1787  004B                     POSITION@latNS:	
  1788                           
  1789                           ; 1 bytes @ 0x2B
  1790  004B                     	ds	1
  1791  004C                     POSITION@longiEW:	
  1792                           
  1793                           ; 1 bytes @ 0x2C
  1794  004C                     	ds	1
  1795  004D                     POSITION@i_337:	
  1796                           
  1797                           ; 2 bytes @ 0x2D
  1798  004D                     	ds	2
  1799  004F                     POSITION@l:	
  1800                           
  1801                           ; 2 bytes @ 0x2F
  1802  004F                     	ds	2
  1803  0051                     POSITION@l_339:	
  1804                           
  1805                           ; 2 bytes @ 0x31
  1806  0051                     	ds	2
  1807  0053                     POSITION@l_343:	
  1808                           
  1809                           ; 2 bytes @ 0x33
  1810  0053                     	ds	2
  1811  0055                     POSITION@l_344:	
  1812                           
  1813                           ; 2 bytes @ 0x35
  1814  0055                     	ds	2
  1815  0057                     POSITION@count:	
  1816                           
  1817                           ; 2 bytes @ 0x37
  1818  0057                     	ds	2
  1819  0059                     POSITION@i_345:	
  1820                           
  1821                           ; 2 bytes @ 0x39
  1822  0059                     	ds	2
  1823  005B                     ??_SPEED:	
  1824                           
  1825                           ; 0 bytes @ 0x3B
  1826  005B                     	ds	3
  1827  005E                     ??_main:	
  1828                           
  1829                           ; 0 bytes @ 0x3E
  1830  005E                     	ds	3
  1831  0061                     main@i:	
  1832                           
  1833                           ; 2 bytes @ 0x41
  1834  0061                     	ds	2
  1835                           
  1836                           	psect	maintext
  1837  0D0D                     __pmaintext:	
  1838 ;;
  1839 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1840 ;;
  1841 ;; *************** function _main *****************
  1842 ;; Defined at:
  1843 ;;		line 494 in file "Main.c"
  1844 ;; Parameters:    Size  Location     Type
  1845 ;;		None
  1846 ;; Auto vars:     Size  Location     Type
  1847 ;;  i               2   65[BANK0 ] int 
  1848 ;; Return value:  Size  Location     Type
  1849 ;;		None               void
  1850 ;; Registers used:
  1851 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1852 ;; Tracked objects:
  1853 ;;		On entry : B00/0
  1854 ;;		On exit  : 0/0
  1855 ;;		Unchanged: 0/0
  1856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1857 ;;      Params:         0       0       0       0       0
  1858 ;;      Locals:         0       2       0       0       0
  1859 ;;      Temps:          0       3       0       0       0
  1860 ;;      Totals:         0       5       0       0       0
  1861 ;;Total ram usage:        5 bytes
  1862 ;; Hardware stack levels required when called:    8
  1863 ;; This function calls:
  1864 ;;		_LCDByte
  1865 ;;		_LCDGotoXY
  1866 ;;		_LCDInit
  1867 ;;		_LCDWriteInt
  1868 ;;		_LCDWriteString
  1869 ;;		_SPEED
  1870 ;;		_buzzerTone
  1871 ;; This function is called by:
  1872 ;;		Startup code after reset
  1873 ;; This function uses a non-reentrant model
  1874 ;;
  1875                           
  1876                           
  1877                           ;psect for function _main
  1878  0D0D                     _main:	
  1879                           
  1880                           ;Main.c: 500: LCDInit(0B00000000);
  1881                           
  1882                           ;incstack = 0
  1883                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1884  0D0D  3000               	movlw	0
  1885  0D0E  120A  158A  220C  120A  158A  	fcall	_LCDInit
  1886                           
  1887                           ;Main.c: 501: _delay((unsigned long)((100)*(20000000/4000.0)));
  1888  0D13  3003               	movlw	3
  1889  0D14  1283               	bcf	3,5	;RP0=0, select bank0
  1890  0D15  1303               	bcf	3,6	;RP1=0, select bank0
  1891  0D16  00E0               	movwf	??_main+2
  1892  0D17  308A               	movlw	138
  1893  0D18  00DF               	movwf	??_main+1
  1894  0D19  3056               	movlw	86
  1895  0D1A  00DE               	movwf	??_main
  1896  0D1B                     u2787:	
  1897  0D1B  0BDE               	decfsz	??_main,f
  1898  0D1C  2D1B               	goto	u2787
  1899  0D1D  0BDF               	decfsz	??_main+1,f
  1900  0D1E  2D1B               	goto	u2787
  1901  0D1F  0BE0               	decfsz	??_main+2,f
  1902  0D20  2D1B               	goto	u2787
  1903  0D21  2D22               	nop2
  1904                           
  1905                           ;Main.c: 502: (LCDByte(0b00000001,0));
  1906  0D22  1283               	bcf	3,5	;RP0=0, select bank0
  1907  0D23  1303               	bcf	3,6	;RP1=0, select bank0
  1908  0D24  01A5               	clrf	LCDByte@isdata
  1909  0D25  3001               	movlw	1
  1910  0D26  160A  118A  23AF  120A  158A  	fcall	_LCDByte
  1911                           
  1912                           ;Main.c: 503: buzzerTone();
  1913  0D2B  160A  118A  22EF  120A  158A  	fcall	_buzzerTone
  1914                           
  1915                           ;Main.c: 504: { LCDGotoXY(6,0); LCDWriteString("Welcome");};
  1916  0D30  1283               	bcf	3,5	;RP0=0, select bank0
  1917  0D31  1303               	bcf	3,6	;RP1=0, select bank0
  1918  0D32  01AC               	clrf	LCDGotoXY@y
  1919  0D33  3006               	movlw	6
  1920  0D34  160A  118A  2261  120A  158A  	fcall	_LCDGotoXY
  1921  0D39  30E2               	movlw	low (STR_44| (0+32768))
  1922  0D3A  1283               	bcf	3,5	;RP0=0, select bank0
  1923  0D3B  1303               	bcf	3,6	;RP1=0, select bank0
  1924  0D3C  00AC               	movwf	LCDWriteString@msg
  1925  0D3D  3088               	movlw	high (STR_44| (0+32768))
  1926  0D3E  00AD               	movwf	LCDWriteString@msg+1
  1927  0D3F  120A  158A  21B1  120A  158A  	fcall	_LCDWriteString
  1928                           
  1929                           ;Main.c: 505: { LCDGotoXY(9,1); LCDWriteString("To");};
  1930  0D44  1283               	bcf	3,5	;RP0=0, select bank0
  1931  0D45  1303               	bcf	3,6	;RP1=0, select bank0
  1932  0D46  01AC               	clrf	LCDGotoXY@y
  1933  0D47  0AAC               	incf	LCDGotoXY@y,f
  1934  0D48  3009               	movlw	9
  1935  0D49  160A  118A  2261  120A  158A  	fcall	_LCDGotoXY
  1936  0D4E  303E               	movlw	low (STR_45| (0+32768))
  1937  0D4F  1283               	bcf	3,5	;RP0=0, select bank0
  1938  0D50  1303               	bcf	3,6	;RP1=0, select bank0
  1939  0D51  00AC               	movwf	LCDWriteString@msg
  1940  0D52  3089               	movlw	high (STR_45| (0+32768))
  1941  0D53  00AD               	movwf	LCDWriteString@msg+1
  1942  0D54  120A  158A  21B1  120A  158A  	fcall	_LCDWriteString
  1943                           
  1944                           ;Main.c: 506: { LCDGotoXY(5,2); LCDWriteString("Expressway");};
  1945  0D59  3002               	movlw	2
  1946  0D5A  1283               	bcf	3,5	;RP0=0, select bank0
  1947  0D5B  1303               	bcf	3,6	;RP1=0, select bank0
  1948  0D5C  00DE               	movwf	??_main
  1949  0D5D  085E               	movf	??_main,w
  1950  0D5E  00AC               	movwf	LCDGotoXY@y
  1951  0D5F  3005               	movlw	5
  1952  0D60  160A  118A  2261  120A  158A  	fcall	_LCDGotoXY
  1953  0D65  309F               	movlw	low (STR_46| (0+32768))
  1954  0D66  1283               	bcf	3,5	;RP0=0, select bank0
  1955  0D67  1303               	bcf	3,6	;RP1=0, select bank0
  1956  0D68  00AC               	movwf	LCDWriteString@msg
  1957  0D69  3088               	movlw	high (STR_46| (0+32768))
  1958  0D6A  00AD               	movwf	LCDWriteString@msg+1
  1959  0D6B  120A  158A  21B1  120A  158A  	fcall	_LCDWriteString
  1960                           
  1961                           ;Main.c: 507: { LCDGotoXY(5,3); LCDWriteString("Life Saver");};
  1962  0D70  3003               	movlw	3
  1963  0D71  1283               	bcf	3,5	;RP0=0, select bank0
  1964  0D72  1303               	bcf	3,6	;RP1=0, select bank0
  1965  0D73  00DE               	movwf	??_main
  1966  0D74  085E               	movf	??_main,w
  1967  0D75  00AC               	movwf	LCDGotoXY@y
  1968  0D76  3005               	movlw	5
  1969  0D77  160A  118A  2261  120A  158A  	fcall	_LCDGotoXY
  1970  0D7C  3094               	movlw	low (STR_47| (0+32768))
  1971  0D7D  1283               	bcf	3,5	;RP0=0, select bank0
  1972  0D7E  1303               	bcf	3,6	;RP1=0, select bank0
  1973  0D7F  00AC               	movwf	LCDWriteString@msg
  1974  0D80  3088               	movlw	high (STR_47| (0+32768))
  1975  0D81  00AD               	movwf	LCDWriteString@msg+1
  1976  0D82  120A  158A  21B1  120A  158A  	fcall	_LCDWriteString
  1977                           
  1978                           ;Main.c: 508: _delay((unsigned long)((3000)*(20000000/4000.0)));
  1979  0D87  304D               	movlw	77
  1980  0D88  1283               	bcf	3,5	;RP0=0, select bank0
  1981  0D89  1303               	bcf	3,6	;RP1=0, select bank0
  1982  0D8A  00E0               	movwf	??_main+2
  1983  0D8B  3019               	movlw	25
  1984  0D8C  00DF               	movwf	??_main+1
  1985  0D8D  309A               	movlw	154
  1986  0D8E  00DE               	movwf	??_main
  1987  0D8F                     u2797:	
  1988  0D8F  0BDE               	decfsz	??_main,f
  1989  0D90  2D8F               	goto	u2797
  1990  0D91  0BDF               	decfsz	??_main+1,f
  1991  0D92  2D8F               	goto	u2797
  1992  0D93  0BE0               	decfsz	??_main+2,f
  1993  0D94  2D8F               	goto	u2797
  1994  0D95  2D96               	nop2
  1995                           
  1996                           ;Main.c: 509: (LCDByte(0b00000001,0));
  1997  0D96  1283               	bcf	3,5	;RP0=0, select bank0
  1998  0D97  1303               	bcf	3,6	;RP1=0, select bank0
  1999  0D98  01A5               	clrf	LCDByte@isdata
  2000  0D99  3001               	movlw	1
  2001  0D9A  160A  118A  23AF  120A  158A  	fcall	_LCDByte
  2002                           
  2003                           ;Main.c: 510: { LCDGotoXY(2,2); LCDWriteString("Turning GSM ON");};
  2004  0D9F  3002               	movlw	2
  2005  0DA0  1283               	bcf	3,5	;RP0=0, select bank0
  2006  0DA1  1303               	bcf	3,6	;RP1=0, select bank0
  2007  0DA2  00DE               	movwf	??_main
  2008  0DA3  085E               	movf	??_main,w
  2009  0DA4  00AC               	movwf	LCDGotoXY@y
  2010  0DA5  3002               	movlw	2
  2011  0DA6  160A  118A  2261  120A  158A  	fcall	_LCDGotoXY
  2012  0DAB  301E               	movlw	low (STR_48| (0+32768))
  2013  0DAC  1283               	bcf	3,5	;RP0=0, select bank0
  2014  0DAD  1303               	bcf	3,6	;RP1=0, select bank0
  2015  0DAE  00AC               	movwf	LCDWriteString@msg
  2016  0DAF  3088               	movlw	high (STR_48| (0+32768))
  2017  0DB0  00AD               	movwf	LCDWriteString@msg+1
  2018  0DB1  120A  158A  21B1  120A  158A  	fcall	_LCDWriteString
  2019                           
  2020                           ;Main.c: 511: TRISB0 = 0;
  2021  0DB6  1683               	bsf	3,5	;RP0=1, select bank1
  2022  0DB7  1303               	bcf	3,6	;RP1=0, select bank1
  2023  0DB8  1006               	bcf	6,0	;volatile
  2024                           
  2025                           ;Main.c: 512: RB0 = 1;
  2026  0DB9  1283               	bcf	3,5	;RP0=0, select bank0
  2027  0DBA  1303               	bcf	3,6	;RP1=0, select bank0
  2028  0DBB  1406               	bsf	6,0	;volatile
  2029                           
  2030                           ;Main.c: 513: _delay((unsigned long)((2000)*(20000000/4000.0)));
  2031  0DBC  3033               	movlw	51
  2032  0DBD  00E0               	movwf	??_main+2
  2033  0DBE  30BC               	movlw	188
  2034  0DBF  00DF               	movwf	??_main+1
  2035  0DC0  3010               	movlw	16
  2036  0DC1  00DE               	movwf	??_main
  2037  0DC2                     u2807:	
  2038  0DC2  0BDE               	decfsz	??_main,f
  2039  0DC3  2DC2               	goto	u2807
  2040  0DC4  0BDF               	decfsz	??_main+1,f
  2041  0DC5  2DC2               	goto	u2807
  2042  0DC6  0BE0               	decfsz	??_main+2,f
  2043  0DC7  2DC2               	goto	u2807
  2044                           
  2045                           ;Main.c: 514: RB0 = 0;
  2046  0DC8  1283               	bcf	3,5	;RP0=0, select bank0
  2047  0DC9  1303               	bcf	3,6	;RP1=0, select bank0
  2048  0DCA  1006               	bcf	6,0	;volatile
  2049                           
  2050                           ;Main.c: 515: (LCDByte(0b00000001,0));
  2051  0DCB  01A5               	clrf	LCDByte@isdata
  2052  0DCC  3001               	movlw	1
  2053  0DCD  160A  118A  23AF  120A  158A  	fcall	_LCDByte
  2054                           
  2055                           ;Main.c: 516: { LCDGotoXY(4,2); LCDWriteString("GSM Running");};
  2056  0DD2  3002               	movlw	2
  2057  0DD3  1283               	bcf	3,5	;RP0=0, select bank0
  2058  0DD4  1303               	bcf	3,6	;RP1=0, select bank0
  2059  0DD5  00DE               	movwf	??_main
  2060  0DD6  085E               	movf	??_main,w
  2061  0DD7  00AC               	movwf	LCDGotoXY@y
  2062  0DD8  3004               	movlw	4
  2063  0DD9  160A  118A  2261  120A  158A  	fcall	_LCDGotoXY
  2064  0DDE  3088               	movlw	low (STR_49| (0+32768))
  2065  0DDF  1283               	bcf	3,5	;RP0=0, select bank0
  2066  0DE0  1303               	bcf	3,6	;RP1=0, select bank0
  2067  0DE1  00AC               	movwf	LCDWriteString@msg
  2068  0DE2  3088               	movlw	high (STR_49| (0+32768))
  2069  0DE3  00AD               	movwf	LCDWriteString@msg+1
  2070  0DE4  120A  158A  21B1  120A  158A  	fcall	_LCDWriteString
  2071                           
  2072                           ;Main.c: 517: _delay((unsigned long)((500)*(20000000/4000.0)));
  2073  0DE9  300D               	movlw	13
  2074  0DEA  1283               	bcf	3,5	;RP0=0, select bank0
  2075  0DEB  1303               	bcf	3,6	;RP1=0, select bank0
  2076  0DEC  00E0               	movwf	??_main+2
  2077  0DED  30AF               	movlw	175
  2078  0DEE  00DF               	movwf	??_main+1
  2079  0DEF  30C1               	movlw	193
  2080  0DF0  00DE               	movwf	??_main
  2081  0DF1                     u2817:	
  2082  0DF1  0BDE               	decfsz	??_main,f
  2083  0DF2  2DF1               	goto	u2817
  2084  0DF3  0BDF               	decfsz	??_main+1,f
  2085  0DF4  2DF1               	goto	u2817
  2086  0DF5  0BE0               	decfsz	??_main+2,f
  2087  0DF6  2DF1               	goto	u2817
  2088  0DF7  0000               	nop
  2089                           
  2090                           ;Main.c: 518: (LCDByte(0b00000001,0));
  2091  0DF8  1283               	bcf	3,5	;RP0=0, select bank0
  2092  0DF9  1303               	bcf	3,6	;RP1=0, select bank0
  2093  0DFA  01A5               	clrf	LCDByte@isdata
  2094  0DFB  3001               	movlw	1
  2095  0DFC  160A  118A  23AF  120A  158A  	fcall	_LCDByte
  2096                           
  2097                           ;Main.c: 519: { LCDGotoXY(0,0); LCDWriteString("1.Hope you are not");};
  2098  0E01  1283               	bcf	3,5	;RP0=0, select bank0
  2099  0E02  1303               	bcf	3,6	;RP1=0, select bank0
  2100  0E03  01AC               	clrf	LCDGotoXY@y
  2101  0E04  3000               	movlw	0
  2102  0E05  160A  118A  2261  120A  158A  	fcall	_LCDGotoXY
  2103  0E0A  302F               	movlw	low (STR_50| (0+32768))
  2104  0E0B  1283               	bcf	3,5	;RP0=0, select bank0
  2105  0E0C  1303               	bcf	3,6	;RP1=0, select bank0
  2106  0E0D  00AC               	movwf	LCDWriteString@msg
  2107  0E0E  3087               	movlw	high (STR_50| (0+32768))
  2108  0E0F  00AD               	movwf	LCDWriteString@msg+1
  2109  0E10  120A  158A  21B1  120A  158A  	fcall	_LCDWriteString
  2110                           
  2111                           ;Main.c: 520: { LCDGotoXY(0,1); LCDWriteString("drunk");};
  2112  0E15  1283               	bcf	3,5	;RP0=0, select bank0
  2113  0E16  1303               	bcf	3,6	;RP1=0, select bank0
  2114  0E17  01AC               	clrf	LCDGotoXY@y
  2115  0E18  0AAC               	incf	LCDGotoXY@y,f
  2116  0E19  3000               	movlw	0
  2117  0E1A  160A  118A  2261  120A  158A  	fcall	_LCDGotoXY
  2118  0E1F  3025               	movlw	low (STR_51| (0+32768))
  2119  0E20  1283               	bcf	3,5	;RP0=0, select bank0
  2120  0E21  1303               	bcf	3,6	;RP1=0, select bank0
  2121  0E22  00AC               	movwf	LCDWriteString@msg
  2122  0E23  3089               	movlw	high (STR_51| (0+32768))
  2123  0E24  00AD               	movwf	LCDWriteString@msg+1
  2124  0E25  120A  158A  21B1  120A  158A  	fcall	_LCDWriteString
  2125                           
  2126                           ;Main.c: 521: { LCDGotoXY(0,2); LCDWriteString("2.Don't forget seat");};
  2127  0E2A  3002               	movlw	2
  2128  0E2B  1283               	bcf	3,5	;RP0=0, select bank0
  2129  0E2C  1303               	bcf	3,6	;RP1=0, select bank0
  2130  0E2D  00DE               	movwf	??_main
  2131  0E2E  085E               	movf	??_main,w
  2132  0E2F  00AC               	movwf	LCDGotoXY@y
  2133  0E30  3000               	movlw	0
  2134  0E31  160A  118A  2261  120A  158A  	fcall	_LCDGotoXY
  2135  0E36  3008               	movlw	low (STR_52| (0+32768))
  2136  0E37  1283               	bcf	3,5	;RP0=0, select bank0
  2137  0E38  1303               	bcf	3,6	;RP1=0, select bank0
  2138  0E39  00AC               	movwf	LCDWriteString@msg
  2139  0E3A  3087               	movlw	high (STR_52| (0+32768))
  2140  0E3B  00AD               	movwf	LCDWriteString@msg+1
  2141  0E3C  120A  158A  21B1  120A  158A  	fcall	_LCDWriteString
  2142                           
  2143                           ;Main.c: 522: { LCDGotoXY(0,3); LCDWriteString("belts");};
  2144  0E41  3003               	movlw	3
  2145  0E42  1283               	bcf	3,5	;RP0=0, select bank0
  2146  0E43  1303               	bcf	3,6	;RP1=0, select bank0
  2147  0E44  00DE               	movwf	??_main
  2148  0E45  085E               	movf	??_main,w
  2149  0E46  00AC               	movwf	LCDGotoXY@y
  2150  0E47  3000               	movlw	0
  2151  0E48  160A  118A  2261  120A  158A  	fcall	_LCDGotoXY
  2152  0E4D  3031               	movlw	low (STR_53| (0+32768))
  2153  0E4E  1283               	bcf	3,5	;RP0=0, select bank0
  2154  0E4F  1303               	bcf	3,6	;RP1=0, select bank0
  2155  0E50  00AC               	movwf	LCDWriteString@msg
  2156  0E51  3089               	movlw	high (STR_53| (0+32768))
  2157  0E52  00AD               	movwf	LCDWriteString@msg+1
  2158  0E53  120A  158A  21B1  120A  158A  	fcall	_LCDWriteString
  2159                           
  2160                           ;Main.c: 523: _delay((unsigned long)((3000)*(20000000/4000.0)));
  2161  0E58  304D               	movlw	77
  2162  0E59  1283               	bcf	3,5	;RP0=0, select bank0
  2163  0E5A  1303               	bcf	3,6	;RP1=0, select bank0
  2164  0E5B  00E0               	movwf	??_main+2
  2165  0E5C  3019               	movlw	25
  2166  0E5D  00DF               	movwf	??_main+1
  2167  0E5E  309A               	movlw	154
  2168  0E5F  00DE               	movwf	??_main
  2169  0E60                     u2827:	
  2170  0E60  0BDE               	decfsz	??_main,f
  2171  0E61  2E60               	goto	u2827
  2172  0E62  0BDF               	decfsz	??_main+1,f
  2173  0E63  2E60               	goto	u2827
  2174  0E64  0BE0               	decfsz	??_main+2,f
  2175  0E65  2E60               	goto	u2827
  2176  0E66  2E67               	nop2
  2177                           
  2178                           ;Main.c: 524: (LCDByte(0b00000001,0));
  2179  0E67  1283               	bcf	3,5	;RP0=0, select bank0
  2180  0E68  1303               	bcf	3,6	;RP1=0, select bank0
  2181  0E69  01A5               	clrf	LCDByte@isdata
  2182  0E6A  3001               	movlw	1
  2183  0E6B  160A  118A  23AF  120A  158A  	fcall	_LCDByte
  2184                           
  2185                           ;Main.c: 525: { LCDGotoXY(0,0); LCDWriteString("Sleepy?");};
  2186  0E70  1283               	bcf	3,5	;RP0=0, select bank0
  2187  0E71  1303               	bcf	3,6	;RP1=0, select bank0
  2188  0E72  01AC               	clrf	LCDGotoXY@y
  2189  0E73  3000               	movlw	0
  2190  0E74  160A  118A  2261  120A  158A  	fcall	_LCDGotoXY
  2191  0E79  30DA               	movlw	low (STR_54| (0+32768))
  2192  0E7A  1283               	bcf	3,5	;RP0=0, select bank0
  2193  0E7B  1303               	bcf	3,6	;RP1=0, select bank0
  2194  0E7C  00AC               	movwf	LCDWriteString@msg
  2195  0E7D  3088               	movlw	high (STR_54| (0+32768))
  2196  0E7E  00AD               	movwf	LCDWriteString@msg+1
  2197  0E7F  120A  158A  21B1  120A  158A  	fcall	_LCDWriteString
  2198                           
  2199                           ;Main.c: 526: buzzerTone();
  2200  0E84  160A  118A  22EF  120A  158A  	fcall	_buzzerTone
  2201                           
  2202                           ;Main.c: 527: _delay((unsigned long)((100)*(20000000/4000.0)));
  2203  0E89  3003               	movlw	3
  2204  0E8A  1283               	bcf	3,5	;RP0=0, select bank0
  2205  0E8B  1303               	bcf	3,6	;RP1=0, select bank0
  2206  0E8C  00E0               	movwf	??_main+2
  2207  0E8D  308A               	movlw	138
  2208  0E8E  00DF               	movwf	??_main+1
  2209  0E8F  3056               	movlw	86
  2210  0E90  00DE               	movwf	??_main
  2211  0E91                     u2837:	
  2212  0E91  0BDE               	decfsz	??_main,f
  2213  0E92  2E91               	goto	u2837
  2214  0E93  0BDF               	decfsz	??_main+1,f
  2215  0E94  2E91               	goto	u2837
  2216  0E95  0BE0               	decfsz	??_main+2,f
  2217  0E96  2E91               	goto	u2837
  2218  0E97  2E98               	nop2
  2219                           
  2220                           ;Main.c: 528: { LCDGotoXY(0,1); LCDWriteString("Let's listen to");};
  2221  0E98  1283               	bcf	3,5	;RP0=0, select bank0
  2222  0E99  1303               	bcf	3,6	;RP1=0, select bank0
  2223  0E9A  01AC               	clrf	LCDGotoXY@y
  2224  0E9B  0AAC               	incf	LCDGotoXY@y,f
  2225  0E9C  3000               	movlw	0
  2226  0E9D  160A  118A  2261  120A  158A  	fcall	_LCDGotoXY
  2227  0EA2  30FE               	movlw	low (STR_55| (0+32768))
  2228  0EA3  1283               	bcf	3,5	;RP0=0, select bank0
  2229  0EA4  1303               	bcf	3,6	;RP1=0, select bank0
  2230  0EA5  00AC               	movwf	LCDWriteString@msg
  2231  0EA6  3087               	movlw	high (STR_55| (0+32768))
  2232  0EA7  00AD               	movwf	LCDWriteString@msg+1
  2233  0EA8  120A  158A  21B1  120A  158A  	fcall	_LCDWriteString
  2234                           
  2235                           ;Main.c: 529: { LCDGotoXY(0,2); LCDWriteString("the Radio");};
  2236  0EAD  3002               	movlw	2
  2237  0EAE  1283               	bcf	3,5	;RP0=0, select bank0
  2238  0EAF  1303               	bcf	3,6	;RP1=0, select bank0
  2239  0EB0  00DE               	movwf	??_main
  2240  0EB1  085E               	movf	??_main,w
  2241  0EB2  00AC               	movwf	LCDGotoXY@y
  2242  0EB3  3000               	movlw	0
  2243  0EB4  160A  118A  2261  120A  158A  	fcall	_LCDGotoXY
  2244  0EB9  30C8               	movlw	low (STR_56| (0+32768))
  2245  0EBA  1283               	bcf	3,5	;RP0=0, select bank0
  2246  0EBB  1303               	bcf	3,6	;RP1=0, select bank0
  2247  0EBC  00AC               	movwf	LCDWriteString@msg
  2248  0EBD  3088               	movlw	high (STR_56| (0+32768))
  2249  0EBE  00AD               	movwf	LCDWriteString@msg+1
  2250  0EBF  120A  158A  21B1  120A  158A  	fcall	_LCDWriteString
  2251                           
  2252                           ;Main.c: 530: _delay((unsigned long)((3000)*(20000000/4000.0)));
  2253  0EC4  304D               	movlw	77
  2254  0EC5  1283               	bcf	3,5	;RP0=0, select bank0
  2255  0EC6  1303               	bcf	3,6	;RP1=0, select bank0
  2256  0EC7  00E0               	movwf	??_main+2
  2257  0EC8  3019               	movlw	25
  2258  0EC9  00DF               	movwf	??_main+1
  2259  0ECA  309A               	movlw	154
  2260  0ECB  00DE               	movwf	??_main
  2261  0ECC                     u2847:	
  2262  0ECC  0BDE               	decfsz	??_main,f
  2263  0ECD  2ECC               	goto	u2847
  2264  0ECE  0BDF               	decfsz	??_main+1,f
  2265  0ECF  2ECC               	goto	u2847
  2266  0ED0  0BE0               	decfsz	??_main+2,f
  2267  0ED1  2ECC               	goto	u2847
  2268  0ED2  2ED3               	nop2
  2269                           
  2270                           ;Main.c: 531: (LCDByte(0b00000001,0));
  2271  0ED3  1283               	bcf	3,5	;RP0=0, select bank0
  2272  0ED4  1303               	bcf	3,6	;RP1=0, select bank0
  2273  0ED5  01A5               	clrf	LCDByte@isdata
  2274  0ED6  3001               	movlw	1
  2275  0ED7  160A  118A  23AF  120A  158A  	fcall	_LCDByte
  2276                           
  2277                           ;Main.c: 532: { LCDGotoXY(0,0); LCDWriteString("Have a safe drive");};
  2278  0EDC  1283               	bcf	3,5	;RP0=0, select bank0
  2279  0EDD  1303               	bcf	3,6	;RP1=0, select bank0
  2280  0EDE  01AC               	clrf	LCDGotoXY@y
  2281  0EDF  3000               	movlw	0
  2282  0EE0  160A  118A  2261  120A  158A  	fcall	_LCDGotoXY
  2283  0EE5  3067               	movlw	low (STR_57| (0+32768))
  2284  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  2285  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  2286  0EE8  00AC               	movwf	LCDWriteString@msg
  2287  0EE9  3087               	movlw	high (STR_57| (0+32768))
  2288  0EEA  00AD               	movwf	LCDWriteString@msg+1
  2289  0EEB  120A  158A  21B1  120A  158A  	fcall	_LCDWriteString
  2290                           
  2291                           ;Main.c: 533: { LCDGotoXY(0,1); LCDWriteString(":)");};
  2292  0EF0  1283               	bcf	3,5	;RP0=0, select bank0
  2293  0EF1  1303               	bcf	3,6	;RP1=0, select bank0
  2294  0EF2  01AC               	clrf	LCDGotoXY@y
  2295  0EF3  0AAC               	incf	LCDGotoXY@y,f
  2296  0EF4  3000               	movlw	0
  2297  0EF5  160A  118A  2261  120A  158A  	fcall	_LCDGotoXY
  2298  0EFA  303B               	movlw	low (STR_58| (0+32768))
  2299  0EFB  1283               	bcf	3,5	;RP0=0, select bank0
  2300  0EFC  1303               	bcf	3,6	;RP1=0, select bank0
  2301  0EFD  00AC               	movwf	LCDWriteString@msg
  2302  0EFE  3089               	movlw	high (STR_58| (0+32768))
  2303  0EFF  00AD               	movwf	LCDWriteString@msg+1
  2304  0F00  120A  158A  21B1  120A  158A  	fcall	_LCDWriteString
  2305                           
  2306                           ;Main.c: 534: { LCDGotoXY(0,2); LCDWriteString("ELS will take care");};
  2307  0F05  3002               	movlw	2
  2308  0F06  1283               	bcf	3,5	;RP0=0, select bank0
  2309  0F07  1303               	bcf	3,6	;RP1=0, select bank0
  2310  0F08  00DE               	movwf	??_main
  2311  0F09  085E               	movf	??_main,w
  2312  0F0A  00AC               	movwf	LCDGotoXY@y
  2313  0F0B  3000               	movlw	0
  2314  0F0C  160A  118A  2261  120A  158A  	fcall	_LCDGotoXY
  2315  0F11  301C               	movlw	low (STR_59| (0+32768))
  2316  0F12  1283               	bcf	3,5	;RP0=0, select bank0
  2317  0F13  1303               	bcf	3,6	;RP1=0, select bank0
  2318  0F14  00AC               	movwf	LCDWriteString@msg
  2319  0F15  3087               	movlw	high (STR_59| (0+32768))
  2320  0F16  00AD               	movwf	LCDWriteString@msg+1
  2321  0F17  120A  158A  21B1  120A  158A  	fcall	_LCDWriteString
  2322                           
  2323                           ;Main.c: 535: { LCDGotoXY(0,3); LCDWriteString("of you");};
  2324  0F1C  3003               	movlw	3
  2325  0F1D  1283               	bcf	3,5	;RP0=0, select bank0
  2326  0F1E  1303               	bcf	3,6	;RP1=0, select bank0
  2327  0F1F  00DE               	movwf	??_main
  2328  0F20  085E               	movf	??_main,w
  2329  0F21  00AC               	movwf	LCDGotoXY@y
  2330  0F22  3000               	movlw	0
  2331  0F23  160A  118A  2261  120A  158A  	fcall	_LCDGotoXY
  2332  0F28  3000               	movlw	low (STR_60| (0+32768))
  2333  0F29  1283               	bcf	3,5	;RP0=0, select bank0
  2334  0F2A  1303               	bcf	3,6	;RP1=0, select bank0
  2335  0F2B  00AC               	movwf	LCDWriteString@msg
  2336  0F2C  3089               	movlw	high (STR_60| (0+32768))
  2337  0F2D  00AD               	movwf	LCDWriteString@msg+1
  2338  0F2E  120A  158A  21B1  120A  158A  	fcall	_LCDWriteString
  2339                           
  2340                           ;Main.c: 536: _delay((unsigned long)((3000)*(20000000/4000.0)));
  2341  0F33  304D               	movlw	77
  2342  0F34  1283               	bcf	3,5	;RP0=0, select bank0
  2343  0F35  1303               	bcf	3,6	;RP1=0, select bank0
  2344  0F36  00E0               	movwf	??_main+2
  2345  0F37  3019               	movlw	25
  2346  0F38  00DF               	movwf	??_main+1
  2347  0F39  309A               	movlw	154
  2348  0F3A  00DE               	movwf	??_main
  2349  0F3B                     u2857:	
  2350  0F3B  0BDE               	decfsz	??_main,f
  2351  0F3C  2F3B               	goto	u2857
  2352  0F3D  0BDF               	decfsz	??_main+1,f
  2353  0F3E  2F3B               	goto	u2857
  2354  0F3F  0BE0               	decfsz	??_main+2,f
  2355  0F40  2F3B               	goto	u2857
  2356  0F41  2F42               	nop2
  2357                           
  2358                           ;Main.c: 537: for (int i = 30; i > 0; i--) {
  2359  0F42  301E               	movlw	30
  2360  0F43  1283               	bcf	3,5	;RP0=0, select bank0
  2361  0F44  1303               	bcf	3,6	;RP1=0, select bank0
  2362  0F45  00E1               	movwf	main@i
  2363  0F46  3000               	movlw	0
  2364  0F47  00E2               	movwf	main@i+1
  2365  0F48  0862               	movf	main@i+1,w
  2366  0F49  3A80               	xorlw	128
  2367  0F4A  00FF               	movwf	127
  2368  0F4B  3080               	movlw	128
  2369  0F4C  027F               	subwf	127,w
  2370  0F4D  1D03               	skipz
  2371  0F4E  2F51               	goto	u2755
  2372  0F4F  3001               	movlw	1
  2373  0F50  0261               	subwf	main@i,w
  2374  0F51                     u2755:	
  2375  0F51  1C03               	btfss	3,0
  2376  0F52  2FE2               	goto	l3347
  2377  0F53                     l3319:	
  2378                           
  2379                           ;Main.c: 538: (LCDByte(0b00000001,0));
  2380  0F53  1283               	bcf	3,5	;RP0=0, select bank0
  2381  0F54  1303               	bcf	3,6	;RP1=0, select bank0
  2382  0F55  01A5               	clrf	LCDByte@isdata
  2383  0F56  3001               	movlw	1
  2384  0F57  160A  118A  23AF  120A  158A  	fcall	_LCDByte
  2385                           
  2386                           ;Main.c: 539: { LCDGotoXY(1,0); LCDWriteString("Device will start");};
  2387  0F5C  1283               	bcf	3,5	;RP0=0, select bank0
  2388  0F5D  1303               	bcf	3,6	;RP1=0, select bank0
  2389  0F5E  01AC               	clrf	LCDGotoXY@y
  2390  0F5F  3001               	movlw	1
  2391  0F60  160A  118A  2261  120A  158A  	fcall	_LCDGotoXY
  2392  0F65  3079               	movlw	low (STR_61| (0+32768))
  2393  0F66  1283               	bcf	3,5	;RP0=0, select bank0
  2394  0F67  1303               	bcf	3,6	;RP1=0, select bank0
  2395  0F68  00AC               	movwf	LCDWriteString@msg
  2396  0F69  3087               	movlw	high (STR_61| (0+32768))
  2397  0F6A  00AD               	movwf	LCDWriteString@msg+1
  2398  0F6B  120A  158A  21B1  120A  158A  	fcall	_LCDWriteString
  2399                           
  2400                           ;Main.c: 540: { LCDGotoXY(7,1); LCDWriteString("in ");};
  2401  0F70  1283               	bcf	3,5	;RP0=0, select bank0
  2402  0F71  1303               	bcf	3,6	;RP1=0, select bank0
  2403  0F72  01AC               	clrf	LCDGotoXY@y
  2404  0F73  0AAC               	incf	LCDGotoXY@y,f
  2405  0F74  3007               	movlw	7
  2406  0F75  160A  118A  2261  120A  158A  	fcall	_LCDGotoXY
  2407  0F7A  3037               	movlw	low (STR_62| (0+32768))
  2408  0F7B  1283               	bcf	3,5	;RP0=0, select bank0
  2409  0F7C  1303               	bcf	3,6	;RP1=0, select bank0
  2410  0F7D  00AC               	movwf	LCDWriteString@msg
  2411  0F7E  3089               	movlw	high (STR_62| (0+32768))
  2412  0F7F  00AD               	movwf	LCDWriteString@msg+1
  2413  0F80  120A  158A  21B1  120A  158A  	fcall	_LCDWriteString
  2414                           
  2415                           ;Main.c: 541: { LCDGotoXY(10,1); LCDWriteInt(i,2);};
  2416  0F85  1283               	bcf	3,5	;RP0=0, select bank0
  2417  0F86  1303               	bcf	3,6	;RP1=0, select bank0
  2418  0F87  01AC               	clrf	LCDGotoXY@y
  2419  0F88  0AAC               	incf	LCDGotoXY@y,f
  2420  0F89  300A               	movlw	10
  2421  0F8A  160A  118A  2261  120A  158A  	fcall	_LCDGotoXY
  2422  0F8F  1283               	bcf	3,5	;RP0=0, select bank0
  2423  0F90  1303               	bcf	3,6	;RP1=0, select bank0
  2424  0F91  0862               	movf	main@i+1,w
  2425  0F92  00AD               	movwf	LCDWriteInt@val+1
  2426  0F93  0861               	movf	main@i,w
  2427  0F94  00AC               	movwf	LCDWriteInt@val
  2428  0F95  3002               	movlw	2
  2429  0F96  00DE               	movwf	??_main
  2430  0F97  085E               	movf	??_main,w
  2431  0F98  00AE               	movwf	LCDWriteInt@field_length
  2432  0F99  120A  118A  2531  120A  158A  	fcall	_LCDWriteInt
  2433                           
  2434                           ;Main.c: 542: { LCDGotoXY(6,2); LCDWriteString("seconds");};
  2435  0F9E  3002               	movlw	2
  2436  0F9F  1283               	bcf	3,5	;RP0=0, select bank0
  2437  0FA0  1303               	bcf	3,6	;RP1=0, select bank0
  2438  0FA1  00DE               	movwf	??_main
  2439  0FA2  085E               	movf	??_main,w
  2440  0FA3  00AC               	movwf	LCDGotoXY@y
  2441  0FA4  3006               	movlw	6
  2442  0FA5  160A  118A  2261  120A  158A  	fcall	_LCDGotoXY
  2443  0FAA  30EA               	movlw	low (STR_63| (0+32768))
  2444  0FAB  1283               	bcf	3,5	;RP0=0, select bank0
  2445  0FAC  1303               	bcf	3,6	;RP1=0, select bank0
  2446  0FAD  00AC               	movwf	LCDWriteString@msg
  2447  0FAE  3088               	movlw	high (STR_63| (0+32768))
  2448  0FAF  00AD               	movwf	LCDWriteString@msg+1
  2449  0FB0  120A  158A  21B1  120A  158A  	fcall	_LCDWriteString
  2450                           
  2451                           ;Main.c: 543: _delay((unsigned long)((1000)*(20000000/4000.0)));
  2452  0FB5  301A               	movlw	26
  2453  0FB6  1283               	bcf	3,5	;RP0=0, select bank0
  2454  0FB7  1303               	bcf	3,6	;RP1=0, select bank0
  2455  0FB8  00E0               	movwf	??_main+2
  2456  0FB9  305E               	movlw	94
  2457  0FBA  00DF               	movwf	??_main+1
  2458  0FBB  3086               	movlw	134
  2459  0FBC  00DE               	movwf	??_main
  2460  0FBD                     u2867:	
  2461  0FBD  0BDE               	decfsz	??_main,f
  2462  0FBE  2FBD               	goto	u2867
  2463  0FBF  0BDF               	decfsz	??_main+1,f
  2464  0FC0  2FBD               	goto	u2867
  2465  0FC1  0BE0               	decfsz	??_main+2,f
  2466  0FC2  2FBD               	goto	u2867
  2467  0FC3  0000               	nop
  2468                           
  2469                           ;Main.c: 544: if (i == 1) {
  2470  0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  2471  0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  2472  0FC6  0361               	decf	main@i,w
  2473  0FC7  0462               	iorwf	main@i+1,w
  2474  0FC8  1D03               	btfss	3,2
  2475  0FC9  2FCF               	goto	l3343
  2476                           
  2477                           ;Main.c: 545: buzzerTone();
  2478  0FCA  160A  118A  22EF  120A  158A  	fcall	_buzzerTone
  2479  0FCF                     l3343:	
  2480  0FCF  30FF               	movlw	255
  2481  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  2482  0FD1  1303               	bcf	3,6	;RP1=0, select bank0
  2483  0FD2  07E1               	addwf	main@i,f
  2484  0FD3  1803               	skipnc
  2485  0FD4  0AE2               	incf	main@i+1,f
  2486  0FD5  30FF               	movlw	255
  2487  0FD6  07E2               	addwf	main@i+1,f
  2488  0FD7  0862               	movf	main@i+1,w
  2489  0FD8  3A80               	xorlw	128
  2490  0FD9  00FF               	movwf	127
  2491  0FDA  3080               	movlw	128
  2492  0FDB  027F               	subwf	127,w
  2493  0FDC  1D03               	skipz
  2494  0FDD  2FE0               	goto	u2775
  2495  0FDE  3001               	movlw	1
  2496  0FDF  0261               	subwf	main@i,w
  2497  0FE0                     u2775:	
  2498  0FE0  1803               	skipnc
  2499  0FE1  2F53               	goto	l3319
  2500  0FE2                     l3347:	
  2501                           
  2502                           ;Main.c: 546: }
  2503                           ;Main.c: 547: }
  2504                           ;Main.c: 549: (LCDByte(0b00000001,0));
  2505  0FE2  1283               	bcf	3,5	;RP0=0, select bank0
  2506  0FE3  1303               	bcf	3,6	;RP1=0, select bank0
  2507  0FE4  01A5               	clrf	LCDByte@isdata
  2508  0FE5  3001               	movlw	1
  2509  0FE6  160A  118A  23AF  120A  158A  	fcall	_LCDByte
  2510  0FEB                     l3349:	
  2511                           ;Main.c: 570: while (1) {
  2512                           
  2513                           
  2514                           ;Main.c: 576: SPEED();
  2515  0FEB  120A  118A  2042  120A  158A  	fcall	_SPEED
  2516                           
  2517                           ;Main.c: 578: _delay((unsigned long)((1000)*(20000000/4000.0)));
  2518  0FF0  301A               	movlw	26
  2519  0FF1  1283               	bcf	3,5	;RP0=0, select bank0
  2520  0FF2  1303               	bcf	3,6	;RP1=0, select bank0
  2521  0FF3  00E0               	movwf	??_main+2
  2522  0FF4  305E               	movlw	94
  2523  0FF5  00DF               	movwf	??_main+1
  2524  0FF6  3086               	movlw	134
  2525  0FF7  00DE               	movwf	??_main
  2526  0FF8                     u2877:	
  2527  0FF8  0BDE               	decfsz	??_main,f
  2528  0FF9  2FF8               	goto	u2877
  2529  0FFA  0BDF               	decfsz	??_main+1,f
  2530  0FFB  2FF8               	goto	u2877
  2531  0FFC  0BE0               	decfsz	??_main+2,f
  2532  0FFD  2FF8               	goto	u2877
  2533  0FFE  0000               	nop
  2534  0FFF  2FEB               	goto	l3349
  2535  1000                     __end_of_main:	
  2536                           
  2537                           	psect	text1
  2538  12EF                     __ptext1:	
  2539 ;; *************** function _buzzerTone *****************
  2540 ;; Defined at:
  2541 ;;		line 419 in file "Main.c"
  2542 ;; Parameters:    Size  Location     Type
  2543 ;;		None
  2544 ;; Auto vars:     Size  Location     Type
  2545 ;;  i               2    3[BANK0 ] int 
  2546 ;; Return value:  Size  Location     Type
  2547 ;;		None               void
  2548 ;; Registers used:
  2549 ;;		wreg, status,2, btemp+1
  2550 ;; Tracked objects:
  2551 ;;		On entry : 0/0
  2552 ;;		On exit  : 0/0
  2553 ;;		Unchanged: 0/0
  2554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2555 ;;      Params:         0       0       0       0       0
  2556 ;;      Locals:         0       2       0       0       0
  2557 ;;      Temps:          0       3       0       0       0
  2558 ;;      Totals:         0       5       0       0       0
  2559 ;;Total ram usage:        5 bytes
  2560 ;; Hardware stack levels used:    1
  2561 ;; Hardware stack levels required when called:    2
  2562 ;; This function calls:
  2563 ;;		Nothing
  2564 ;; This function is called by:
  2565 ;;		_main
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           
  2569                           
  2570                           ;psect for function _buzzerTone
  2571  12EF                     _buzzerTone:	
  2572                           
  2573                           ;Main.c: 420: TRISB6 = 0;
  2574                           
  2575                           ;incstack = 0
  2576                           ; Regs used in _buzzerTone: [wreg+status,2+btemp+1]
  2577  12EF  1683               	bsf	3,5	;RP0=1, select bank1
  2578  12F0  1303               	bcf	3,6	;RP1=0, select bank1
  2579  12F1  1306               	bcf	6,6	;volatile
  2580                           
  2581                           ;Main.c: 421: for (int i = 0; i < 3; i++) {
  2582  12F2  1283               	bcf	3,5	;RP0=0, select bank0
  2583  12F3  1303               	bcf	3,6	;RP1=0, select bank0
  2584  12F4  01A3               	clrf	buzzerTone@i
  2585  12F5  01A4               	clrf	buzzerTone@i+1
  2586  12F6                     L1:	
  2587  12F6  0824               	movf	buzzerTone@i+1,w
  2588  12F7  3A80               	xorlw	128
  2589  12F8  00FF               	movwf	127
  2590  12F9  3080               	movlw	128
  2591  12FA  027F               	subwf	127,w
  2592  12FB  1D03               	skipz
  2593  12FC  2AFF               	goto	u2615
  2594  12FD  3003               	movlw	3
  2595  12FE  0223               	subwf	buzzerTone@i,w
  2596  12FF                     u2615:	
  2597  12FF  1803               	btfsc	3,0
  2598  1300  0008               	return
  2599                           
  2600                           ;Main.c: 422: RB6 = 1;
  2601  1301  1283               	bcf	3,5	;RP0=0, select bank0
  2602  1302  1303               	bcf	3,6	;RP1=0, select bank0
  2603  1303  1706               	bsf	6,6	;volatile
  2604                           
  2605                           ;Main.c: 423: _delay((unsigned long)((100)*(20000000/4000.0)));
  2606  1304  3003               	movlw	3
  2607  1305  00A2               	movwf	??_buzzerTone+2
  2608  1306  308A               	movlw	138
  2609  1307  00A1               	movwf	??_buzzerTone+1
  2610  1308  3056               	movlw	86
  2611  1309  00A0               	movwf	??_buzzerTone
  2612  130A                     u2887:	
  2613  130A  0BA0               	decfsz	??_buzzerTone,f
  2614  130B  2B0A               	goto	u2887
  2615  130C  0BA1               	decfsz	??_buzzerTone+1,f
  2616  130D  2B0A               	goto	u2887
  2617  130E  0BA2               	decfsz	??_buzzerTone+2,f
  2618  130F  2B0A               	goto	u2887
  2619  1310  2B11               	nop2
  2620                           
  2621                           ;Main.c: 424: RB6 = 0;
  2622  1311  1283               	bcf	3,5	;RP0=0, select bank0
  2623  1312  1303               	bcf	3,6	;RP1=0, select bank0
  2624  1313  1306               	bcf	6,6	;volatile
  2625                           
  2626                           ;Main.c: 425: _delay((unsigned long)((100)*(20000000/4000.0)));
  2627  1314  3003               	movlw	3
  2628  1315  00A2               	movwf	??_buzzerTone+2
  2629  1316  308A               	movlw	138
  2630  1317  00A1               	movwf	??_buzzerTone+1
  2631  1318  3056               	movlw	86
  2632  1319  00A0               	movwf	??_buzzerTone
  2633  131A                     u2897:	
  2634  131A  0BA0               	decfsz	??_buzzerTone,f
  2635  131B  2B1A               	goto	u2897
  2636  131C  0BA1               	decfsz	??_buzzerTone+1,f
  2637  131D  2B1A               	goto	u2897
  2638  131E  0BA2               	decfsz	??_buzzerTone+2,f
  2639  131F  2B1A               	goto	u2897
  2640  1320  2B21               	nop2
  2641  1321  3001               	movlw	1
  2642  1322  1283               	bcf	3,5	;RP0=0, select bank0
  2643  1323  1303               	bcf	3,6	;RP1=0, select bank0
  2644  1324  07A3               	addwf	buzzerTone@i,f
  2645  1325  1803               	skipnc
  2646  1326  0AA4               	incf	buzzerTone@i+1,f
  2647  1327  3000               	movlw	0
  2648  1328  07A4               	addwf	buzzerTone@i+1,f
  2649  1329  2AF6               	goto	L1
  2650  132A                     __end_of_buzzerTone:	
  2651                           
  2652                           	psect	text2
  2653  0042                     __ptext2:	
  2654 ;; *************** function _SPEED *****************
  2655 ;; Defined at:
  2656 ;;		line 247 in file "Main.c"
  2657 ;; Parameters:    Size  Location     Type
  2658 ;;		None
  2659 ;; Auto vars:     Size  Location     Type
  2660 ;;  l               2   22[BANK1 ] int 
  2661 ;;  l               2   20[BANK1 ] int 
  2662 ;;  i               2   16[BANK1 ] int 
  2663 ;;  i               2   30[BANK1 ] int 
  2664 ;;  l               2   32[BANK1 ] int 
  2665 ;;  l               2   28[BANK1 ] int 
  2666 ;;  l               2   26[BANK1 ] int 
  2667 ;;  i               2   24[BANK1 ] int 
  2668 ;;  kmph            7    7[BANK1 ] unsigned char [7]
  2669 ;;  knot            7    0[BANK1 ] unsigned char [7]
  2670 ;;  count1          2   18[BANK1 ] int 
  2671 ;;  i               2   14[BANK1 ] int 
  2672 ;; Return value:  Size  Location     Type
  2673 ;;		None               void
  2674 ;; Registers used:
  2675 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2676 ;; Tracked objects:
  2677 ;;		On entry : 0/0
  2678 ;;		On exit  : 0/0
  2679 ;;		Unchanged: 0/0
  2680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2681 ;;      Params:         0       0       0       0       0
  2682 ;;      Locals:         0       0      34       0       0
  2683 ;;      Temps:          0       3       0       0       0
  2684 ;;      Totals:         0       3      34       0       0
  2685 ;;Total ram usage:       37 bytes
  2686 ;; Hardware stack levels used:    1
  2687 ;; Hardware stack levels required when called:    7
  2688 ;; This function calls:
  2689 ;;		_LCDByte
  2690 ;;		_LCDGotoXY
  2691 ;;		_LCDWriteChar
  2692 ;;		_LCDWriteInt
  2693 ;;		_LCDWriteString
  2694 ;;		_POSITION
  2695 ;;		_SendByteSerially
  2696 ;;		_SendStringSerially
  2697 ;;		_USARTInit
  2698 ;;		_USARTReadData
  2699 ;;		___awmod
  2700 ;;		___wmul
  2701 ;;		_fireIndiSend
  2702 ;; This function is called by:
  2703 ;;		_main
  2704 ;; This function uses a non-reentrant model
  2705 ;;
  2706                           
  2707                           
  2708                           ;psect for function _SPEED
  2709  0042                     _SPEED:	
  2710                           
  2711                           ;Main.c: 248: USARTInit(9600);
  2712                           
  2713                           ;incstack = 0
  2714                           ; Regs used in _SPEED: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2715  0042  3080               	movlw	128
  2716  0043  1283               	bcf	3,5	;RP0=0, select bank0
  2717  0044  1303               	bcf	3,6	;RP1=0, select bank0
  2718  0045  00A0               	movwf	USARTInit@baud_rate
  2719  0046  3025               	movlw	37
  2720  0047  00A1               	movwf	USARTInit@baud_rate+1
  2721  0048  160A  118A  23F6  120A  118A  	fcall	_USARTInit
  2722                           
  2723                           ;Main.c: 251: int count1 = 0, i = 0;
  2724  004D  1683               	bsf	3,5	;RP0=1, select bank1
  2725  004E  1303               	bcf	3,6	;RP1=0, select bank1
  2726  004F  01B2               	clrf	SPEED@count1^(0+128)
  2727  0050  01B3               	clrf	(SPEED@count1+1)^(0+128)
  2728  0051  01AE               	clrf	SPEED@i^(0+128)
  2729  0052  01AF               	clrf	(SPEED@i+1)^(0+128)
  2730                           
  2731                           ;Main.c: 252: char kmph[7];
  2732                           ;Main.c: 253: char knot[7];
  2733                           ;Main.c: 254: for (int i = 0; i < 7; i++) {
  2734  0053  01B8               	clrf	SPEED@i_353^(0+128)
  2735  0054  01B9               	clrf	(SPEED@i_353+1)^(0+128)
  2736  0055  0839               	movf	(SPEED@i_353+1)^(0+128),w
  2737  0056  3A80               	xorlw	128
  2738  0057  00FF               	movwf	127
  2739  0058  3080               	movlw	128
  2740  0059  027F               	subwf	127,w
  2741  005A  1D03               	skipz
  2742  005B  285E               	goto	u2285
  2743  005C  3007               	movlw	7
  2744  005D  0238               	subwf	SPEED@i_353^(0+128),w
  2745  005E                     u2285:	
  2746  005E  1803               	btfsc	3,0
  2747  005F  288C               	goto	l2885
  2748  0060                     l2879:	
  2749                           
  2750                           ;Main.c: 255: kmph[i] = '0';
  2751  0060  3030               	movlw	48
  2752  0061  1283               	bcf	3,5	;RP0=0, select bank0
  2753  0062  1303               	bcf	3,6	;RP1=0, select bank0
  2754  0063  00DB               	movwf	??_SPEED
  2755  0064  1683               	bsf	3,5	;RP0=1, select bank1
  2756  0065  1303               	bcf	3,6	;RP1=0, select bank1
  2757  0066  0838               	movf	SPEED@i_353^(0+128),w
  2758  0067  3EA7               	addlw	(low (SPEED@kmph| 0))& (0+255)
  2759  0068  0084               	movwf	4
  2760  0069  1283               	bcf	3,5	;RP0=0, select bank0
  2761  006A  1303               	bcf	3,6	;RP1=0, select bank0
  2762  006B  085B               	movf	??_SPEED,w
  2763  006C  1383               	bcf	3,7	;select IRP bank1
  2764  006D  0080               	movwf	0
  2765                           
  2766                           ;Main.c: 256: knot[i] = '0';
  2767  006E  3030               	movlw	48
  2768  006F  00DB               	movwf	??_SPEED
  2769  0070  1683               	bsf	3,5	;RP0=1, select bank1
  2770  0071  1303               	bcf	3,6	;RP1=0, select bank1
  2771  0072  0838               	movf	SPEED@i_353^(0+128),w
  2772  0073  3EA0               	addlw	(low (SPEED@knot| 0))& (0+255)
  2773  0074  0084               	movwf	4
  2774  0075  1283               	bcf	3,5	;RP0=0, select bank0
  2775  0076  1303               	bcf	3,6	;RP1=0, select bank0
  2776  0077  085B               	movf	??_SPEED,w
  2777  0078  0080               	movwf	0
  2778  0079  3001               	movlw	1
  2779  007A  1683               	bsf	3,5	;RP0=1, select bank1
  2780  007B  1303               	bcf	3,6	;RP1=0, select bank1
  2781  007C  07B8               	addwf	SPEED@i_353^(0+128),f
  2782  007D  1803               	skipnc
  2783  007E  0AB9               	incf	(SPEED@i_353+1)^(0+128),f
  2784  007F  3000               	movlw	0
  2785  0080  07B9               	addwf	(SPEED@i_353+1)^(0+128),f
  2786  0081  0839               	movf	(SPEED@i_353+1)^(0+128),w
  2787  0082  3A80               	xorlw	128
  2788  0083  00FF               	movwf	127
  2789  0084  3080               	movlw	128
  2790  0085  027F               	subwf	127,w
  2791  0086  1D03               	skipz
  2792  0087  288A               	goto	u2295
  2793  0088  3007               	movlw	7
  2794  0089  0238               	subwf	SPEED@i_353^(0+128),w
  2795  008A                     u2295:	
  2796  008A  1C03               	skipc
  2797  008B  2860               	goto	l2879
  2798  008C                     l2885:	
  2799                           
  2800                           ;Main.c: 257: }
  2801                           ;Main.c: 258: (LCDByte(0b00000001,0));
  2802  008C  1283               	bcf	3,5	;RP0=0, select bank0
  2803  008D  1303               	bcf	3,6	;RP1=0, select bank0
  2804  008E  01A5               	clrf	LCDByte@isdata
  2805  008F  3001               	movlw	1
  2806  0090  160A  118A  23AF  120A  118A  	fcall	_LCDByte
  2807  0095                     l2887:	
  2808                           ;Main.c: 259: while (i < 32900) {
  2809                           
  2810                           
  2811                           ;Main.c: 260: i++;
  2812  0095  3001               	movlw	1
  2813  0096  1683               	bsf	3,5	;RP0=1, select bank1
  2814  0097  1303               	bcf	3,6	;RP1=0, select bank1
  2815  0098  07AE               	addwf	SPEED@i^(0+128),f
  2816  0099  1803               	skipnc
  2817  009A  0AAF               	incf	(SPEED@i+1)^(0+128),f
  2818  009B  3000               	movlw	0
  2819  009C  07AF               	addwf	(SPEED@i+1)^(0+128),f
  2820                           
  2821                           ;Main.c: 261: if (USARTReadData() == '$') {
  2822  009D  160A  118A  221B  120A  118A  	fcall	_USARTReadData
  2823  00A2  3A24               	xorlw	36
  2824  00A3  1D03               	skipz
  2825  00A4  2895               	goto	l2887
  2826                           
  2827                           ;Main.c: 262: _delay((unsigned long)((1.25)*(20000000/4000.0)));
  2828  00A5  3009               	movlw	9
  2829  00A6  1283               	bcf	3,5	;RP0=0, select bank0
  2830  00A7  1303               	bcf	3,6	;RP1=0, select bank0
  2831  00A8  00DC               	movwf	??_SPEED+1
  2832  00A9  301C               	movlw	28
  2833  00AA  00DB               	movwf	??_SPEED
  2834  00AB                     u2907:	
  2835  00AB  0BDB               	decfsz	??_SPEED,f
  2836  00AC  28AB               	goto	u2907
  2837  00AD  0BDC               	decfsz	??_SPEED+1,f
  2838  00AE  28AB               	goto	u2907
  2839  00AF  0000               	nop
  2840                           
  2841                           ;Main.c: 263: if (USARTReadData() == 'G') {
  2842  00B0  160A  118A  221B  120A  118A  	fcall	_USARTReadData
  2843  00B5  3A47               	xorlw	71
  2844  00B6  1D03               	skipz
  2845  00B7  29C8               	goto	l2961
  2846                           
  2847                           ;Main.c: 264: _delay((unsigned long)((1.25)*(20000000/4000.0)));
  2848  00B8  3009               	movlw	9
  2849  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  2850  00BA  1303               	bcf	3,6	;RP1=0, select bank0
  2851  00BB  00DC               	movwf	??_SPEED+1
  2852  00BC  301C               	movlw	28
  2853  00BD  00DB               	movwf	??_SPEED
  2854  00BE                     u2917:	
  2855  00BE  0BDB               	decfsz	??_SPEED,f
  2856  00BF  28BE               	goto	u2917
  2857  00C0  0BDC               	decfsz	??_SPEED+1,f
  2858  00C1  28BE               	goto	u2917
  2859  00C2  0000               	nop
  2860                           
  2861                           ;Main.c: 265: if (USARTReadData() == 'P') {
  2862  00C3  160A  118A  221B  120A  118A  	fcall	_USARTReadData
  2863  00C8  3A50               	xorlw	80
  2864  00C9  1D03               	skipz
  2865  00CA  29C8               	goto	l2961
  2866                           
  2867                           ;Main.c: 266: _delay((unsigned long)((1.25)*(20000000/4000.0)));
  2868  00CB  3009               	movlw	9
  2869  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  2870  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  2871  00CE  00DC               	movwf	??_SPEED+1
  2872  00CF  301C               	movlw	28
  2873  00D0  00DB               	movwf	??_SPEED
  2874  00D1                     u2927:	
  2875  00D1  0BDB               	decfsz	??_SPEED,f
  2876  00D2  28D1               	goto	u2927
  2877  00D3  0BDC               	decfsz	??_SPEED+1,f
  2878  00D4  28D1               	goto	u2927
  2879  00D5  0000               	nop
  2880                           
  2881                           ;Main.c: 267: if (USARTReadData() == 'V') {
  2882  00D6  160A  118A  221B  120A  118A  	fcall	_USARTReadData
  2883  00DB  3A56               	xorlw	86
  2884  00DC  1D03               	skipz
  2885  00DD  29C8               	goto	l2961
  2886                           
  2887                           ;Main.c: 268: _delay((unsigned long)((1.25)*(20000000/4000.0)));
  2888  00DE  3009               	movlw	9
  2889  00DF  1283               	bcf	3,5	;RP0=0, select bank0
  2890  00E0  1303               	bcf	3,6	;RP1=0, select bank0
  2891  00E1  00DC               	movwf	??_SPEED+1
  2892  00E2  301C               	movlw	28
  2893  00E3  00DB               	movwf	??_SPEED
  2894  00E4                     u2937:	
  2895  00E4  0BDB               	decfsz	??_SPEED,f
  2896  00E5  28E4               	goto	u2937
  2897  00E6  0BDC               	decfsz	??_SPEED+1,f
  2898  00E7  28E4               	goto	u2937
  2899  00E8  0000               	nop
  2900                           
  2901                           ;Main.c: 269: if (USARTReadData() == 'T') {
  2902  00E9  160A  118A  221B  120A  118A  	fcall	_USARTReadData
  2903  00EE  3A54               	xorlw	84
  2904  00EF  1D03               	skipz
  2905  00F0  29C8               	goto	l2961
  2906                           
  2907                           ;Main.c: 270: _delay((unsigned long)((1.25)*(20000000/4000.0)));
  2908  00F1  3009               	movlw	9
  2909  00F2  1283               	bcf	3,5	;RP0=0, select bank0
  2910  00F3  1303               	bcf	3,6	;RP1=0, select bank0
  2911  00F4  00DC               	movwf	??_SPEED+1
  2912  00F5  301C               	movlw	28
  2913  00F6  00DB               	movwf	??_SPEED
  2914  00F7                     u2947:	
  2915  00F7  0BDB               	decfsz	??_SPEED,f
  2916  00F8  28F7               	goto	u2947
  2917  00F9  0BDC               	decfsz	??_SPEED+1,f
  2918  00FA  28F7               	goto	u2947
  2919  00FB  0000               	nop
  2920                           
  2921                           ;Main.c: 271: if (USARTReadData() == 'G') {
  2922  00FC  160A  118A  221B  120A  118A  	fcall	_USARTReadData
  2923  0101  3A47               	xorlw	71
  2924  0102  1D03               	skipz
  2925  0103  29C8               	goto	l2961
  2926                           
  2927                           ;Main.c: 272: _delay((unsigned long)((1.25)*(20000000/4000.0)));
  2928  0104  3009               	movlw	9
  2929  0105  1283               	bcf	3,5	;RP0=0, select bank0
  2930  0106  1303               	bcf	3,6	;RP1=0, select bank0
  2931  0107  00DC               	movwf	??_SPEED+1
  2932  0108  301C               	movlw	28
  2933  0109  00DB               	movwf	??_SPEED
  2934  010A                     u2957:	
  2935  010A  0BDB               	decfsz	??_SPEED,f
  2936  010B  290A               	goto	u2957
  2937  010C  0BDC               	decfsz	??_SPEED+1,f
  2938  010D  290A               	goto	u2957
  2939  010E  0000               	nop
  2940                           
  2941                           ;Main.c: 276: for (int i = 0; i < 70; i++) {
  2942  010F  1683               	bsf	3,5	;RP0=1, select bank1
  2943  0110  1303               	bcf	3,6	;RP1=0, select bank1
  2944  0111  01B0               	clrf	SPEED@i_354^(0+128)
  2945  0112  01B1               	clrf	(SPEED@i_354+1)^(0+128)
  2946  0113                     L2:	
  2947  0113  0831               	movf	(SPEED@i_354+1)^(0+128),w
  2948  0114  3A80               	xorlw	128
  2949  0115  00FF               	movwf	127
  2950  0116  3080               	movlw	128
  2951  0117  027F               	subwf	127,w
  2952  0118  1D03               	skipz
  2953  0119  291C               	goto	u2365
  2954  011A  3046               	movlw	70
  2955  011B  0230               	subwf	SPEED@i_354^(0+128),w
  2956  011C                     u2365:	
  2957  011C  1803               	btfsc	3,0
  2958  011D  29C8               	goto	l2961
  2959                           
  2960                           ;Main.c: 277: _delay((unsigned long)((1.25)*(20000000/4000.0)));
  2961  011E  3009               	movlw	9
  2962  011F  1283               	bcf	3,5	;RP0=0, select bank0
  2963  0120  1303               	bcf	3,6	;RP1=0, select bank0
  2964  0121  00DC               	movwf	??_SPEED+1
  2965  0122  301C               	movlw	28
  2966  0123  00DB               	movwf	??_SPEED
  2967  0124                     u2967:	
  2968  0124  0BDB               	decfsz	??_SPEED,f
  2969  0125  2924               	goto	u2967
  2970  0126  0BDC               	decfsz	??_SPEED+1,f
  2971  0127  2924               	goto	u2967
  2972  0128  0000               	nop
  2973                           
  2974                           ;Main.c: 278: if (USARTReadData() == ',') {
  2975  0129  160A  118A  221B  120A  118A  	fcall	_USARTReadData
  2976  012E  3A2C               	xorlw	44
  2977  012F  1D03               	skipz
  2978  0130  29BF               	goto	l2957
  2979                           
  2980                           ;Main.c: 279: ++count1;
  2981  0131  3001               	movlw	1
  2982  0132  1683               	bsf	3,5	;RP0=1, select bank1
  2983  0133  1303               	bcf	3,6	;RP1=0, select bank1
  2984  0134  07B2               	addwf	SPEED@count1^(0+128),f
  2985  0135  1803               	skipnc
  2986  0136  0AB3               	incf	(SPEED@count1+1)^(0+128),f
  2987  0137  3000               	movlw	0
  2988  0138  07B3               	addwf	(SPEED@count1+1)^(0+128),f
  2989                           
  2990                           ;Main.c: 280: if (count1 == 5) {
  2991  0139  3005               	movlw	5
  2992  013A  0632               	xorwf	SPEED@count1^(0+128),w
  2993  013B  0433               	iorwf	(SPEED@count1+1)^(0+128),w
  2994  013C  1D03               	btfss	3,2
  2995  013D  297B               	goto	l2941
  2996                           
  2997                           ;Main.c: 281: for (int l = 0; l < 7; l++) {
  2998  013E  01B4               	clrf	SPEED@l^(0+128)
  2999  013F  01B5               	clrf	(SPEED@l+1)^(0+128)
  3000  0140  0835               	movf	(SPEED@l+1)^(0+128),w
  3001  0141  3A80               	xorlw	128
  3002  0142  00FF               	movwf	127
  3003  0143  3080               	movlw	128
  3004  0144  027F               	subwf	127,w
  3005  0145  1D03               	skipz
  3006  0146  2949               	goto	u2395
  3007  0147  3007               	movlw	7
  3008  0148  0234               	subwf	SPEED@l^(0+128),w
  3009  0149                     u2395:	
  3010  0149  1803               	btfsc	3,0
  3011  014A  297B               	goto	l2941
  3012  014B                     l2933:	
  3013                           
  3014                           ;Main.c: 282: _delay((unsigned long)((1.25)*(20000000/4000.0)));
  3015  014B  3009               	movlw	9
  3016  014C  1283               	bcf	3,5	;RP0=0, select bank0
  3017  014D  1303               	bcf	3,6	;RP1=0, select bank0
  3018  014E  00DC               	movwf	??_SPEED+1
  3019  014F  301C               	movlw	28
  3020  0150  00DB               	movwf	??_SPEED
  3021  0151                     u2977:	
  3022  0151  0BDB               	decfsz	??_SPEED,f
  3023  0152  2951               	goto	u2977
  3024  0153  0BDC               	decfsz	??_SPEED+1,f
  3025  0154  2951               	goto	u2977
  3026  0155  0000               	nop
  3027                           
  3028                           ;Main.c: 283: knot[l] = USARTReadData();
  3029  0156  160A  118A  221B  120A  118A  	fcall	_USARTReadData
  3030  015B  1283               	bcf	3,5	;RP0=0, select bank0
  3031  015C  1303               	bcf	3,6	;RP1=0, select bank0
  3032  015D  00DB               	movwf	??_SPEED
  3033  015E  1683               	bsf	3,5	;RP0=1, select bank1
  3034  015F  1303               	bcf	3,6	;RP1=0, select bank1
  3035  0160  0834               	movf	SPEED@l^(0+128),w
  3036  0161  3EA0               	addlw	(low (SPEED@knot| 0))& (0+255)
  3037  0162  0084               	movwf	4
  3038  0163  1283               	bcf	3,5	;RP0=0, select bank0
  3039  0164  1303               	bcf	3,6	;RP1=0, select bank0
  3040  0165  085B               	movf	??_SPEED,w
  3041  0166  1383               	bcf	3,7	;select IRP bank1
  3042  0167  0080               	movwf	0
  3043  0168  3001               	movlw	1
  3044  0169  1683               	bsf	3,5	;RP0=1, select bank1
  3045  016A  1303               	bcf	3,6	;RP1=0, select bank1
  3046  016B  07B4               	addwf	SPEED@l^(0+128),f
  3047  016C  1803               	skipnc
  3048  016D  0AB5               	incf	(SPEED@l+1)^(0+128),f
  3049  016E  3000               	movlw	0
  3050  016F  07B5               	addwf	(SPEED@l+1)^(0+128),f
  3051  0170  0835               	movf	(SPEED@l+1)^(0+128),w
  3052  0171  3A80               	xorlw	128
  3053  0172  00FF               	movwf	127
  3054  0173  3080               	movlw	128
  3055  0174  027F               	subwf	127,w
  3056  0175  1D03               	skipz
  3057  0176  2979               	goto	u2405
  3058  0177  3007               	movlw	7
  3059  0178  0234               	subwf	SPEED@l^(0+128),w
  3060  0179                     u2405:	
  3061  0179  1C03               	skipc
  3062  017A  294B               	goto	l2933
  3063  017B                     l2941:	
  3064                           
  3065                           ;Main.c: 285: }
  3066                           ;Main.c: 286: }
  3067                           ;Main.c: 288: if (count1 == 6) {
  3068  017B  3006               	movlw	6
  3069  017C  1683               	bsf	3,5	;RP0=1, select bank1
  3070  017D  1303               	bcf	3,6	;RP1=0, select bank1
  3071  017E  0632               	xorwf	SPEED@count1^(0+128),w
  3072  017F  0433               	iorwf	(SPEED@count1+1)^(0+128),w
  3073  0180  1D03               	btfss	3,2
  3074  0181  29BF               	goto	l2957
  3075                           
  3076                           ;Main.c: 289: for (int l = 0; l < 7; l++) {
  3077  0182  01B6               	clrf	SPEED@l_356^(0+128)
  3078  0183  01B7               	clrf	(SPEED@l_356+1)^(0+128)
  3079  0184  0837               	movf	(SPEED@l_356+1)^(0+128),w
  3080  0185  3A80               	xorlw	128
  3081  0186  00FF               	movwf	127
  3082  0187  3080               	movlw	128
  3083  0188  027F               	subwf	127,w
  3084  0189  1D03               	skipz
  3085  018A  298D               	goto	u2425
  3086  018B  3007               	movlw	7
  3087  018C  0236               	subwf	SPEED@l_356^(0+128),w
  3088  018D                     u2425:	
  3089  018D  1803               	btfsc	3,0
  3090  018E  29BF               	goto	l2957
  3091  018F                     l2949:	
  3092                           
  3093                           ;Main.c: 290: _delay((unsigned long)((1.25)*(20000000/4000.0)));
  3094  018F  3009               	movlw	9
  3095  0190  1283               	bcf	3,5	;RP0=0, select bank0
  3096  0191  1303               	bcf	3,6	;RP1=0, select bank0
  3097  0192  00DC               	movwf	??_SPEED+1
  3098  0193  301C               	movlw	28
  3099  0194  00DB               	movwf	??_SPEED
  3100  0195                     u2987:	
  3101  0195  0BDB               	decfsz	??_SPEED,f
  3102  0196  2995               	goto	u2987
  3103  0197  0BDC               	decfsz	??_SPEED+1,f
  3104  0198  2995               	goto	u2987
  3105  0199  0000               	nop
  3106                           
  3107                           ;Main.c: 291: kmph[l] = USARTReadData();
  3108  019A  160A  118A  221B  120A  118A  	fcall	_USARTReadData
  3109  019F  1283               	bcf	3,5	;RP0=0, select bank0
  3110  01A0  1303               	bcf	3,6	;RP1=0, select bank0
  3111  01A1  00DB               	movwf	??_SPEED
  3112  01A2  1683               	bsf	3,5	;RP0=1, select bank1
  3113  01A3  1303               	bcf	3,6	;RP1=0, select bank1
  3114  01A4  0836               	movf	SPEED@l_356^(0+128),w
  3115  01A5  3EA7               	addlw	(low (SPEED@kmph| 0))& (0+255)
  3116  01A6  0084               	movwf	4
  3117  01A7  1283               	bcf	3,5	;RP0=0, select bank0
  3118  01A8  1303               	bcf	3,6	;RP1=0, select bank0
  3119  01A9  085B               	movf	??_SPEED,w
  3120  01AA  1383               	bcf	3,7	;select IRP bank1
  3121  01AB  0080               	movwf	0
  3122  01AC  3001               	movlw	1
  3123  01AD  1683               	bsf	3,5	;RP0=1, select bank1
  3124  01AE  1303               	bcf	3,6	;RP1=0, select bank1
  3125  01AF  07B6               	addwf	SPEED@l_356^(0+128),f
  3126  01B0  1803               	skipnc
  3127  01B1  0AB7               	incf	(SPEED@l_356+1)^(0+128),f
  3128  01B2  3000               	movlw	0
  3129  01B3  07B7               	addwf	(SPEED@l_356+1)^(0+128),f
  3130  01B4  0837               	movf	(SPEED@l_356+1)^(0+128),w
  3131  01B5  3A80               	xorlw	128
  3132  01B6  00FF               	movwf	127
  3133  01B7  3080               	movlw	128
  3134  01B8  027F               	subwf	127,w
  3135  01B9  1D03               	skipz
  3136  01BA  29BD               	goto	u2435
  3137  01BB  3007               	movlw	7
  3138  01BC  0236               	subwf	SPEED@l_356^(0+128),w
  3139  01BD                     u2435:	
  3140  01BD  1C03               	skipc
  3141  01BE  298F               	goto	l2949
  3142  01BF                     l2957:	
  3143  01BF  3001               	movlw	1
  3144  01C0  1683               	bsf	3,5	;RP0=1, select bank1
  3145  01C1  1303               	bcf	3,6	;RP1=0, select bank1
  3146  01C2  07B0               	addwf	SPEED@i_354^(0+128),f
  3147  01C3  1803               	skipnc
  3148  01C4  0AB1               	incf	(SPEED@i_354+1)^(0+128),f
  3149  01C5  3000               	movlw	0
  3150  01C6  07B1               	addwf	(SPEED@i_354+1)^(0+128),f
  3151  01C7  2913               	goto	L2
  3152  01C8                     l2961:	
  3153                           ;Main.c: 311: continue;
  3154                           
  3155                           ;Main.c: 293: }
  3156                           ;Main.c: 295: }
  3157                           ;Main.c: 297: }
  3158                           ;Main.c: 300: }
  3159                           ;Main.c: 301: }
  3160                           ;Main.c: 302: }
  3161                           ;Main.c: 304: }
  3162                           ;Main.c: 305: }
  3163                           ;Main.c: 306: }
  3164                           ;Main.c: 310: } else {
  3165                           
  3166                           
  3167                           ;Main.c: 313: }
  3168                           ;Main.c: 314: count1 = 0;
  3169  01C8  1683               	bsf	3,5	;RP0=1, select bank1
  3170  01C9  1303               	bcf	3,6	;RP1=0, select bank1
  3171  01CA  01B2               	clrf	SPEED@count1^(0+128)
  3172  01CB  01B3               	clrf	(SPEED@count1+1)^(0+128)
  3173                           
  3174                           ;Main.c: 334: (LCDByte(0b00000001,0));
  3175  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  3176  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  3177  01CE  01A5               	clrf	LCDByte@isdata
  3178  01CF  3001               	movlw	1
  3179  01D0  160A  118A  23AF  120A  118A  	fcall	_LCDByte
  3180                           
  3181                           ;Main.c: 335: { LCDGotoXY(0,0); LCDWriteString("Kmph:");};
  3182  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  3183  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  3184  01D7  01AC               	clrf	LCDGotoXY@y
  3185  01D8  3000               	movlw	0
  3186  01D9  160A  118A  2261  120A  118A  	fcall	_LCDGotoXY
  3187  01DE  3019               	movlw	low (STR_17| (0+32768))
  3188  01DF  1283               	bcf	3,5	;RP0=0, select bank0
  3189  01E0  1303               	bcf	3,6	;RP1=0, select bank0
  3190  01E1  00AC               	movwf	LCDWriteString@msg
  3191  01E2  3089               	movlw	high (STR_17| (0+32768))
  3192  01E3  00AD               	movwf	LCDWriteString@msg+1
  3193  01E4  120A  158A  21B1  120A  118A  	fcall	_LCDWriteString
  3194                           
  3195                           ;Main.c: 336: { LCDGotoXY(0,1); LCDWriteString("Knot:");};
  3196  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  3197  01EA  1303               	bcf	3,6	;RP1=0, select bank0
  3198  01EB  01AC               	clrf	LCDGotoXY@y
  3199  01EC  0AAC               	incf	LCDGotoXY@y,f
  3200  01ED  3000               	movlw	0
  3201  01EE  160A  118A  2261  120A  118A  	fcall	_LCDGotoXY
  3202  01F3  301F               	movlw	low (STR_18| (0+32768))
  3203  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  3204  01F5  1303               	bcf	3,6	;RP1=0, select bank0
  3205  01F6  00AC               	movwf	LCDWriteString@msg
  3206  01F7  3089               	movlw	high (STR_18| (0+32768))
  3207  01F8  00AD               	movwf	LCDWriteString@msg+1
  3208  01F9  120A  158A  21B1  120A  118A  	fcall	_LCDWriteString
  3209                           
  3210                           ;Main.c: 337: for (int l = 0; kmph[l] != ',' && l < 7; l++) {
  3211  01FE  1683               	bsf	3,5	;RP0=1, select bank1
  3212  01FF  1303               	bcf	3,6	;RP1=0, select bank1
  3213  0200  01BA               	clrf	SPEED@l_359^(0+128)
  3214  0201  01BB               	clrf	(SPEED@l_359+1)^(0+128)
  3215  0202  2A23               	goto	l2979
  3216  0203                     l2975:	
  3217                           
  3218                           ;Main.c: 338: {LCDGotoXY(l + 5,0);LCDWriteChar(kmph[l]);};
  3219  0203  1283               	bcf	3,5	;RP0=0, select bank0
  3220  0204  1303               	bcf	3,6	;RP1=0, select bank0
  3221  0205  01AC               	clrf	LCDGotoXY@y
  3222  0206  1683               	bsf	3,5	;RP0=1, select bank1
  3223  0207  1303               	bcf	3,6	;RP1=0, select bank1
  3224  0208  083A               	movf	SPEED@l_359^(0+128),w
  3225  0209  3E05               	addlw	5
  3226  020A  160A  118A  2261  120A  118A  	fcall	_LCDGotoXY
  3227  020F  1683               	bsf	3,5	;RP0=1, select bank1
  3228  0210  1303               	bcf	3,6	;RP1=0, select bank1
  3229  0211  083A               	movf	SPEED@l_359^(0+128),w
  3230  0212  3EA7               	addlw	(low (SPEED@kmph| 0))& (0+255)
  3231  0213  0084               	movwf	4
  3232  0214  1383               	bcf	3,7	;select IRP bank1
  3233  0215  0800               	movf	0,w
  3234  0216  160A  118A  22B9  120A  118A  	fcall	_LCDWriteChar
  3235  021B  3001               	movlw	1
  3236  021C  1683               	bsf	3,5	;RP0=1, select bank1
  3237  021D  1303               	bcf	3,6	;RP1=0, select bank1
  3238  021E  07BA               	addwf	SPEED@l_359^(0+128),f
  3239  021F  1803               	skipnc
  3240  0220  0ABB               	incf	(SPEED@l_359+1)^(0+128),f
  3241  0221  3000               	movlw	0
  3242  0222  07BB               	addwf	(SPEED@l_359+1)^(0+128),f
  3243  0223                     l2979:	
  3244  0223  083A               	movf	SPEED@l_359^(0+128),w
  3245  0224  3EA7               	addlw	(low (SPEED@kmph| 0))& (0+255)
  3246  0225  0084               	movwf	4
  3247  0226  302C               	movlw	44
  3248  0227  1383               	bcf	3,7	;select IRP bank1
  3249  0228  0600               	xorwf	0,w
  3250  0229  1903               	btfsc	3,2
  3251  022A  2A36               	goto	l2983
  3252  022B  083B               	movf	(SPEED@l_359+1)^(0+128),w
  3253  022C  3A80               	xorlw	128
  3254  022D  00FF               	movwf	127
  3255  022E  3080               	movlw	128
  3256  022F  027F               	subwf	127,w
  3257  0230  1D03               	skipz
  3258  0231  2A34               	goto	u2465
  3259  0232  3007               	movlw	7
  3260  0233  023A               	subwf	SPEED@l_359^(0+128),w
  3261  0234                     u2465:	
  3262  0234  1C03               	skipc
  3263  0235  2A03               	goto	l2975
  3264  0236                     l2983:	
  3265                           
  3266                           ;Main.c: 339: }
  3267                           ;Main.c: 340: for (int l = 0; knot[l] != ',' && l < 7; l++) {
  3268  0236  1683               	bsf	3,5	;RP0=1, select bank1
  3269  0237  1303               	bcf	3,6	;RP1=0, select bank1
  3270  0238  01BC               	clrf	SPEED@l_360^(0+128)
  3271  0239  01BD               	clrf	(SPEED@l_360+1)^(0+128)
  3272  023A  2A5C               	goto	l2989
  3273  023B                     l2985:	
  3274                           
  3275                           ;Main.c: 341: {LCDGotoXY(l + 5,1);LCDWriteChar(knot[l]);};
  3276  023B  1283               	bcf	3,5	;RP0=0, select bank0
  3277  023C  1303               	bcf	3,6	;RP1=0, select bank0
  3278  023D  01AC               	clrf	LCDGotoXY@y
  3279  023E  0AAC               	incf	LCDGotoXY@y,f
  3280  023F  1683               	bsf	3,5	;RP0=1, select bank1
  3281  0240  1303               	bcf	3,6	;RP1=0, select bank1
  3282  0241  083C               	movf	SPEED@l_360^(0+128),w
  3283  0242  3E05               	addlw	5
  3284  0243  160A  118A  2261  120A  118A  	fcall	_LCDGotoXY
  3285  0248  1683               	bsf	3,5	;RP0=1, select bank1
  3286  0249  1303               	bcf	3,6	;RP1=0, select bank1
  3287  024A  083C               	movf	SPEED@l_360^(0+128),w
  3288  024B  3EA0               	addlw	(low (SPEED@knot| 0))& (0+255)
  3289  024C  0084               	movwf	4
  3290  024D  1383               	bcf	3,7	;select IRP bank1
  3291  024E  0800               	movf	0,w
  3292  024F  160A  118A  22B9  120A  118A  	fcall	_LCDWriteChar
  3293  0254  3001               	movlw	1
  3294  0255  1683               	bsf	3,5	;RP0=1, select bank1
  3295  0256  1303               	bcf	3,6	;RP1=0, select bank1
  3296  0257  07BC               	addwf	SPEED@l_360^(0+128),f
  3297  0258  1803               	skipnc
  3298  0259  0ABD               	incf	(SPEED@l_360+1)^(0+128),f
  3299  025A  3000               	movlw	0
  3300  025B  07BD               	addwf	(SPEED@l_360+1)^(0+128),f
  3301  025C                     l2989:	
  3302  025C  083C               	movf	SPEED@l_360^(0+128),w
  3303  025D  3EA0               	addlw	(low (SPEED@knot| 0))& (0+255)
  3304  025E  0084               	movwf	4
  3305  025F  302C               	movlw	44
  3306  0260  1383               	bcf	3,7	;select IRP bank1
  3307  0261  0600               	xorwf	0,w
  3308  0262  1903               	btfsc	3,2
  3309  0263  2A6F               	goto	l2993
  3310  0264  083D               	movf	(SPEED@l_360+1)^(0+128),w
  3311  0265  3A80               	xorlw	128
  3312  0266  00FF               	movwf	127
  3313  0267  3080               	movlw	128
  3314  0268  027F               	subwf	127,w
  3315  0269  1D03               	skipz
  3316  026A  2A6D               	goto	u2485
  3317  026B  3007               	movlw	7
  3318  026C  023C               	subwf	SPEED@l_360^(0+128),w
  3319  026D                     u2485:	
  3320  026D  1C03               	skipc
  3321  026E  2A3B               	goto	l2985
  3322  026F                     l2993:	
  3323                           
  3324                           ;Main.c: 342: }
  3325                           ;Main.c: 343: for (int l = 0; l < 7; l++) {
  3326  026F  1683               	bsf	3,5	;RP0=1, select bank1
  3327  0270  1303               	bcf	3,6	;RP1=0, select bank1
  3328  0271  01C0               	clrf	SPEED@l_361^(0+128)
  3329  0272  01C1               	clrf	(SPEED@l_361+1)^(0+128)
  3330  0273  0841               	movf	(SPEED@l_361+1)^(0+128),w
  3331  0274  3A80               	xorlw	128
  3332  0275  00FF               	movwf	127
  3333  0276  3080               	movlw	128
  3334  0277  027F               	subwf	127,w
  3335  0278  1D03               	skipz
  3336  0279  2A7C               	goto	u2495
  3337  027A  3007               	movlw	7
  3338  027B  0240               	subwf	SPEED@l_361^(0+128),w
  3339  027C                     u2495:	
  3340  027C  1803               	btfsc	3,0
  3341  027D  2AAC               	goto	l3007
  3342  027E                     l2999:	
  3343                           
  3344                           ;Main.c: 344: if (kmph[l] == '.' && (l > 0))
  3345  027E  1683               	bsf	3,5	;RP0=1, select bank1
  3346  027F  1303               	bcf	3,6	;RP1=0, select bank1
  3347  0280  0840               	movf	SPEED@l_361^(0+128),w
  3348  0281  3EA7               	addlw	(low (SPEED@kmph| 0))& (0+255)
  3349  0282  0084               	movwf	4
  3350  0283  302E               	movlw	46
  3351  0284  1383               	bcf	3,7	;select IRP bank1
  3352  0285  0600               	xorwf	0,w
  3353  0286  1D03               	btfss	3,2
  3354  0287  2A99               	goto	l350
  3355  0288  0841               	movf	(SPEED@l_361+1)^(0+128),w
  3356  0289  3A80               	xorlw	128
  3357  028A  00FF               	movwf	127
  3358  028B  3080               	movlw	128
  3359  028C  027F               	subwf	127,w
  3360  028D  1D03               	skipz
  3361  028E  2A91               	goto	u2515
  3362  028F  3001               	movlw	1
  3363  0290  0240               	subwf	SPEED@l_361^(0+128),w
  3364  0291                     u2515:	
  3365  0291  1C03               	skipc
  3366  0292  2A99               	goto	l350
  3367                           
  3368                           ;Main.c: 345: co = l;
  3369  0293  1683               	bsf	3,5	;RP0=1, select bank1
  3370  0294  1303               	bcf	3,6	;RP1=0, select bank1
  3371  0295  0841               	movf	(SPEED@l_361+1)^(0+128),w
  3372  0296  00C5               	movwf	(_co+1)^(0+128)
  3373  0297  0840               	movf	SPEED@l_361^(0+128),w
  3374  0298  00C4               	movwf	_co^(0+128)
  3375  0299                     l350:	
  3376  0299  3001               	movlw	1
  3377  029A  1683               	bsf	3,5	;RP0=1, select bank1
  3378  029B  1303               	bcf	3,6	;RP1=0, select bank1
  3379  029C  07C0               	addwf	SPEED@l_361^(0+128),f
  3380  029D  1803               	skipnc
  3381  029E  0AC1               	incf	(SPEED@l_361+1)^(0+128),f
  3382  029F  3000               	movlw	0
  3383  02A0  07C1               	addwf	(SPEED@l_361+1)^(0+128),f
  3384  02A1  0841               	movf	(SPEED@l_361+1)^(0+128),w
  3385  02A2  3A80               	xorlw	128
  3386  02A3  00FF               	movwf	127
  3387  02A4  3080               	movlw	128
  3388  02A5  027F               	subwf	127,w
  3389  02A6  1D03               	skipz
  3390  02A7  2AAA               	goto	u2525
  3391  02A8  3007               	movlw	7
  3392  02A9  0240               	subwf	SPEED@l_361^(0+128),w
  3393  02AA                     u2525:	
  3394  02AA  1C03               	skipc
  3395  02AB  2A7E               	goto	l2999
  3396  02AC                     l3007:	
  3397                           
  3398                           ;Main.c: 347: }
  3399                           ;Main.c: 349: if (co == 2) {
  3400  02AC  3002               	movlw	2
  3401  02AD  1683               	bsf	3,5	;RP0=1, select bank1
  3402  02AE  1303               	bcf	3,6	;RP1=0, select bank1
  3403  02AF  0644               	xorwf	_co^(0+128),w
  3404  02B0  0445               	iorwf	(_co+1)^(0+128),w
  3405  02B1  1D03               	btfss	3,2
  3406  02B2  2BFC               	goto	l3057
  3407                           
  3408                           ;Main.c: 350: checkSpd = ((kmph[co - 2] - 48)+(kmph[co - 1] - 48)*10);
  3409  02B3  0844               	movf	_co^(0+128),w
  3410  02B4  3EFF               	addlw	255
  3411  02B5  3EA7               	addlw	(low (SPEED@kmph| 0))& (0+255)
  3412  02B6  0084               	movwf	4
  3413  02B7  1383               	bcf	3,7	;select IRP bank1
  3414  02B8  0800               	movf	0,w
  3415  02B9  3ED0               	addlw	208
  3416  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  3417  02BB  1303               	bcf	3,6	;RP1=0, select bank0
  3418  02BC  00A0               	movwf	___wmul@multiplier
  3419  02BD  30FF               	movlw	255
  3420  02BE  1803               	skipnc
  3421  02BF  3000               	movlw	0
  3422  02C0  00A1               	movwf	___wmul@multiplier+1
  3423  02C1  300A               	movlw	10
  3424  02C2  00A2               	movwf	___wmul@multiplicand
  3425  02C3  3000               	movlw	0
  3426  02C4  00A3               	movwf	___wmul@multiplicand+1
  3427  02C5  160A  118A  223E  120A  118A  	fcall	___wmul
  3428  02CA  1683               	bsf	3,5	;RP0=1, select bank1
  3429  02CB  1303               	bcf	3,6	;RP1=0, select bank1
  3430  02CC  0844               	movf	_co^(0+128),w
  3431  02CD  3EFE               	addlw	254
  3432  02CE  3EA7               	addlw	(low (SPEED@kmph| 0))& (0+255)
  3433  02CF  0084               	movwf	4
  3434  02D0  1383               	bcf	3,7	;select IRP bank1
  3435  02D1  0800               	movf	0,w
  3436  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  3437  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  3438  02D4  0720               	addwf	?___wmul,w
  3439  02D5  00DB               	movwf	??_SPEED
  3440  02D6  0821               	movf	?___wmul+1,w
  3441  02D7  1803               	skipnc
  3442  02D8  0A21               	incf	?___wmul+1,w
  3443  02D9  00DC               	movwf	??_SPEED+1
  3444  02DA  085B               	movf	??_SPEED,w
  3445  02DB  3ED0               	addlw	208
  3446  02DC  1683               	bsf	3,5	;RP0=1, select bank1
  3447  02DD  1303               	bcf	3,6	;RP1=0, select bank1
  3448  02DE  00C2               	movwf	_checkSpd^(0+128)
  3449  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  3450  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  3451  02E1  085C               	movf	??_SPEED+1,w
  3452  02E2  1803               	skipnc
  3453  02E3  3E01               	addlw	1
  3454  02E4  3EFF               	addlw	255
  3455  02E5  1683               	bsf	3,5	;RP0=1, select bank1
  3456  02E6  1303               	bcf	3,6	;RP1=0, select bank1
  3457  02E7  00C3               	movwf	(_checkSpd+1)^(0+128)
  3458                           
  3459                           ;Main.c: 351: if (checkSpd > 30) {
  3460  02E8  0843               	movf	(_checkSpd+1)^(0+128),w
  3461  02E9  3A80               	xorlw	128
  3462  02EA  00FF               	movwf	127
  3463  02EB  3080               	movlw	128
  3464  02EC  027F               	subwf	127,w
  3465  02ED  1D03               	skipz
  3466  02EE  2AF1               	goto	u2545
  3467  02EF  301F               	movlw	31
  3468  02F0  0242               	subwf	_checkSpd^(0+128),w
  3469  02F1                     u2545:	
  3470  02F1  1C03               	skipc
  3471  02F2  2BFC               	goto	l3057
  3472                           
  3473                           ;Main.c: 352: warNo++;
  3474  02F3  3001               	movlw	1
  3475  02F4  1683               	bsf	3,5	;RP0=1, select bank1
  3476  02F5  1303               	bcf	3,6	;RP1=0, select bank1
  3477  02F6  07C6               	addwf	_warNo^(0+128),f
  3478  02F7  1803               	skipnc
  3479  02F8  0AC7               	incf	(_warNo+1)^(0+128),f
  3480  02F9  3000               	movlw	0
  3481  02FA  07C7               	addwf	(_warNo+1)^(0+128),f
  3482                           
  3483                           ;Main.c: 353: _delay((unsigned long)((1000)*(20000000/4000.0)));
  3484  02FB  301A               	movlw	26
  3485  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  3486  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  3487  02FE  00DD               	movwf	??_SPEED+2
  3488  02FF  305E               	movlw	94
  3489  0300  00DC               	movwf	??_SPEED+1
  3490  0301  3086               	movlw	134
  3491  0302  00DB               	movwf	??_SPEED
  3492  0303                     u2997:	
  3493  0303  0BDB               	decfsz	??_SPEED,f
  3494  0304  2B03               	goto	u2997
  3495  0305  0BDC               	decfsz	??_SPEED+1,f
  3496  0306  2B03               	goto	u2997
  3497  0307  0BDD               	decfsz	??_SPEED+2,f
  3498  0308  2B03               	goto	u2997
  3499  0309  0000               	nop
  3500                           
  3501                           ;Main.c: 354: (LCDByte(0b00000001,0));
  3502  030A  1283               	bcf	3,5	;RP0=0, select bank0
  3503  030B  1303               	bcf	3,6	;RP1=0, select bank0
  3504  030C  01A5               	clrf	LCDByte@isdata
  3505  030D  3001               	movlw	1
  3506  030E  160A  118A  23AF  120A  118A  	fcall	_LCDByte
  3507                           
  3508                           ;Main.c: 355: { LCDGotoXY(0,0); LCDWriteString("OOPS!");};
  3509  0313  1283               	bcf	3,5	;RP0=0, select bank0
  3510  0314  1303               	bcf	3,6	;RP1=0, select bank0
  3511  0315  01AC               	clrf	LCDGotoXY@y
  3512  0316  3000               	movlw	0
  3513  0317  160A  118A  2261  120A  118A  	fcall	_LCDGotoXY
  3514  031C  3007               	movlw	low (STR_19| (0+32768))
  3515  031D  1283               	bcf	3,5	;RP0=0, select bank0
  3516  031E  1303               	bcf	3,6	;RP1=0, select bank0
  3517  031F  00AC               	movwf	LCDWriteString@msg
  3518  0320  3089               	movlw	high (STR_19| (0+32768))
  3519  0321  00AD               	movwf	LCDWriteString@msg+1
  3520  0322  120A  158A  21B1  120A  118A  	fcall	_LCDWriteString
  3521                           
  3522                           ;Main.c: 356: { LCDGotoXY(1,1); LCDWriteString("What's the hurry!");};
  3523  0327  1283               	bcf	3,5	;RP0=0, select bank0
  3524  0328  1303               	bcf	3,6	;RP1=0, select bank0
  3525  0329  01AC               	clrf	LCDGotoXY@y
  3526  032A  0AAC               	incf	LCDGotoXY@y,f
  3527  032B  3001               	movlw	1
  3528  032C  160A  118A  2261  120A  118A  	fcall	_LCDGotoXY
  3529  0331  3055               	movlw	low (STR_20| (0+32768))
  3530  0332  1283               	bcf	3,5	;RP0=0, select bank0
  3531  0333  1303               	bcf	3,6	;RP1=0, select bank0
  3532  0334  00AC               	movwf	LCDWriteString@msg
  3533  0335  3087               	movlw	high (STR_20| (0+32768))
  3534  0336  00AD               	movwf	LCDWriteString@msg+1
  3535  0337  120A  158A  21B1  120A  118A  	fcall	_LCDWriteString
  3536                           
  3537                           ;Main.c: 357: { LCDGotoXY(2,2); LCDWriteString("Let's slow down");};
  3538  033C  3002               	movlw	2
  3539  033D  1283               	bcf	3,5	;RP0=0, select bank0
  3540  033E  1303               	bcf	3,6	;RP1=0, select bank0
  3541  033F  00DB               	movwf	??_SPEED
  3542  0340  085B               	movf	??_SPEED,w
  3543  0341  00AC               	movwf	LCDGotoXY@y
  3544  0342  3002               	movlw	2
  3545  0343  160A  118A  2261  120A  118A  	fcall	_LCDGotoXY
  3546  0348  30EE               	movlw	low (STR_21| (0+32768))
  3547  0349  1283               	bcf	3,5	;RP0=0, select bank0
  3548  034A  1303               	bcf	3,6	;RP1=0, select bank0
  3549  034B  00AC               	movwf	LCDWriteString@msg
  3550  034C  3087               	movlw	high (STR_21| (0+32768))
  3551  034D  00AD               	movwf	LCDWriteString@msg+1
  3552  034E  120A  158A  21B1  120A  118A  	fcall	_LCDWriteString
  3553                           
  3554                           ;Main.c: 358: { LCDGotoXY(2,3); LCDWriteString("Warning No. :");};
  3555  0353  3003               	movlw	3
  3556  0354  1283               	bcf	3,5	;RP0=0, select bank0
  3557  0355  1303               	bcf	3,6	;RP1=0, select bank0
  3558  0356  00DB               	movwf	??_SPEED
  3559  0357  085B               	movf	??_SPEED,w
  3560  0358  00AC               	movwf	LCDGotoXY@y
  3561  0359  3002               	movlw	2
  3562  035A  160A  118A  2261  120A  118A  	fcall	_LCDGotoXY
  3563  035F  302D               	movlw	low (STR_22| (0+32768))
  3564  0360  1283               	bcf	3,5	;RP0=0, select bank0
  3565  0361  1303               	bcf	3,6	;RP1=0, select bank0
  3566  0362  00AC               	movwf	LCDWriteString@msg
  3567  0363  3088               	movlw	high (STR_22| (0+32768))
  3568  0364  00AD               	movwf	LCDWriteString@msg+1
  3569  0365  120A  158A  21B1  120A  118A  	fcall	_LCDWriteString
  3570                           
  3571                           ;Main.c: 359: { LCDGotoXY(15,3); LCDWriteInt(warNo,1);};
  3572  036A  3003               	movlw	3
  3573  036B  1283               	bcf	3,5	;RP0=0, select bank0
  3574  036C  1303               	bcf	3,6	;RP1=0, select bank0
  3575  036D  00DB               	movwf	??_SPEED
  3576  036E  085B               	movf	??_SPEED,w
  3577  036F  00AC               	movwf	LCDGotoXY@y
  3578  0370  300F               	movlw	15
  3579  0371  160A  118A  2261  120A  118A  	fcall	_LCDGotoXY
  3580  0376  1683               	bsf	3,5	;RP0=1, select bank1
  3581  0377  1303               	bcf	3,6	;RP1=0, select bank1
  3582  0378  0847               	movf	(_warNo+1)^(0+128),w
  3583  0379  1283               	bcf	3,5	;RP0=0, select bank0
  3584  037A  1303               	bcf	3,6	;RP1=0, select bank0
  3585  037B  00AD               	movwf	LCDWriteInt@val+1
  3586  037C  1683               	bsf	3,5	;RP0=1, select bank1
  3587  037D  1303               	bcf	3,6	;RP1=0, select bank1
  3588  037E  0846               	movf	_warNo^(0+128),w
  3589  037F  1283               	bcf	3,5	;RP0=0, select bank0
  3590  0380  1303               	bcf	3,6	;RP1=0, select bank0
  3591  0381  00AC               	movwf	LCDWriteInt@val
  3592  0382  01AE               	clrf	LCDWriteInt@field_length
  3593  0383  0AAE               	incf	LCDWriteInt@field_length,f
  3594  0384  120A  118A  2531  120A  118A  	fcall	_LCDWriteInt
  3595                           
  3596                           ;Main.c: 360: if (warNo > 4) {
  3597  0389  3000               	movlw	0
  3598  038A  1683               	bsf	3,5	;RP0=1, select bank1
  3599  038B  1303               	bcf	3,6	;RP1=0, select bank1
  3600  038C  0247               	subwf	(_warNo+1)^(0+128),w
  3601  038D  3005               	movlw	5
  3602  038E  1903               	skipnz
  3603  038F  0246               	subwf	_warNo^(0+128),w
  3604  0390  1C03               	skipc
  3605  0391  2BEC               	goto	l3055
  3606                           
  3607                           ;Main.c: 361: SendStringSerially("AT+CMGF=1");
  3608  0392  30B4               	movlw	low (STR_23| (0+32768))
  3609  0393  1283               	bcf	3,5	;RP0=0, select bank0
  3610  0394  1303               	bcf	3,6	;RP1=0, select bank0
  3611  0395  00A1               	movwf	SendStringSerially@st
  3612  0396  3088               	movlw	high (STR_23| (0+32768))
  3613  0397  00A2               	movwf	SendStringSerially@st+1
  3614  0398  120A  118A  25DB  120A  118A  	fcall	_SendStringSerially
  3615                           
  3616                           ;Main.c: 362: SendByteSerially((char) 13);
  3617  039D  300D               	movlw	13
  3618  039E  160A  118A  21D8  120A  118A  	fcall	_SendByteSerially
  3619                           
  3620                           ;Main.c: 363: _delay((unsigned long)((1000)*(20000000/4000.0)));
  3621  03A3  301A               	movlw	26
  3622  03A4  1283               	bcf	3,5	;RP0=0, select bank0
  3623  03A5  1303               	bcf	3,6	;RP1=0, select bank0
  3624  03A6  00DD               	movwf	??_SPEED+2
  3625  03A7  305E               	movlw	94
  3626  03A8  00DC               	movwf	??_SPEED+1
  3627  03A9  3086               	movlw	134
  3628  03AA  00DB               	movwf	??_SPEED
  3629  03AB                     u3007:	
  3630  03AB  0BDB               	decfsz	??_SPEED,f
  3631  03AC  2BAB               	goto	u3007
  3632  03AD  0BDC               	decfsz	??_SPEED+1,f
  3633  03AE  2BAB               	goto	u3007
  3634  03AF  0BDD               	decfsz	??_SPEED+2,f
  3635  03B0  2BAB               	goto	u3007
  3636  03B1  0000               	nop
  3637                           
  3638                           ;Main.c: 364: SendStringSerially("AT+CMGS=\"+94712419618\"\r");
  3639  03B2  30DC               	movlw	low (STR_24| (0+32768))
  3640  03B3  1283               	bcf	3,5	;RP0=0, select bank0
  3641  03B4  1303               	bcf	3,6	;RP1=0, select bank0
  3642  03B5  00A1               	movwf	SendStringSerially@st
  3643  03B6  3086               	movlw	high (STR_24| (0+32768))
  3644  03B7  00A2               	movwf	SendStringSerially@st+1
  3645  03B8  120A  118A  25DB  120A  118A  	fcall	_SendStringSerially
  3646                           
  3647                           ;Main.c: 365: _delay((unsigned long)((1000)*(20000000/4000.0)));
  3648  03BD  301A               	movlw	26
  3649  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  3650  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  3651  03C0  00DD               	movwf	??_SPEED+2
  3652  03C1  305E               	movlw	94
  3653  03C2  00DC               	movwf	??_SPEED+1
  3654  03C3  3086               	movlw	134
  3655  03C4  00DB               	movwf	??_SPEED
  3656  03C5                     u3017:	
  3657  03C5  0BDB               	decfsz	??_SPEED,f
  3658  03C6  2BC5               	goto	u3017
  3659  03C7  0BDC               	decfsz	??_SPEED+1,f
  3660  03C8  2BC5               	goto	u3017
  3661  03C9  0BDD               	decfsz	??_SPEED+2,f
  3662  03CA  2BC5               	goto	u3017
  3663  03CB  0000               	nop
  3664                           
  3665                           ;Main.c: 366: SendStringSerially("High Speeed indicated in Device_01");
  3666  03CC  3064               	movlw	low (STR_25| (0+32768))
  3667  03CD  1283               	bcf	3,5	;RP0=0, select bank0
  3668  03CE  1303               	bcf	3,6	;RP1=0, select bank0
  3669  03CF  00A1               	movwf	SendStringSerially@st
  3670  03D0  3086               	movlw	high (STR_25| (0+32768))
  3671  03D1  00A2               	movwf	SendStringSerially@st+1
  3672  03D2  120A  118A  25DB  120A  118A  	fcall	_SendStringSerially
  3673                           
  3674                           ;Main.c: 369: SendByteSerially((char) 26);
  3675  03D7  301A               	movlw	26
  3676  03D8  160A  118A  21D8  120A  118A  	fcall	_SendByteSerially
  3677                           
  3678                           ;Main.c: 371: _delay((unsigned long)((1000)*(20000000/4000.0)));
  3679  03DD  301A               	movlw	26
  3680  03DE  1283               	bcf	3,5	;RP0=0, select bank0
  3681  03DF  1303               	bcf	3,6	;RP1=0, select bank0
  3682  03E0  00DD               	movwf	??_SPEED+2
  3683  03E1  305E               	movlw	94
  3684  03E2  00DC               	movwf	??_SPEED+1
  3685  03E3  3086               	movlw	134
  3686  03E4  00DB               	movwf	??_SPEED
  3687  03E5                     u3027:	
  3688  03E5  0BDB               	decfsz	??_SPEED,f
  3689  03E6  2BE5               	goto	u3027
  3690  03E7  0BDC               	decfsz	??_SPEED+1,f
  3691  03E8  2BE5               	goto	u3027
  3692  03E9  0BDD               	decfsz	??_SPEED+2,f
  3693  03EA  2BE5               	goto	u3027
  3694  03EB  0000               	nop
  3695  03EC                     l3055:	
  3696                           
  3697                           ;Main.c: 372: }
  3698                           ;Main.c: 374: _delay((unsigned long)((1000)*(20000000/4000.0)));
  3699  03EC  301A               	movlw	26
  3700  03ED  1283               	bcf	3,5	;RP0=0, select bank0
  3701  03EE  1303               	bcf	3,6	;RP1=0, select bank0
  3702  03EF  00DD               	movwf	??_SPEED+2
  3703  03F0  305E               	movlw	94
  3704  03F1  00DC               	movwf	??_SPEED+1
  3705  03F2  3086               	movlw	134
  3706  03F3  00DB               	movwf	??_SPEED
  3707  03F4                     u3037:	
  3708  03F4  0BDB               	decfsz	??_SPEED,f
  3709  03F5  2BF4               	goto	u3037
  3710  03F6  0BDC               	decfsz	??_SPEED+1,f
  3711  03F7  2BF4               	goto	u3037
  3712  03F8  0BDD               	decfsz	??_SPEED+2,f
  3713  03F9  2BF4               	goto	u3037
  3714  03FA  0000               	nop
  3715                           
  3716                           ;Main.c: 375: break;
  3717  03FB  0008               	return
  3718  03FC                     l3057:	
  3719                           
  3720                           ;Main.c: 376: }
  3721                           ;Main.c: 377: }
  3722                           ;Main.c: 378: if (co == 1) {
  3723  03FC  1683               	bsf	3,5	;RP0=1, select bank1
  3724  03FD  1303               	bcf	3,6	;RP1=0, select bank1
  3725  03FE  0344               	decf	_co^(0+128),w
  3726  03FF  0445               	iorwf	(_co+1)^(0+128),w
  3727  0400  1D03               	btfss	3,2
  3728  0401  2CC8               	goto	l3093
  3729                           
  3730                           ;Main.c: 379: if (checkSpd < 5) {
  3731  0402  0843               	movf	(_checkSpd+1)^(0+128),w
  3732  0403  3A80               	xorlw	128
  3733  0404  00FF               	movwf	127
  3734  0405  3080               	movlw	128
  3735  0406  027F               	subwf	127,w
  3736  0407  1D03               	skipz
  3737  0408  2C0B               	goto	u2575
  3738  0409  3005               	movlw	5
  3739  040A  0242               	subwf	_checkSpd^(0+128),w
  3740  040B                     u2575:	
  3741  040B  1803               	skipnc
  3742  040C  2CC8               	goto	l3093
  3743                           
  3744                           ;Main.c: 380: (LCDByte(0b00000001,0));
  3745  040D  1283               	bcf	3,5	;RP0=0, select bank0
  3746  040E  1303               	bcf	3,6	;RP1=0, select bank0
  3747  040F  01A5               	clrf	LCDByte@isdata
  3748  0410  3001               	movlw	1
  3749  0411  160A  118A  23AF  120A  118A  	fcall	_LCDByte
  3750                           
  3751                           ;Main.c: 381: { LCDGotoXY(0,0); LCDWriteString("You are too slow");};
  3752  0416  1283               	bcf	3,5	;RP0=0, select bank0
  3753  0417  1303               	bcf	3,6	;RP1=0, select bank0
  3754  0418  01AC               	clrf	LCDGotoXY@y
  3755  0419  3000               	movlw	0
  3756  041A  160A  118A  2261  120A  118A  	fcall	_LCDGotoXY
  3757  041F  30AD               	movlw	low (STR_26| (0+32768))
  3758  0420  1283               	bcf	3,5	;RP0=0, select bank0
  3759  0421  1303               	bcf	3,6	;RP1=0, select bank0
  3760  0422  00AC               	movwf	LCDWriteString@msg
  3761  0423  3087               	movlw	high (STR_26| (0+32768))
  3762  0424  00AD               	movwf	LCDWriteString@msg+1
  3763  0425  120A  158A  21B1  120A  118A  	fcall	_LCDWriteString
  3764                           
  3765                           ;Main.c: 382: { LCDGotoXY(0,1); LCDWriteString("Having Trouble?");};
  3766  042A  1283               	bcf	3,5	;RP0=0, select bank0
  3767  042B  1303               	bcf	3,6	;RP1=0, select bank0
  3768  042C  01AC               	clrf	LCDGotoXY@y
  3769  042D  0AAC               	incf	LCDGotoXY@y,f
  3770  042E  3000               	movlw	0
  3771  042F  160A  118A  2261  120A  118A  	fcall	_LCDGotoXY
  3772  0434  30CE               	movlw	low (STR_27| (0+32768))
  3773  0435  1283               	bcf	3,5	;RP0=0, select bank0
  3774  0436  1303               	bcf	3,6	;RP1=0, select bank0
  3775  0437  00AC               	movwf	LCDWriteString@msg
  3776  0438  3087               	movlw	high (STR_27| (0+32768))
  3777  0439  00AD               	movwf	LCDWriteString@msg+1
  3778  043A  120A  158A  21B1  120A  118A  	fcall	_LCDWriteString
  3779                           
  3780                           ;Main.c: 383: { LCDGotoXY(0,2); LCDWriteString("Wait for Emergency");};
  3781  043F  3002               	movlw	2
  3782  0440  1283               	bcf	3,5	;RP0=0, select bank0
  3783  0441  1303               	bcf	3,6	;RP1=0, select bank0
  3784  0442  00DB               	movwf	??_SPEED
  3785  0443  085B               	movf	??_SPEED,w
  3786  0444  00AC               	movwf	LCDGotoXY@y
  3787  0445  3000               	movlw	0
  3788  0446  160A  118A  2261  120A  118A  	fcall	_LCDGotoXY
  3789  044B  3042               	movlw	low (STR_28| (0+32768))
  3790  044C  1283               	bcf	3,5	;RP0=0, select bank0
  3791  044D  1303               	bcf	3,6	;RP1=0, select bank0
  3792  044E  00AC               	movwf	LCDWriteString@msg
  3793  044F  3087               	movlw	high (STR_28| (0+32768))
  3794  0450  00AD               	movwf	LCDWriteString@msg+1
  3795  0451  120A  158A  21B1  120A  118A  	fcall	_LCDWriteString
  3796                           
  3797                           ;Main.c: 384: { LCDGotoXY(0,3); LCDWriteString("Units");};
  3798  0456  3003               	movlw	3
  3799  0457  1283               	bcf	3,5	;RP0=0, select bank0
  3800  0458  1303               	bcf	3,6	;RP1=0, select bank0
  3801  0459  00DB               	movwf	??_SPEED
  3802  045A  085B               	movf	??_SPEED,w
  3803  045B  00AC               	movwf	LCDGotoXY@y
  3804  045C  3000               	movlw	0
  3805  045D  160A  118A  2261  120A  118A  	fcall	_LCDGotoXY
  3806  0462  302B               	movlw	low (STR_29| (0+32768))
  3807  0463  1283               	bcf	3,5	;RP0=0, select bank0
  3808  0464  1303               	bcf	3,6	;RP1=0, select bank0
  3809  0465  00AC               	movwf	LCDWriteString@msg
  3810  0466  3089               	movlw	high (STR_29| (0+32768))
  3811  0467  00AD               	movwf	LCDWriteString@msg+1
  3812  0468  120A  158A  21B1  120A  118A  	fcall	_LCDWriteString
  3813                           
  3814                           ;Main.c: 385: SendStringSerially("AT+CMGF=1");
  3815  046D  30B4               	movlw	low (STR_23| (0+32768))
  3816  046E  1283               	bcf	3,5	;RP0=0, select bank0
  3817  046F  1303               	bcf	3,6	;RP1=0, select bank0
  3818  0470  00A1               	movwf	SendStringSerially@st
  3819  0471  3088               	movlw	high (STR_23| (0+32768))
  3820  0472  00A2               	movwf	SendStringSerially@st+1
  3821  0473  120A  118A  25DB  120A  118A  	fcall	_SendStringSerially
  3822                           
  3823                           ;Main.c: 386: SendByteSerially((char) 13);
  3824  0478  300D               	movlw	13
  3825  0479  160A  118A  21D8  120A  118A  	fcall	_SendByteSerially
  3826                           
  3827                           ;Main.c: 387: _delay((unsigned long)((1000)*(20000000/4000.0)));
  3828  047E  301A               	movlw	26
  3829  047F  1283               	bcf	3,5	;RP0=0, select bank0
  3830  0480  1303               	bcf	3,6	;RP1=0, select bank0
  3831  0481  00DD               	movwf	??_SPEED+2
  3832  0482  305E               	movlw	94
  3833  0483  00DC               	movwf	??_SPEED+1
  3834  0484  3086               	movlw	134
  3835  0485  00DB               	movwf	??_SPEED
  3836  0486                     u3047:	
  3837  0486  0BDB               	decfsz	??_SPEED,f
  3838  0487  2C86               	goto	u3047
  3839  0488  0BDC               	decfsz	??_SPEED+1,f
  3840  0489  2C86               	goto	u3047
  3841  048A  0BDD               	decfsz	??_SPEED+2,f
  3842  048B  2C86               	goto	u3047
  3843  048C  0000               	nop
  3844                           
  3845                           ;Main.c: 388: SendStringSerially("AT+CMGS=\"+94712419618\"\r");
  3846  048D  30DC               	movlw	low (STR_24| (0+32768))
  3847  048E  1283               	bcf	3,5	;RP0=0, select bank0
  3848  048F  1303               	bcf	3,6	;RP1=0, select bank0
  3849  0490  00A1               	movwf	SendStringSerially@st
  3850  0491  3086               	movlw	high (STR_24| (0+32768))
  3851  0492  00A2               	movwf	SendStringSerially@st+1
  3852  0493  120A  118A  25DB  120A  118A  	fcall	_SendStringSerially
  3853                           
  3854                           ;Main.c: 389: _delay((unsigned long)((1000)*(20000000/4000.0)));
  3855  0498  301A               	movlw	26
  3856  0499  1283               	bcf	3,5	;RP0=0, select bank0
  3857  049A  1303               	bcf	3,6	;RP1=0, select bank0
  3858  049B  00DD               	movwf	??_SPEED+2
  3859  049C  305E               	movlw	94
  3860  049D  00DC               	movwf	??_SPEED+1
  3861  049E  3086               	movlw	134
  3862  049F  00DB               	movwf	??_SPEED
  3863  04A0                     u3057:	
  3864  04A0  0BDB               	decfsz	??_SPEED,f
  3865  04A1  2CA0               	goto	u3057
  3866  04A2  0BDC               	decfsz	??_SPEED+1,f
  3867  04A3  2CA0               	goto	u3057
  3868  04A4  0BDD               	decfsz	??_SPEED+2,f
  3869  04A5  2CA0               	goto	u3057
  3870  04A6  0000               	nop
  3871                           
  3872                           ;Main.c: 390: SendStringSerially("Vehicle Stop indicated in Device_01");
  3873  04A7  3040               	movlw	low (STR_32| (0+32768))
  3874  04A8  1283               	bcf	3,5	;RP0=0, select bank0
  3875  04A9  1303               	bcf	3,6	;RP1=0, select bank0
  3876  04AA  00A1               	movwf	SendStringSerially@st
  3877  04AB  3086               	movlw	high (STR_32| (0+32768))
  3878  04AC  00A2               	movwf	SendStringSerially@st+1
  3879  04AD  120A  118A  25DB  120A  118A  	fcall	_SendStringSerially
  3880                           
  3881                           ;Main.c: 393: SendByteSerially((char) 26);
  3882  04B2  301A               	movlw	26
  3883  04B3  160A  118A  21D8  120A  118A  	fcall	_SendByteSerially
  3884                           
  3885                           ;Main.c: 395: _delay((unsigned long)((1000)*(20000000/4000.0)));
  3886  04B8  301A               	movlw	26
  3887  04B9  1283               	bcf	3,5	;RP0=0, select bank0
  3888  04BA  1303               	bcf	3,6	;RP1=0, select bank0
  3889  04BB  00DD               	movwf	??_SPEED+2
  3890  04BC  305E               	movlw	94
  3891  04BD  00DC               	movwf	??_SPEED+1
  3892  04BE  3086               	movlw	134
  3893  04BF  00DB               	movwf	??_SPEED
  3894  04C0                     u3067:	
  3895  04C0  0BDB               	decfsz	??_SPEED,f
  3896  04C1  2CC0               	goto	u3067
  3897  04C2  0BDC               	decfsz	??_SPEED+1,f
  3898  04C3  2CC0               	goto	u3067
  3899  04C4  0BDD               	decfsz	??_SPEED+2,f
  3900  04C5  2CC0               	goto	u3067
  3901  04C6  0000               	nop
  3902                           
  3903                           ;Main.c: 396: break;
  3904  04C7  0008               	return
  3905  04C8                     l3093:	
  3906                           
  3907                           ;Main.c: 398: }
  3908                           ;Main.c: 399: }
  3909                           ;Main.c: 401: if ((i % 100) == 0) {
  3910  04C8  3064               	movlw	100
  3911  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  3912  04CA  1303               	bcf	3,6	;RP1=0, select bank0
  3913  04CB  00A0               	movwf	___awmod@divisor
  3914  04CC  3000               	movlw	0
  3915  04CD  00A1               	movwf	___awmod@divisor+1
  3916  04CE  1683               	bsf	3,5	;RP0=1, select bank1
  3917  04CF  1303               	bcf	3,6	;RP1=0, select bank1
  3918  04D0  082F               	movf	(SPEED@i+1)^(0+128),w
  3919  04D1  1283               	bcf	3,5	;RP0=0, select bank0
  3920  04D2  1303               	bcf	3,6	;RP1=0, select bank0
  3921  04D3  00A3               	movwf	___awmod@dividend+1
  3922  04D4  1683               	bsf	3,5	;RP0=1, select bank1
  3923  04D5  1303               	bcf	3,6	;RP1=0, select bank1
  3924  04D6  082E               	movf	SPEED@i^(0+128),w
  3925  04D7  1283               	bcf	3,5	;RP0=0, select bank0
  3926  04D8  1303               	bcf	3,6	;RP1=0, select bank0
  3927  04D9  00A2               	movwf	___awmod@dividend
  3928  04DA  160A  118A  243E  120A  118A  	fcall	___awmod
  3929  04DF  1283               	bcf	3,5	;RP0=0, select bank0
  3930  04E0  1303               	bcf	3,6	;RP1=0, select bank0
  3931  04E1  0820               	movf	?___awmod,w
  3932  04E2  0421               	iorwf	?___awmod+1,w
  3933  04E3  1D03               	btfss	3,2
  3934  04E4  2895               	goto	l2887
  3935                           
  3936                           ;Main.c: 402: _delay((unsigned long)((2000)*(20000000/4000.0)));
  3937  04E5  3033               	movlw	51
  3938  04E6  00DD               	movwf	??_SPEED+2
  3939  04E7  30BC               	movlw	188
  3940  04E8  00DC               	movwf	??_SPEED+1
  3941  04E9  3010               	movlw	16
  3942  04EA  00DB               	movwf	??_SPEED
  3943  04EB                     u3077:	
  3944  04EB  0BDB               	decfsz	??_SPEED,f
  3945  04EC  2CEB               	goto	u3077
  3946  04ED  0BDC               	decfsz	??_SPEED+1,f
  3947  04EE  2CEB               	goto	u3077
  3948  04EF  0BDD               	decfsz	??_SPEED+2,f
  3949  04F0  2CEB               	goto	u3077
  3950                           
  3951                           ;Main.c: 403: for (int i = 0; i < 7; i++) {
  3952  04F1  1683               	bsf	3,5	;RP0=1, select bank1
  3953  04F2  1303               	bcf	3,6	;RP1=0, select bank1
  3954  04F3  01BE               	clrf	SPEED@i_377^(0+128)
  3955  04F4  01BF               	clrf	(SPEED@i_377+1)^(0+128)
  3956  04F5  083F               	movf	(SPEED@i_377+1)^(0+128),w
  3957  04F6  3A80               	xorlw	128
  3958  04F7  00FF               	movwf	127
  3959  04F8  3080               	movlw	128
  3960  04F9  027F               	subwf	127,w
  3961  04FA  1D03               	skipz
  3962  04FB  2CFE               	goto	u2595
  3963  04FC  3007               	movlw	7
  3964  04FD  023E               	subwf	SPEED@i_377^(0+128),w
  3965  04FE                     u2595:	
  3966  04FE  1803               	btfsc	3,0
  3967  04FF  2D26               	goto	l3109
  3968  0500                     l3103:	
  3969                           
  3970                           ;Main.c: 404: sendS[i] = kmph[i];
  3971  0500  1683               	bsf	3,5	;RP0=1, select bank1
  3972  0501  1303               	bcf	3,6	;RP1=0, select bank1
  3973  0502  083E               	movf	SPEED@i_377^(0+128),w
  3974  0503  3EA7               	addlw	(low (SPEED@kmph| 0))& (0+255)
  3975  0504  0084               	movwf	4
  3976  0505  1383               	bcf	3,7	;select IRP bank1
  3977  0506  0800               	movf	0,w
  3978  0507  1283               	bcf	3,5	;RP0=0, select bank0
  3979  0508  1303               	bcf	3,6	;RP1=0, select bank0
  3980  0509  00DB               	movwf	??_SPEED
  3981  050A  1683               	bsf	3,5	;RP0=1, select bank1
  3982  050B  1303               	bcf	3,6	;RP1=0, select bank1
  3983  050C  083E               	movf	SPEED@i_377^(0+128),w
  3984  050D  3EDB               	addlw	(low (_sendS| 0))& (0+255)
  3985  050E  0084               	movwf	4
  3986  050F  1283               	bcf	3,5	;RP0=0, select bank0
  3987  0510  1303               	bcf	3,6	;RP1=0, select bank0
  3988  0511  085B               	movf	??_SPEED,w
  3989  0512  0080               	movwf	0
  3990  0513  3001               	movlw	1
  3991  0514  1683               	bsf	3,5	;RP0=1, select bank1
  3992  0515  1303               	bcf	3,6	;RP1=0, select bank1
  3993  0516  07BE               	addwf	SPEED@i_377^(0+128),f
  3994  0517  1803               	skipnc
  3995  0518  0ABF               	incf	(SPEED@i_377+1)^(0+128),f
  3996  0519  3000               	movlw	0
  3997  051A  07BF               	addwf	(SPEED@i_377+1)^(0+128),f
  3998  051B  083F               	movf	(SPEED@i_377+1)^(0+128),w
  3999  051C  3A80               	xorlw	128
  4000  051D  00FF               	movwf	127
  4001  051E  3080               	movlw	128
  4002  051F  027F               	subwf	127,w
  4003  0520  1D03               	skipz
  4004  0521  2D24               	goto	u2605
  4005  0522  3007               	movlw	7
  4006  0523  023E               	subwf	SPEED@i_377^(0+128),w
  4007  0524                     u2605:	
  4008  0524  1C03               	skipc
  4009  0525  2D00               	goto	l3103
  4010  0526                     l3109:	
  4011                           
  4012                           ;Main.c: 405: }
  4013                           ;Main.c: 407: fireIndiSend();
  4014  0526  160A  118A  24E3  120A  118A  	fcall	_fireIndiSend
  4015                           
  4016                           ;Main.c: 408: POSITION();
  4017  052B  120A  158A  2274  120A  118A  	fcall	_POSITION
  4018  0530  2895               	goto	l2887
  4019  0531                     __end_of_SPEED:	
  4020                           
  4021                           	psect	text3
  4022  14E3                     __ptext3:	
  4023 ;; *************** function _fireIndiSend *****************
  4024 ;; Defined at:
  4025 ;;		line 446 in file "Main.c"
  4026 ;; Parameters:    Size  Location     Type
  4027 ;;		None
  4028 ;; Auto vars:     Size  Location     Type
  4029 ;;  a               2   19[BANK0 ] unsigned int 
  4030 ;; Return value:  Size  Location     Type
  4031 ;;		None               void
  4032 ;; Registers used:
  4033 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4034 ;; Tracked objects:
  4035 ;;		On entry : 0/0
  4036 ;;		On exit  : 0/0
  4037 ;;		Unchanged: 0/0
  4038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4039 ;;      Params:         0       0       0       0       0
  4040 ;;      Locals:         0       2       0       0       0
  4041 ;;      Temps:          0       3       0       0       0
  4042 ;;      Totals:         0       5       0       0       0
  4043 ;;Total ram usage:        5 bytes
  4044 ;; Hardware stack levels used:    1
  4045 ;; Hardware stack levels required when called:    5
  4046 ;; This function calls:
  4047 ;;		_ADC_Init
  4048 ;;		_ADC_Read
  4049 ;;		_LCDByte
  4050 ;;		_LCDGotoXY
  4051 ;;		_LCDWriteString
  4052 ;;		_SendByteSerially
  4053 ;;		_SendStringSerially
  4054 ;; This function is called by:
  4055 ;;		_SPEED
  4056 ;; This function uses a non-reentrant model
  4057 ;;
  4058                           
  4059                           
  4060                           ;psect for function _fireIndiSend
  4061  14E3                     _fireIndiSend:	
  4062                           
  4063                           ;Main.c: 447: unsigned int a;
  4064                           ;Main.c: 448: TRISA = 0xFF;
  4065                           
  4066                           ;incstack = 0
  4067                           ; Regs used in _fireIndiSend: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4068  14E3  30FF               	movlw	255
  4069  14E4  1683               	bsf	3,5	;RP0=1, select bank1
  4070  14E5  1303               	bcf	3,6	;RP1=0, select bank1
  4071  14E6  0085               	movwf	5	;volatile
  4072                           
  4073                           ;Main.c: 449: ADC_Init();
  4074  14E7  160A  118A  21E0  160A  118A  	fcall	_ADC_Init
  4075                           
  4076                           ;Main.c: 451: a = ADC_Read(0);
  4077                           
  4078                           ;Main.c: 450: do {
  4079  14EC  3000               	movlw	0
  4080  14ED  160A  118A  2287  160A  118A  	fcall	_ADC_Read
  4081  14F2  1283               	bcf	3,5	;RP0=0, select bank0
  4082  14F3  1303               	bcf	3,6	;RP1=0, select bank0
  4083  14F4  0821               	movf	?_ADC_Read+1,w
  4084  14F5  00B4               	movwf	fireIndiSend@a+1
  4085  14F6  0820               	movf	?_ADC_Read,w
  4086  14F7  00B3               	movwf	fireIndiSend@a
  4087                           
  4088                           ;Main.c: 453: _delay((unsigned long)((100)*(20000000/4000.0)));
  4089  14F8  3003               	movlw	3
  4090  14F9  00B2               	movwf	??_fireIndiSend+2
  4091  14FA  308A               	movlw	138
  4092  14FB  00B1               	movwf	??_fireIndiSend+1
  4093  14FC  3056               	movlw	86
  4094  14FD  00B0               	movwf	??_fireIndiSend
  4095  14FE                     u3087:	
  4096  14FE  0BB0               	decfsz	??_fireIndiSend,f
  4097  14FF  2CFE               	goto	u3087
  4098  1500  0BB1               	decfsz	??_fireIndiSend+1,f
  4099  1501  2CFE               	goto	u3087
  4100  1502  0BB2               	decfsz	??_fireIndiSend+2,f
  4101  1503  2CFE               	goto	u3087
  4102  1504  2D05               	nop2
  4103                           
  4104                           ;Main.c: 454: if (a > 8000) {
  4105  1505  301F               	movlw	31
  4106  1506  1283               	bcf	3,5	;RP0=0, select bank0
  4107  1507  1303               	bcf	3,6	;RP1=0, select bank0
  4108  1508  0234               	subwf	fireIndiSend@a+1,w
  4109  1509  3041               	movlw	65
  4110  150A  1903               	skipnz
  4111  150B  0233               	subwf	fireIndiSend@a,w
  4112  150C  1C03               	skipc
  4113  150D  0008               	return
  4114                           
  4115                           ;Main.c: 456: RB6 = 1;
  4116  150E  1706               	bsf	6,6	;volatile
  4117                           
  4118                           ;Main.c: 457: _delay((unsigned long)((2000)*(20000000/4000.0)));
  4119  150F  3033               	movlw	51
  4120  1510  00B2               	movwf	??_fireIndiSend+2
  4121  1511  30BC               	movlw	188
  4122  1512  00B1               	movwf	??_fireIndiSend+1
  4123  1513  3010               	movlw	16
  4124  1514  00B0               	movwf	??_fireIndiSend
  4125  1515                     u3097:	
  4126  1515  0BB0               	decfsz	??_fireIndiSend,f
  4127  1516  2D15               	goto	u3097
  4128  1517  0BB1               	decfsz	??_fireIndiSend+1,f
  4129  1518  2D15               	goto	u3097
  4130  1519  0BB2               	decfsz	??_fireIndiSend+2,f
  4131  151A  2D15               	goto	u3097
  4132                           
  4133                           ;Main.c: 458: RB6 = 0;
  4134  151B  1283               	bcf	3,5	;RP0=0, select bank0
  4135  151C  1303               	bcf	3,6	;RP1=0, select bank0
  4136  151D  1306               	bcf	6,6	;volatile
  4137                           
  4138                           ;Main.c: 460: (LCDByte(0b00000001,0));
  4139  151E  01A5               	clrf	LCDByte@isdata
  4140  151F  3001               	movlw	1
  4141  1520  160A  118A  23AF  160A  118A  	fcall	_LCDByte
  4142                           
  4143                           ;Main.c: 461: { LCDGotoXY(2,0); LCDWriteString("Fire Indicated!!");};
  4144  1525  1283               	bcf	3,5	;RP0=0, select bank0
  4145  1526  1303               	bcf	3,6	;RP1=0, select bank0
  4146  1527  01AC               	clrf	LCDGotoXY@y
  4147  1528  3002               	movlw	2
  4148  1529  160A  118A  2261  160A  118A  	fcall	_LCDGotoXY
  4149  152E  308B               	movlw	low (STR_33| (0+32768))
  4150  152F  1283               	bcf	3,5	;RP0=0, select bank0
  4151  1530  1303               	bcf	3,6	;RP1=0, select bank0
  4152  1531  00AC               	movwf	LCDWriteString@msg
  4153  1532  3087               	movlw	high (STR_33| (0+32768))
  4154  1533  00AD               	movwf	LCDWriteString@msg+1
  4155  1534  120A  158A  21B1  160A  118A  	fcall	_LCDWriteString
  4156                           
  4157                           ;Main.c: 462: _delay((unsigned long)((100)*(20000000/4000.0)));
  4158  1539  3003               	movlw	3
  4159  153A  1283               	bcf	3,5	;RP0=0, select bank0
  4160  153B  1303               	bcf	3,6	;RP1=0, select bank0
  4161  153C  00B2               	movwf	??_fireIndiSend+2
  4162  153D  308A               	movlw	138
  4163  153E  00B1               	movwf	??_fireIndiSend+1
  4164  153F  3056               	movlw	86
  4165  1540  00B0               	movwf	??_fireIndiSend
  4166  1541                     u3107:	
  4167  1541  0BB0               	decfsz	??_fireIndiSend,f
  4168  1542  2D41               	goto	u3107
  4169  1543  0BB1               	decfsz	??_fireIndiSend+1,f
  4170  1544  2D41               	goto	u3107
  4171  1545  0BB2               	decfsz	??_fireIndiSend+2,f
  4172  1546  2D41               	goto	u3107
  4173  1547  2D48               	nop2
  4174                           
  4175                           ;Main.c: 463: { LCDGotoXY(0,1); LCDWriteString("Sending Message");};
  4176  1548  1283               	bcf	3,5	;RP0=0, select bank0
  4177  1549  1303               	bcf	3,6	;RP1=0, select bank0
  4178  154A  01AC               	clrf	LCDGotoXY@y
  4179  154B  0AAC               	incf	LCDGotoXY@y,f
  4180  154C  3000               	movlw	0
  4181  154D  160A  118A  2261  160A  118A  	fcall	_LCDGotoXY
  4182  1552  30DE               	movlw	low (STR_34| (0+32768))
  4183  1553  1283               	bcf	3,5	;RP0=0, select bank0
  4184  1554  1303               	bcf	3,6	;RP1=0, select bank0
  4185  1555  00AC               	movwf	LCDWriteString@msg
  4186  1556  3087               	movlw	high (STR_34| (0+32768))
  4187  1557  00AD               	movwf	LCDWriteString@msg+1
  4188  1558  120A  158A  21B1  160A  118A  	fcall	_LCDWriteString
  4189                           
  4190                           ;Main.c: 464: { LCDGotoXY(0,2); LCDWriteString("To Emergency");};
  4191  155D  3002               	movlw	2
  4192  155E  1283               	bcf	3,5	;RP0=0, select bank0
  4193  155F  1303               	bcf	3,6	;RP1=0, select bank0
  4194  1560  00B0               	movwf	??_fireIndiSend
  4195  1561  0830               	movf	??_fireIndiSend,w
  4196  1562  00AC               	movwf	LCDGotoXY@y
  4197  1563  3000               	movlw	0
  4198  1564  160A  118A  2261  160A  118A  	fcall	_LCDGotoXY
  4199  1569  306F               	movlw	low (STR_35| (0+32768))
  4200  156A  1283               	bcf	3,5	;RP0=0, select bank0
  4201  156B  1303               	bcf	3,6	;RP1=0, select bank0
  4202  156C  00AC               	movwf	LCDWriteString@msg
  4203  156D  3088               	movlw	high (STR_35| (0+32768))
  4204  156E  00AD               	movwf	LCDWriteString@msg+1
  4205  156F  120A  158A  21B1  160A  118A  	fcall	_LCDWriteString
  4206                           
  4207                           ;Main.c: 465: { LCDGotoXY(0,3); LCDWriteString("Units");};
  4208  1574  3003               	movlw	3
  4209  1575  1283               	bcf	3,5	;RP0=0, select bank0
  4210  1576  1303               	bcf	3,6	;RP1=0, select bank0
  4211  1577  00B0               	movwf	??_fireIndiSend
  4212  1578  0830               	movf	??_fireIndiSend,w
  4213  1579  00AC               	movwf	LCDGotoXY@y
  4214  157A  3000               	movlw	0
  4215  157B  160A  118A  2261  160A  118A  	fcall	_LCDGotoXY
  4216  1580  302B               	movlw	low (STR_29| (0+32768))
  4217  1581  1283               	bcf	3,5	;RP0=0, select bank0
  4218  1582  1303               	bcf	3,6	;RP1=0, select bank0
  4219  1583  00AC               	movwf	LCDWriteString@msg
  4220  1584  3089               	movlw	high (STR_29| (0+32768))
  4221  1585  00AD               	movwf	LCDWriteString@msg+1
  4222  1586  120A  158A  21B1  160A  118A  	fcall	_LCDWriteString
  4223                           
  4224                           ;Main.c: 467: SendStringSerially("AT+CMGF=1");
  4225  158B  30B4               	movlw	low (STR_23| (0+32768))
  4226  158C  1283               	bcf	3,5	;RP0=0, select bank0
  4227  158D  1303               	bcf	3,6	;RP1=0, select bank0
  4228  158E  00A1               	movwf	SendStringSerially@st
  4229  158F  3088               	movlw	high (STR_23| (0+32768))
  4230  1590  00A2               	movwf	SendStringSerially@st+1
  4231  1591  120A  118A  25DB  160A  118A  	fcall	_SendStringSerially
  4232                           
  4233                           ;Main.c: 468: SendByteSerially((char) 13);
  4234  1596  300D               	movlw	13
  4235  1597  160A  118A  21D8  160A  118A  	fcall	_SendByteSerially
  4236                           
  4237                           ;Main.c: 469: _delay((unsigned long)((1000)*(20000000/4000.0)));
  4238  159C  301A               	movlw	26
  4239  159D  1283               	bcf	3,5	;RP0=0, select bank0
  4240  159E  1303               	bcf	3,6	;RP1=0, select bank0
  4241  159F  00B2               	movwf	??_fireIndiSend+2
  4242  15A0  305E               	movlw	94
  4243  15A1  00B1               	movwf	??_fireIndiSend+1
  4244  15A2  3086               	movlw	134
  4245  15A3  00B0               	movwf	??_fireIndiSend
  4246  15A4                     u3117:	
  4247  15A4  0BB0               	decfsz	??_fireIndiSend,f
  4248  15A5  2DA4               	goto	u3117
  4249  15A6  0BB1               	decfsz	??_fireIndiSend+1,f
  4250  15A7  2DA4               	goto	u3117
  4251  15A8  0BB2               	decfsz	??_fireIndiSend+2,f
  4252  15A9  2DA4               	goto	u3117
  4253  15AA  0000               	nop
  4254                           
  4255                           ;Main.c: 470: SendStringSerially("AT+CMGS=\"+94712419618\"\r");
  4256  15AB  30DC               	movlw	low (STR_24| (0+32768))
  4257  15AC  1283               	bcf	3,5	;RP0=0, select bank0
  4258  15AD  1303               	bcf	3,6	;RP1=0, select bank0
  4259  15AE  00A1               	movwf	SendStringSerially@st
  4260  15AF  3086               	movlw	high (STR_24| (0+32768))
  4261  15B0  00A2               	movwf	SendStringSerially@st+1
  4262  15B1  120A  118A  25DB  160A  118A  	fcall	_SendStringSerially
  4263                           
  4264                           ;Main.c: 471: _delay((unsigned long)((1000)*(20000000/4000.0)));
  4265  15B6  301A               	movlw	26
  4266  15B7  1283               	bcf	3,5	;RP0=0, select bank0
  4267  15B8  1303               	bcf	3,6	;RP1=0, select bank0
  4268  15B9  00B2               	movwf	??_fireIndiSend+2
  4269  15BA  305E               	movlw	94
  4270  15BB  00B1               	movwf	??_fireIndiSend+1
  4271  15BC  3086               	movlw	134
  4272  15BD  00B0               	movwf	??_fireIndiSend
  4273  15BE                     u3127:	
  4274  15BE  0BB0               	decfsz	??_fireIndiSend,f
  4275  15BF  2DBE               	goto	u3127
  4276  15C0  0BB1               	decfsz	??_fireIndiSend+1,f
  4277  15C1  2DBE               	goto	u3127
  4278  15C2  0BB2               	decfsz	??_fireIndiSend+2,f
  4279  15C3  2DBE               	goto	u3127
  4280  15C4  0000               	nop
  4281                           
  4282                           ;Main.c: 472: SendStringSerially("Fire Indicated in Device_01");
  4283  15C5  30A5               	movlw	low (STR_39| (0+32768))
  4284  15C6  1283               	bcf	3,5	;RP0=0, select bank0
  4285  15C7  1303               	bcf	3,6	;RP1=0, select bank0
  4286  15C8  00A1               	movwf	SendStringSerially@st
  4287  15C9  3086               	movlw	high (STR_39| (0+32768))
  4288  15CA  00A2               	movwf	SendStringSerially@st+1
  4289  15CB  120A  118A  25DB  160A  118A  	fcall	_SendStringSerially
  4290                           
  4291                           ;Main.c: 475: SendByteSerially((char) 26);
  4292  15D0  301A               	movlw	26
  4293  15D1  160A  118A  21D8  160A  118A  	fcall	_SendByteSerially
  4294                           
  4295                           ;Main.c: 477: _delay((unsigned long)((1000)*(20000000/4000.0)));
  4296  15D6  301A               	movlw	26
  4297  15D7  1283               	bcf	3,5	;RP0=0, select bank0
  4298  15D8  1303               	bcf	3,6	;RP1=0, select bank0
  4299  15D9  00B2               	movwf	??_fireIndiSend+2
  4300  15DA  305E               	movlw	94
  4301  15DB  00B1               	movwf	??_fireIndiSend+1
  4302  15DC  3086               	movlw	134
  4303  15DD  00B0               	movwf	??_fireIndiSend
  4304  15DE                     u3137:	
  4305  15DE  0BB0               	decfsz	??_fireIndiSend,f
  4306  15DF  2DDE               	goto	u3137
  4307  15E0  0BB1               	decfsz	??_fireIndiSend+1,f
  4308  15E1  2DDE               	goto	u3137
  4309  15E2  0BB2               	decfsz	??_fireIndiSend+2,f
  4310  15E3  2DDE               	goto	u3137
  4311  15E4  0000               	nop
  4312                           
  4313                           ;Main.c: 478: { LCDGotoXY(0,0); LCDWriteString("Message Sent");};
  4314  15E5  1283               	bcf	3,5	;RP0=0, select bank0
  4315  15E6  1303               	bcf	3,6	;RP1=0, select bank0
  4316  15E7  01AC               	clrf	LCDGotoXY@y
  4317  15E8  3000               	movlw	0
  4318  15E9  160A  118A  2261  160A  118A  	fcall	_LCDGotoXY
  4319  15EE  3062               	movlw	low (STR_40| (0+32768))
  4320  15EF  1283               	bcf	3,5	;RP0=0, select bank0
  4321  15F0  1303               	bcf	3,6	;RP1=0, select bank0
  4322  15F1  00AC               	movwf	LCDWriteString@msg
  4323  15F2  3088               	movlw	high (STR_40| (0+32768))
  4324  15F3  00AD               	movwf	LCDWriteString@msg+1
  4325  15F4  120A  158A  21B1  160A  118A  	fcall	_LCDWriteString
  4326                           
  4327                           ;Main.c: 479: { LCDGotoXY(0,1); LCDWriteString("Wait For Assistance");};
  4328  15F9  1283               	bcf	3,5	;RP0=0, select bank0
  4329  15FA  1303               	bcf	3,6	;RP1=0, select bank0
  4330  15FB  01AC               	clrf	LCDGotoXY@y
  4331  15FC  0AAC               	incf	LCDGotoXY@y,f
  4332  15FD  3000               	movlw	0
  4333  15FE  160A  118A  2261  160A  118A  	fcall	_LCDGotoXY
  4334  1603  30F4               	movlw	low (STR_41| (0+32768))
  4335  1604  1283               	bcf	3,5	;RP0=0, select bank0
  4336  1605  1303               	bcf	3,6	;RP1=0, select bank0
  4337  1606  00AC               	movwf	LCDWriteString@msg
  4338  1607  3086               	movlw	high (STR_41| (0+32768))
  4339  1608  00AD               	movwf	LCDWriteString@msg+1
  4340  1609  120A  158A  21B1  160A  118A  	fcall	_LCDWriteString
  4341                           
  4342                           ;Main.c: 480: { LCDGotoXY(0,2); LCDWriteString("Please Stay Out");};
  4343  160E  3002               	movlw	2
  4344  160F  1283               	bcf	3,5	;RP0=0, select bank0
  4345  1610  1303               	bcf	3,6	;RP1=0, select bank0
  4346  1611  00B0               	movwf	??_fireIndiSend
  4347  1612  0830               	movf	??_fireIndiSend,w
  4348  1613  00AC               	movwf	LCDGotoXY@y
  4349  1614  3000               	movlw	0
  4350  1615  160A  118A  2261  160A  118A  	fcall	_LCDGotoXY
  4351  161A  300E               	movlw	low (STR_42| (0+32768))
  4352  161B  1283               	bcf	3,5	;RP0=0, select bank0
  4353  161C  1303               	bcf	3,6	;RP1=0, select bank0
  4354  161D  00AC               	movwf	LCDWriteString@msg
  4355  161E  3088               	movlw	high (STR_42| (0+32768))
  4356  161F  00AD               	movwf	LCDWriteString@msg+1
  4357  1620  120A  158A  21B1  160A  118A  	fcall	_LCDWriteString
  4358                           
  4359                           ;Main.c: 481: { LCDGotoXY(0,3); LCDWriteString("From Vehicle");};
  4360  1625  3003               	movlw	3
  4361  1626  1283               	bcf	3,5	;RP0=0, select bank0
  4362  1627  1303               	bcf	3,6	;RP1=0, select bank0
  4363  1628  00B0               	movwf	??_fireIndiSend
  4364  1629  0830               	movf	??_fireIndiSend,w
  4365  162A  00AC               	movwf	LCDGotoXY@y
  4366  162B  3000               	movlw	0
  4367  162C  160A  118A  2261  160A  118A  	fcall	_LCDGotoXY
  4368  1631  3048               	movlw	low (STR_43| (0+32768))
  4369  1632  1283               	bcf	3,5	;RP0=0, select bank0
  4370  1633  1303               	bcf	3,6	;RP1=0, select bank0
  4371  1634  00AC               	movwf	LCDWriteString@msg
  4372  1635  3088               	movlw	high (STR_43| (0+32768))
  4373  1636  00AD               	movwf	LCDWriteString@msg+1
  4374  1637  120A  158A  21B1  160A  118A  	fcall	_LCDWriteString
  4375                           
  4376                           ;Main.c: 482: (LCDByte(0b00000001,0));
  4377  163C  1283               	bcf	3,5	;RP0=0, select bank0
  4378  163D  1303               	bcf	3,6	;RP1=0, select bank0
  4379  163E  01A5               	clrf	LCDByte@isdata
  4380  163F  3001               	movlw	1
  4381  1640  160A  118A  23AF  160A  118A  	fcall	_LCDByte
  4382                           
  4383                           ;Main.c: 483: _delay((unsigned long)((2000)*(20000000/4000.0)));
  4384  1645  3033               	movlw	51
  4385  1646  1283               	bcf	3,5	;RP0=0, select bank0
  4386  1647  1303               	bcf	3,6	;RP1=0, select bank0
  4387  1648  00B2               	movwf	??_fireIndiSend+2
  4388  1649  30BC               	movlw	188
  4389  164A  00B1               	movwf	??_fireIndiSend+1
  4390  164B  3010               	movlw	16
  4391  164C  00B0               	movwf	??_fireIndiSend
  4392  164D                     u3147:	
  4393  164D  0BB0               	decfsz	??_fireIndiSend,f
  4394  164E  2E4D               	goto	u3147
  4395  164F  0BB1               	decfsz	??_fireIndiSend+1,f
  4396  1650  2E4D               	goto	u3147
  4397  1651  0BB2               	decfsz	??_fireIndiSend+2,f
  4398  1652  2E4D               	goto	u3147
  4399                           
  4400                           ;Main.c: 485: break;
  4401  1653  0008               	return
  4402  1654                     __end_of_fireIndiSend:	
  4403                           ;Main.c: 489: }
  4404                           ;Main.c: 491: } while (1);
  4405                           
  4406                           ;Main.c: 488: break;
  4407                           
  4408                           ;Main.c: 487: } else {
  4409                           
  4410                           
  4411                           	psect	text4
  4412  1287                     __ptext4:	
  4413 ;; *************** function _ADC_Read *****************
  4414 ;; Defined at:
  4415 ;;		line 434 in file "Main.c"
  4416 ;; Parameters:    Size  Location     Type
  4417 ;;  channel         1    wreg     unsigned char 
  4418 ;; Auto vars:     Size  Location     Type
  4419 ;;  channel         1    4[BANK0 ] unsigned char 
  4420 ;; Return value:  Size  Location     Type
  4421 ;;                  2    0[BANK0 ] unsigned int 
  4422 ;; Registers used:
  4423 ;;		wreg, status,2, status,0
  4424 ;; Tracked objects:
  4425 ;;		On entry : 0/0
  4426 ;;		On exit  : 0/0
  4427 ;;		Unchanged: 0/0
  4428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4429 ;;      Params:         0       2       0       0       0
  4430 ;;      Locals:         0       1       0       0       0
  4431 ;;      Temps:          0       2       0       0       0
  4432 ;;      Totals:         0       5       0       0       0
  4433 ;;Total ram usage:        5 bytes
  4434 ;; Hardware stack levels used:    1
  4435 ;; Hardware stack levels required when called:    2
  4436 ;; This function calls:
  4437 ;;		Nothing
  4438 ;; This function is called by:
  4439 ;;		_fireIndiSend
  4440 ;; This function uses a non-reentrant model
  4441 ;;
  4442                           
  4443                           
  4444                           ;psect for function _ADC_Read
  4445  1287                     _ADC_Read:	
  4446                           
  4447                           ;incstack = 0
  4448                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
  4449                           ;ADC_Read@channel stored from wreg
  4450  1287  1283               	bcf	3,5	;RP0=0, select bank0
  4451  1288  1303               	bcf	3,6	;RP1=0, select bank0
  4452  1289  00A4               	movwf	ADC_Read@channel
  4453                           
  4454                           ;Main.c: 435: if (channel > 7)
  4455  128A  3008               	movlw	8
  4456  128B  0224               	subwf	ADC_Read@channel,w
  4457  128C  1C03               	skipc
  4458  128D  2A91               	goto	l2383
  4459                           
  4460                           ;Main.c: 436: return 0;
  4461  128E  01A0               	clrf	?_ADC_Read
  4462  128F  01A1               	clrf	?_ADC_Read+1
  4463  1290  0008               	return
  4464  1291                     l2383:	
  4465                           
  4466                           ;Main.c: 438: ADCON0 &= 0xC5;
  4467  1291  30C5               	movlw	197
  4468  1292  00A2               	movwf	??_ADC_Read
  4469  1293  0822               	movf	??_ADC_Read,w
  4470  1294  059F               	andwf	31,f	;volatile
  4471                           
  4472                           ;Main.c: 439: ADCON0 |= channel << 3;
  4473  1295  0824               	movf	ADC_Read@channel,w
  4474  1296  00A2               	movwf	??_ADC_Read
  4475  1297  3002               	movlw	2
  4476  1298                     u1595:	
  4477  1298  1003               	clrc
  4478  1299  0DA2               	rlf	??_ADC_Read,f
  4479  129A  3EFF               	addlw	-1
  4480  129B  1D03               	skipz
  4481  129C  2A98               	goto	u1595
  4482  129D  1003               	clrc
  4483  129E  0D22               	rlf	??_ADC_Read,w
  4484  129F  00A3               	movwf	??_ADC_Read+1
  4485  12A0  0823               	movf	??_ADC_Read+1,w
  4486  12A1  049F               	iorwf	31,f	;volatile
  4487                           
  4488                           ;Main.c: 440: _delay((unsigned long)((2)*(20000000/4000.0)));
  4489  12A2  300D               	movlw	13
  4490  12A3  00A3               	movwf	??_ADC_Read+1
  4491  12A4  30FB               	movlw	251
  4492  12A5  00A2               	movwf	??_ADC_Read
  4493  12A6                     u3157:	
  4494  12A6  0BA2               	decfsz	??_ADC_Read,f
  4495  12A7  2AA6               	goto	u3157
  4496  12A8  0BA3               	decfsz	??_ADC_Read+1,f
  4497  12A9  2AA6               	goto	u3157
  4498  12AA  2AAB               	nop2
  4499                           
  4500                           ;Main.c: 441: GO_nDONE = 1;
  4501  12AB  1283               	bcf	3,5	;RP0=0, select bank0
  4502  12AC  1303               	bcf	3,6	;RP1=0, select bank0
  4503  12AD  151F               	bsf	31,2	;volatile
  4504  12AE                     l373:	
  4505                           ;Main.c: 442: while (GO_nDONE);
  4506                           
  4507  12AE  191F               	btfsc	31,2	;volatile
  4508  12AF  2AAE               	goto	l373
  4509                           
  4510                           ;Main.c: 443: return ((ADRESH << 8) + ADRESL);
  4511  12B0  081E               	movf	30,w	;volatile
  4512  12B1  00A1               	movwf	?_ADC_Read+1
  4513  12B2  1683               	bsf	3,5	;RP0=1, select bank1
  4514  12B3  1303               	bcf	3,6	;RP1=0, select bank1
  4515  12B4  081E               	movf	30,w	;volatile
  4516  12B5  1283               	bcf	3,5	;RP0=0, select bank0
  4517  12B6  1303               	bcf	3,6	;RP1=0, select bank0
  4518  12B7  00A0               	movwf	?_ADC_Read
  4519  12B8  0008               	return
  4520  12B9                     __end_of_ADC_Read:	
  4521                           
  4522                           	psect	text5
  4523  11E0                     __ptext5:	
  4524 ;; *************** function _ADC_Init *****************
  4525 ;; Defined at:
  4526 ;;		line 429 in file "Main.c"
  4527 ;; Parameters:    Size  Location     Type
  4528 ;;		None
  4529 ;; Auto vars:     Size  Location     Type
  4530 ;;		None
  4531 ;; Return value:  Size  Location     Type
  4532 ;;		None               void
  4533 ;; Registers used:
  4534 ;;		wreg, status,2
  4535 ;; Tracked objects:
  4536 ;;		On entry : 0/0
  4537 ;;		On exit  : 0/0
  4538 ;;		Unchanged: 0/0
  4539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4540 ;;      Params:         0       0       0       0       0
  4541 ;;      Locals:         0       0       0       0       0
  4542 ;;      Temps:          0       0       0       0       0
  4543 ;;      Totals:         0       0       0       0       0
  4544 ;;Total ram usage:        0 bytes
  4545 ;; Hardware stack levels used:    1
  4546 ;; Hardware stack levels required when called:    2
  4547 ;; This function calls:
  4548 ;;		Nothing
  4549 ;; This function is called by:
  4550 ;;		_fireIndiSend
  4551 ;; This function uses a non-reentrant model
  4552 ;;
  4553                           
  4554                           
  4555                           ;psect for function _ADC_Init
  4556  11E0                     _ADC_Init:	
  4557                           
  4558                           ;Main.c: 430: ADCON0 = 0x81;
  4559                           
  4560                           ;incstack = 0
  4561                           ; Regs used in _ADC_Init: [wreg+status,2]
  4562  11E0  3081               	movlw	129
  4563  11E1  1283               	bcf	3,5	;RP0=0, select bank0
  4564  11E2  1303               	bcf	3,6	;RP1=0, select bank0
  4565  11E3  009F               	movwf	31	;volatile
  4566                           
  4567                           ;Main.c: 431: ADCON1 = 0x00;
  4568  11E4  1683               	bsf	3,5	;RP0=1, select bank1
  4569  11E5  1303               	bcf	3,6	;RP1=0, select bank1
  4570  11E6  019F               	clrf	31	;volatile
  4571  11E7  0008               	return
  4572  11E8                     __end_of_ADC_Init:	
  4573                           
  4574                           	psect	text6
  4575  123E                     __ptext6:	
  4576 ;; *************** function ___wmul *****************
  4577 ;; Defined at:
  4578 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  4579 ;; Parameters:    Size  Location     Type
  4580 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4581 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4582 ;; Auto vars:     Size  Location     Type
  4583 ;;  product         2    4[BANK0 ] unsigned int 
  4584 ;; Return value:  Size  Location     Type
  4585 ;;                  2    0[BANK0 ] unsigned int 
  4586 ;; Registers used:
  4587 ;;		wreg, status,2, status,0
  4588 ;; Tracked objects:
  4589 ;;		On entry : 0/0
  4590 ;;		On exit  : 0/0
  4591 ;;		Unchanged: 0/0
  4592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4593 ;;      Params:         0       4       0       0       0
  4594 ;;      Locals:         0       2       0       0       0
  4595 ;;      Temps:          0       0       0       0       0
  4596 ;;      Totals:         0       6       0       0       0
  4597 ;;Total ram usage:        6 bytes
  4598 ;; Hardware stack levels used:    1
  4599 ;; Hardware stack levels required when called:    2
  4600 ;; This function calls:
  4601 ;;		Nothing
  4602 ;; This function is called by:
  4603 ;;		_SPEED
  4604 ;; This function uses a non-reentrant model
  4605 ;;
  4606                           
  4607                           
  4608                           ;psect for function ___wmul
  4609  123E                     ___wmul:	
  4610                           
  4611                           ;incstack = 0
  4612                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4613  123E  1283               	bcf	3,5	;RP0=0, select bank0
  4614  123F  1303               	bcf	3,6	;RP1=0, select bank0
  4615  1240  01A4               	clrf	___wmul@product
  4616  1241  01A5               	clrf	___wmul@product+1
  4617  1242                     l2765:	
  4618  1242  1C20               	btfss	___wmul@multiplier,0
  4619  1243  2A4A               	goto	l475
  4620  1244  0822               	movf	___wmul@multiplicand,w
  4621  1245  07A4               	addwf	___wmul@product,f
  4622  1246  1803               	skipnc
  4623  1247  0AA5               	incf	___wmul@product+1,f
  4624  1248  0823               	movf	___wmul@multiplicand+1,w
  4625  1249  07A5               	addwf	___wmul@product+1,f
  4626  124A                     l475:	
  4627  124A  3001               	movlw	1
  4628  124B                     u2135:	
  4629  124B  1003               	clrc
  4630  124C  0DA2               	rlf	___wmul@multiplicand,f
  4631  124D  0DA3               	rlf	___wmul@multiplicand+1,f
  4632  124E  3EFF               	addlw	-1
  4633  124F  1D03               	skipz
  4634  1250  2A4B               	goto	u2135
  4635  1251  3001               	movlw	1
  4636  1252                     u2145:	
  4637  1252  1003               	clrc
  4638  1253  0CA1               	rrf	___wmul@multiplier+1,f
  4639  1254  0CA0               	rrf	___wmul@multiplier,f
  4640  1255  3EFF               	addlw	-1
  4641  1256  1D03               	skipz
  4642  1257  2A52               	goto	u2145
  4643  1258  0820               	movf	___wmul@multiplier,w
  4644  1259  0421               	iorwf	___wmul@multiplier+1,w
  4645  125A  1D03               	btfss	3,2
  4646  125B  2A42               	goto	l2765
  4647  125C  0825               	movf	___wmul@product+1,w
  4648  125D  00A1               	movwf	?___wmul+1
  4649  125E  0824               	movf	___wmul@product,w
  4650  125F  00A0               	movwf	?___wmul
  4651  1260  0008               	return
  4652  1261                     __end_of___wmul:	
  4653                           
  4654                           	psect	text7
  4655  13F6                     __ptext7:	
  4656 ;; *************** function _USARTInit *****************
  4657 ;; Defined at:
  4658 ;;		line 32 in file "usart_pic16.c"
  4659 ;; Parameters:    Size  Location     Type
  4660 ;;  baud_rate       2    0[BANK0 ] unsigned int 
  4661 ;; Auto vars:     Size  Location     Type
  4662 ;;		None
  4663 ;; Return value:  Size  Location     Type
  4664 ;;		None               void
  4665 ;; Registers used:
  4666 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4667 ;; Tracked objects:
  4668 ;;		On entry : 0/0
  4669 ;;		On exit  : 0/0
  4670 ;;		Unchanged: 0/0
  4671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4672 ;;      Params:         0       2       0       0       0
  4673 ;;      Locals:         0       0       0       0       0
  4674 ;;      Temps:          0       1       0       0       0
  4675 ;;      Totals:         0       3       0       0       0
  4676 ;;Total ram usage:        3 bytes
  4677 ;; Hardware stack levels used:    1
  4678 ;; Hardware stack levels required when called:    2
  4679 ;; This function calls:
  4680 ;;		Nothing
  4681 ;; This function is called by:
  4682 ;;		_SPEED
  4683 ;; This function uses a non-reentrant model
  4684 ;;
  4685                           
  4686                           
  4687                           ;psect for function _USARTInit
  4688  13F6                     _USARTInit:	
  4689                           
  4690                           ;usart_pic16.c: 35: UQFront=UQEnd=-1;
  4691                           
  4692                           ;incstack = 0
  4693                           ; Regs used in _USARTInit: [wreg-fsr0h+status,2+status,0]
  4694  13F6  30FF               	movlw	255
  4695  13F7  00FB               	movwf	_UQEnd	;volatile
  4696  13F8  1283               	bcf	3,5	;RP0=0, select bank0
  4697  13F9  1303               	bcf	3,6	;RP1=0, select bank0
  4698  13FA  00A2               	movwf	??_USARTInit
  4699  13FB  0822               	movf	??_USARTInit,w
  4700  13FC  00FC               	movwf	_UQFront	;volatile
  4701                           
  4702                           ;usart_pic16.c: 38: switch(baud_rate)
  4703  13FD  2C09               	goto	l2529
  4704  13FE                     l2519:	
  4705                           ;usart_pic16.c: 39: {
  4706                           ;usart_pic16.c: 40: case 9600:
  4707                           
  4708                           
  4709                           ;usart_pic16.c: 41: SPBRG=129;
  4710  13FE  3081               	movlw	129
  4711  13FF  2C05               	goto	L5
  4712  1400                     l2521:	
  4713                           ;usart_pic16.c: 43: case 19200:
  4714                           
  4715                           ;usart_pic16.c: 42: break;
  4716                           
  4717                           
  4718                           ;usart_pic16.c: 44: SPBRG=64;
  4719  1400  3040               	movlw	64
  4720  1401  2C05               	goto	L5
  4721  1402                     l2523:	
  4722                           ;usart_pic16.c: 46: case 28800:
  4723                           
  4724                           ;usart_pic16.c: 45: break;
  4725                           
  4726                           
  4727                           ;usart_pic16.c: 47: SPBRG=42;
  4728  1402  302A               	movlw	42
  4729  1403  2C05               	goto	L5
  4730  1404                     l2525:	
  4731                           ;usart_pic16.c: 49: case 33600:
  4732                           
  4733                           ;usart_pic16.c: 48: break;
  4734                           
  4735                           
  4736                           ;usart_pic16.c: 50: SPBRG=36;
  4737  1404  3024               	movlw	36
  4738  1405                     L5:	
  4739  1405  1683               	bsf	3,5	;RP0=1, select bank1
  4740  1406  1303               	bcf	3,6	;RP1=0, select bank1
  4741  1407  0099               	movwf	25	;volatile
  4742                           
  4743                           ;usart_pic16.c: 52: }
  4744                           
  4745                           ;usart_pic16.c: 51: break;
  4746  1408  2C2C               	goto	l123
  4747  1409                     l2529:	
  4748                           
  4749                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 4 sub-sw
      +                          itches
  4750                           ; Switch size 1, requested type "space"
  4751                           ; Number of cases is 4, Range of values is 37 to 131
  4752                           ; switch strategies available:
  4753                           ; Name         Instructions Cycles
  4754                           ; simple_byte           13     7 (average)
  4755                           ; jumptable            263     9 (fixed)
  4756                           ;	Chosen strategy is simple_byte
  4757  1409  1283               	bcf	3,5	;RP0=0, select bank0
  4758  140A  0821               	movf	USARTInit@baud_rate+1,w
  4759  140B  3A25               	xorlw	37	; case 37
  4760  140C  1903               	skipnz
  4761  140D  2C18               	goto	l3433
  4762  140E  3A6E               	xorlw	110	; case 75
  4763  140F  1903               	skipnz
  4764  1410  2C1D               	goto	l3435
  4765  1411  3A3B               	xorlw	59	; case 112
  4766  1412  1903               	skipnz
  4767  1413  2C22               	goto	l3437
  4768  1414  3AF3               	xorlw	243	; case 131
  4769  1415  1903               	skipnz
  4770  1416  2C27               	goto	l3439
  4771  1417  2C2C               	goto	l123
  4772  1418                     l3433:	
  4773                           
  4774                           ; Switch size 1, requested type "space"
  4775                           ; Number of cases is 1, Range of values is 128 to 128
  4776                           ; switch strategies available:
  4777                           ; Name         Instructions Cycles
  4778                           ; simple_byte            4     3 (average)
  4779                           ; direct_byte           14    11 (fixed)
  4780                           ; jumptable            263     9 (fixed)
  4781                           ;	Chosen strategy is simple_byte
  4782  1418  0820               	movf	USARTInit@baud_rate,w
  4783  1419  3A80               	xorlw	128	; case 128
  4784  141A  1903               	skipnz
  4785  141B  2BFE               	goto	l2519
  4786  141C  2C2C               	goto	l123
  4787  141D                     l3435:	
  4788                           
  4789                           ; Switch size 1, requested type "space"
  4790                           ; Number of cases is 1, Range of values is 0 to 0
  4791                           ; switch strategies available:
  4792                           ; Name         Instructions Cycles
  4793                           ; simple_byte            4     3 (average)
  4794                           ; direct_byte           11     8 (fixed)
  4795                           ; jumptable            260     6 (fixed)
  4796                           ;	Chosen strategy is simple_byte
  4797  141D  0820               	movf	USARTInit@baud_rate,w
  4798  141E  3A00               	xorlw	0	; case 0
  4799  141F  1903               	skipnz
  4800  1420  2C00               	goto	l2521
  4801  1421  2C2C               	goto	l123
  4802  1422                     l3437:	
  4803                           
  4804                           ; Switch size 1, requested type "space"
  4805                           ; Number of cases is 1, Range of values is 128 to 128
  4806                           ; switch strategies available:
  4807                           ; Name         Instructions Cycles
  4808                           ; simple_byte            4     3 (average)
  4809                           ; direct_byte           14    11 (fixed)
  4810                           ; jumptable            263     9 (fixed)
  4811                           ;	Chosen strategy is simple_byte
  4812  1422  0820               	movf	USARTInit@baud_rate,w
  4813  1423  3A80               	xorlw	128	; case 128
  4814  1424  1903               	skipnz
  4815  1425  2C02               	goto	l2523
  4816  1426  2C2C               	goto	l123
  4817  1427                     l3439:	
  4818                           
  4819                           ; Switch size 1, requested type "space"
  4820                           ; Number of cases is 1, Range of values is 64 to 64
  4821                           ; switch strategies available:
  4822                           ; Name         Instructions Cycles
  4823                           ; simple_byte            4     3 (average)
  4824                           ; direct_byte           14    11 (fixed)
  4825                           ; jumptable            263     9 (fixed)
  4826                           ;	Chosen strategy is simple_byte
  4827  1427  0820               	movf	USARTInit@baud_rate,w
  4828  1428  3A40               	xorlw	64	; case 64
  4829  1429  1903               	skipnz
  4830  142A  2C04               	goto	l2525
  4831  142B  2C2C               	goto	l123
  4832  142C                     l123:	
  4833                           
  4834                           ;usart_pic16.c: 54: TXSTAbits.TX9=0;
  4835  142C  1683               	bsf	3,5	;RP0=1, select bank1
  4836  142D  1303               	bcf	3,6	;RP1=0, select bank1
  4837  142E  1318               	bcf	24,6	;volatile
  4838                           
  4839                           ;usart_pic16.c: 55: TXSTAbits.TXEN=1;
  4840  142F  1698               	bsf	24,5	;volatile
  4841                           
  4842                           ;usart_pic16.c: 56: TXSTAbits.SYNC=0;
  4843  1430  1218               	bcf	24,4	;volatile
  4844                           
  4845                           ;usart_pic16.c: 57: TXSTAbits.BRGH=1;
  4846  1431  1518               	bsf	24,2	;volatile
  4847                           
  4848                           ;usart_pic16.c: 60: RCSTAbits.SPEN=1;
  4849  1432  1283               	bcf	3,5	;RP0=0, select bank0
  4850  1433  1303               	bcf	3,6	;RP1=0, select bank0
  4851  1434  1798               	bsf	24,7	;volatile
  4852                           
  4853                           ;usart_pic16.c: 61: RCSTAbits.RX9=0;
  4854  1435  1318               	bcf	24,6	;volatile
  4855                           
  4856                           ;usart_pic16.c: 62: RCSTAbits.CREN=1;
  4857  1436  1618               	bsf	24,4	;volatile
  4858                           
  4859                           ;usart_pic16.c: 63: RCSTAbits.ADDEN=0;
  4860  1437  1198               	bcf	24,3	;volatile
  4861                           
  4862                           ;usart_pic16.c: 66: RCIE=1;
  4863  1438  1683               	bsf	3,5	;RP0=1, select bank1
  4864  1439  1303               	bcf	3,6	;RP1=0, select bank1
  4865  143A  168C               	bsf	12,5	;volatile
  4866                           
  4867                           ;usart_pic16.c: 67: PEIE=1;
  4868  143B  170B               	bsf	11,6	;volatile
  4869                           
  4870                           ;usart_pic16.c: 69: (GIE = 1);
  4871  143C  178B               	bsf	11,7	;volatile
  4872  143D  0008               	return
  4873  143E                     __end_of_USARTInit:	
  4874                           
  4875                           	psect	text8
  4876  0A74                     __ptext8:	
  4877 ;; *************** function _POSITION *****************
  4878 ;; Defined at:
  4879 ;;		line 145 in file "Main.c"
  4880 ;; Parameters:    Size  Location     Type
  4881 ;;		None
  4882 ;; Auto vars:     Size  Location     Type
  4883 ;;  l               2   49[BANK0 ] int 
  4884 ;;  l               2   47[BANK0 ] int 
  4885 ;;  i               2   45[BANK0 ] int 
  4886 ;;  i               2   57[BANK0 ] int 
  4887 ;;  l               2   53[BANK0 ] int 
  4888 ;;  l               2   51[BANK0 ] int 
  4889 ;;  longi          10   22[BANK0 ] unsigned char [10]
  4890 ;;  lat             9   32[BANK0 ] unsigned char [9]
  4891 ;;  count           2   55[BANK0 ] int 
  4892 ;;  i               2   41[BANK0 ] int 
  4893 ;;  longiEW         1   44[BANK0 ] unsigned char 
  4894 ;;  latNS           1   43[BANK0 ] unsigned char 
  4895 ;; Return value:  Size  Location     Type
  4896 ;;		None               void
  4897 ;; Registers used:
  4898 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4899 ;; Tracked objects:
  4900 ;;		On entry : 0/0
  4901 ;;		On exit  : 0/0
  4902 ;;		Unchanged: 0/0
  4903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4904 ;;      Params:         0       0       0       0       0
  4905 ;;      Locals:         0      37       0       0       0
  4906 ;;      Temps:          0       3       0       0       0
  4907 ;;      Totals:         0      40       0       0       0
  4908 ;;Total ram usage:       40 bytes
  4909 ;; Hardware stack levels used:    1
  4910 ;; Hardware stack levels required when called:    6
  4911 ;; This function calls:
  4912 ;;		_LCDGotoXY
  4913 ;;		_LCDWriteChar
  4914 ;;		_LCDWriteString
  4915 ;;		_USARTReadData
  4916 ;;		___awmod
  4917 ;;		_sendByGPRS
  4918 ;; This function is called by:
  4919 ;;		_SPEED
  4920 ;; This function uses a non-reentrant model
  4921 ;;
  4922                           
  4923                           
  4924                           ;psect for function _POSITION
  4925  0A74                     _POSITION:	
  4926                           
  4927                           ;Main.c: 148: char lat[9], latNS;
  4928                           ;Main.c: 149: char longi[10], longiEW;
  4929                           ;Main.c: 152: int count = 0, i = 0;
  4930                           
  4931                           ;incstack = 0
  4932                           ; Regs used in _POSITION: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4933  0A74  1283               	bcf	3,5	;RP0=0, select bank0
  4934  0A75  1303               	bcf	3,6	;RP1=0, select bank0
  4935  0A76  01D7               	clrf	POSITION@count
  4936  0A77  01D8               	clrf	POSITION@count+1
  4937  0A78  01C9               	clrf	POSITION@i
  4938  0A79  01CA               	clrf	POSITION@i+1
  4939  0A7A                     l2549:	
  4940                           ;Main.c: 154: while (i < 32900) {
  4941                           
  4942                           
  4943                           ;Main.c: 155: i++;
  4944  0A7A  3001               	movlw	1
  4945  0A7B  1283               	bcf	3,5	;RP0=0, select bank0
  4946  0A7C  1303               	bcf	3,6	;RP1=0, select bank0
  4947  0A7D  07C9               	addwf	POSITION@i,f
  4948  0A7E  1803               	skipnc
  4949  0A7F  0ACA               	incf	POSITION@i+1,f
  4950  0A80  3000               	movlw	0
  4951  0A81  07CA               	addwf	POSITION@i+1,f
  4952                           
  4953                           ;Main.c: 156: if (USARTReadData() == '$') {
  4954  0A82  160A  118A  221B  120A  158A  	fcall	_USARTReadData
  4955  0A87  3A24               	xorlw	36
  4956  0A88  1D03               	skipz
  4957  0A89  2A7A               	goto	l2549
  4958                           
  4959                           ;Main.c: 157: _delay((unsigned long)((1.25)*(20000000/4000.0)));
  4960  0A8A  3009               	movlw	9
  4961  0A8B  1283               	bcf	3,5	;RP0=0, select bank0
  4962  0A8C  1303               	bcf	3,6	;RP1=0, select bank0
  4963  0A8D  00B4               	movwf	??_POSITION+1
  4964  0A8E  301C               	movlw	28
  4965  0A8F  00B3               	movwf	??_POSITION
  4966  0A90                     u3167:	
  4967  0A90  0BB3               	decfsz	??_POSITION,f
  4968  0A91  2A90               	goto	u3167
  4969  0A92  0BB4               	decfsz	??_POSITION+1,f
  4970  0A93  2A90               	goto	u3167
  4971  0A94  0000               	nop
  4972                           
  4973                           ;Main.c: 158: if (USARTReadData() == 'G') {
  4974  0A95  160A  118A  221B  120A  158A  	fcall	_USARTReadData
  4975  0A9A  3A47               	xorlw	71
  4976  0A9B  1D03               	skipz
  4977  0A9C  2BD3               	goto	l2635
  4978                           
  4979                           ;Main.c: 159: _delay((unsigned long)((1.25)*(20000000/4000.0)));
  4980  0A9D  3009               	movlw	9
  4981  0A9E  1283               	bcf	3,5	;RP0=0, select bank0
  4982  0A9F  1303               	bcf	3,6	;RP1=0, select bank0
  4983  0AA0  00B4               	movwf	??_POSITION+1
  4984  0AA1  301C               	movlw	28
  4985  0AA2  00B3               	movwf	??_POSITION
  4986  0AA3                     u3177:	
  4987  0AA3  0BB3               	decfsz	??_POSITION,f
  4988  0AA4  2AA3               	goto	u3177
  4989  0AA5  0BB4               	decfsz	??_POSITION+1,f
  4990  0AA6  2AA3               	goto	u3177
  4991  0AA7  0000               	nop
  4992                           
  4993                           ;Main.c: 160: if (USARTReadData() == 'P') {
  4994  0AA8  160A  118A  221B  120A  158A  	fcall	_USARTReadData
  4995  0AAD  3A50               	xorlw	80
  4996  0AAE  1D03               	skipz
  4997  0AAF  2BD3               	goto	l2635
  4998                           
  4999                           ;Main.c: 161: _delay((unsigned long)((1.25)*(20000000/4000.0)));
  5000  0AB0  3009               	movlw	9
  5001  0AB1  1283               	bcf	3,5	;RP0=0, select bank0
  5002  0AB2  1303               	bcf	3,6	;RP1=0, select bank0
  5003  0AB3  00B4               	movwf	??_POSITION+1
  5004  0AB4  301C               	movlw	28
  5005  0AB5  00B3               	movwf	??_POSITION
  5006  0AB6                     u3187:	
  5007  0AB6  0BB3               	decfsz	??_POSITION,f
  5008  0AB7  2AB6               	goto	u3187
  5009  0AB8  0BB4               	decfsz	??_POSITION+1,f
  5010  0AB9  2AB6               	goto	u3187
  5011  0ABA  0000               	nop
  5012                           
  5013                           ;Main.c: 162: if (USARTReadData() == 'G') {
  5014  0ABB  160A  118A  221B  120A  158A  	fcall	_USARTReadData
  5015  0AC0  3A47               	xorlw	71
  5016  0AC1  1D03               	skipz
  5017  0AC2  2BD3               	goto	l2635
  5018                           
  5019                           ;Main.c: 163: _delay((unsigned long)((1.25)*(20000000/4000.0)));
  5020  0AC3  3009               	movlw	9
  5021  0AC4  1283               	bcf	3,5	;RP0=0, select bank0
  5022  0AC5  1303               	bcf	3,6	;RP1=0, select bank0
  5023  0AC6  00B4               	movwf	??_POSITION+1
  5024  0AC7  301C               	movlw	28
  5025  0AC8  00B3               	movwf	??_POSITION
  5026  0AC9                     u3197:	
  5027  0AC9  0BB3               	decfsz	??_POSITION,f
  5028  0ACA  2AC9               	goto	u3197
  5029  0ACB  0BB4               	decfsz	??_POSITION+1,f
  5030  0ACC  2AC9               	goto	u3197
  5031  0ACD  0000               	nop
  5032                           
  5033                           ;Main.c: 164: if (USARTReadData() == 'G') {
  5034  0ACE  160A  118A  221B  120A  158A  	fcall	_USARTReadData
  5035  0AD3  3A47               	xorlw	71
  5036  0AD4  1D03               	skipz
  5037  0AD5  2BD3               	goto	l2635
  5038                           
  5039                           ;Main.c: 165: _delay((unsigned long)((1.25)*(20000000/4000.0)));
  5040  0AD6  3009               	movlw	9
  5041  0AD7  1283               	bcf	3,5	;RP0=0, select bank0
  5042  0AD8  1303               	bcf	3,6	;RP1=0, select bank0
  5043  0AD9  00B4               	movwf	??_POSITION+1
  5044  0ADA  301C               	movlw	28
  5045  0ADB  00B3               	movwf	??_POSITION
  5046  0ADC                     u3207:	
  5047  0ADC  0BB3               	decfsz	??_POSITION,f
  5048  0ADD  2ADC               	goto	u3207
  5049  0ADE  0BB4               	decfsz	??_POSITION+1,f
  5050  0ADF  2ADC               	goto	u3207
  5051  0AE0  0000               	nop
  5052                           
  5053                           ;Main.c: 166: if (USARTReadData() == 'A') {
  5054  0AE1  160A  118A  221B  120A  158A  	fcall	_USARTReadData
  5055  0AE6  3A41               	xorlw	65
  5056  0AE7  1D03               	skipz
  5057  0AE8  2BD3               	goto	l2635
  5058                           
  5059                           ;Main.c: 167: _delay((unsigned long)((1.25)*(20000000/4000.0)));
  5060  0AE9  3009               	movlw	9
  5061  0AEA  1283               	bcf	3,5	;RP0=0, select bank0
  5062  0AEB  1303               	bcf	3,6	;RP1=0, select bank0
  5063  0AEC  00B4               	movwf	??_POSITION+1
  5064  0AED  301C               	movlw	28
  5065  0AEE  00B3               	movwf	??_POSITION
  5066  0AEF                     u3217:	
  5067  0AEF  0BB3               	decfsz	??_POSITION,f
  5068  0AF0  2AEF               	goto	u3217
  5069  0AF1  0BB4               	decfsz	??_POSITION+1,f
  5070  0AF2  2AEF               	goto	u3217
  5071  0AF3  0000               	nop
  5072                           
  5073                           ;Main.c: 171: for (int i = 0; i < 70; i++) {
  5074  0AF4  1283               	bcf	3,5	;RP0=0, select bank0
  5075  0AF5  1303               	bcf	3,6	;RP1=0, select bank0
  5076  0AF6  01CD               	clrf	POSITION@i_337
  5077  0AF7  01CE               	clrf	POSITION@i_337+1
  5078  0AF8                     L6:	
  5079  0AF8  084E               	movf	POSITION@i_337+1,w
  5080  0AF9  3A80               	xorlw	128
  5081  0AFA  00FF               	movwf	127
  5082  0AFB  3080               	movlw	128
  5083  0AFC  027F               	subwf	127,w
  5084  0AFD  1D03               	skipz
  5085  0AFE  2B01               	goto	u1925
  5086  0AFF  3046               	movlw	70
  5087  0B00  024D               	subwf	POSITION@i_337,w
  5088  0B01                     u1925:	
  5089  0B01  1803               	btfsc	3,0
  5090  0B02  2BD3               	goto	l2635
  5091                           
  5092                           ;Main.c: 172: _delay((unsigned long)((1.25)*(20000000/4000.0)));
  5093  0B03  3009               	movlw	9
  5094  0B04  1283               	bcf	3,5	;RP0=0, select bank0
  5095  0B05  1303               	bcf	3,6	;RP1=0, select bank0
  5096  0B06  00B4               	movwf	??_POSITION+1
  5097  0B07  301C               	movlw	28
  5098  0B08  00B3               	movwf	??_POSITION
  5099  0B09                     u3227:	
  5100  0B09  0BB3               	decfsz	??_POSITION,f
  5101  0B0A  2B09               	goto	u3227
  5102  0B0B  0BB4               	decfsz	??_POSITION+1,f
  5103  0B0C  2B09               	goto	u3227
  5104  0B0D  0000               	nop
  5105                           
  5106                           ;Main.c: 173: if (USARTReadData() == ',') {
  5107  0B0E  160A  118A  221B  120A  158A  	fcall	_USARTReadData
  5108  0B13  3A2C               	xorlw	44
  5109  0B14  1D03               	skipz
  5110  0B15  2BCA               	goto	l2631
  5111                           
  5112                           ;Main.c: 174: ++count;
  5113  0B16  3001               	movlw	1
  5114  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  5115  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  5116  0B19  07D7               	addwf	POSITION@count,f
  5117  0B1A  1803               	skipnc
  5118  0B1B  0AD8               	incf	POSITION@count+1,f
  5119  0B1C  3000               	movlw	0
  5120  0B1D  07D8               	addwf	POSITION@count+1,f
  5121                           
  5122                           ;Main.c: 175: if (count == 2) {
  5123  0B1E  3002               	movlw	2
  5124  0B1F  0657               	xorwf	POSITION@count,w
  5125  0B20  0458               	iorwf	POSITION@count+1,w
  5126  0B21  1D03               	btfss	3,2
  5127  0B22  2B5A               	goto	l2603
  5128                           
  5129                           ;Main.c: 176: for (int l = 0; l < 9; l++) {
  5130  0B23  01CF               	clrf	POSITION@l
  5131  0B24  01D0               	clrf	POSITION@l+1
  5132  0B25  0850               	movf	POSITION@l+1,w
  5133  0B26  3A80               	xorlw	128
  5134  0B27  00FF               	movwf	127
  5135  0B28  3080               	movlw	128
  5136  0B29  027F               	subwf	127,w
  5137  0B2A  1D03               	skipz
  5138  0B2B  2B2E               	goto	u1955
  5139  0B2C  3009               	movlw	9
  5140  0B2D  024F               	subwf	POSITION@l,w
  5141  0B2E                     u1955:	
  5142  0B2E  1803               	btfsc	3,0
  5143  0B2F  2B5A               	goto	l2603
  5144  0B30                     l2595:	
  5145                           
  5146                           ;Main.c: 177: _delay((unsigned long)((1.25)*(20000000/4000.0)));
  5147  0B30  3009               	movlw	9
  5148  0B31  1283               	bcf	3,5	;RP0=0, select bank0
  5149  0B32  1303               	bcf	3,6	;RP1=0, select bank0
  5150  0B33  00B4               	movwf	??_POSITION+1
  5151  0B34  301C               	movlw	28
  5152  0B35  00B3               	movwf	??_POSITION
  5153  0B36                     u3237:	
  5154  0B36  0BB3               	decfsz	??_POSITION,f
  5155  0B37  2B36               	goto	u3237
  5156  0B38  0BB4               	decfsz	??_POSITION+1,f
  5157  0B39  2B36               	goto	u3237
  5158  0B3A  0000               	nop
  5159                           
  5160                           ;Main.c: 178: lat[l] = USARTReadData();
  5161  0B3B  160A  118A  221B  120A  158A  	fcall	_USARTReadData
  5162  0B40  1283               	bcf	3,5	;RP0=0, select bank0
  5163  0B41  1303               	bcf	3,6	;RP1=0, select bank0
  5164  0B42  00B3               	movwf	??_POSITION
  5165  0B43  084F               	movf	POSITION@l,w
  5166  0B44  3E40               	addlw	(low (POSITION@lat| 0))& (0+255)
  5167  0B45  0084               	movwf	4
  5168  0B46  0833               	movf	??_POSITION,w
  5169  0B47  1383               	bcf	3,7	;select IRP bank0
  5170  0B48  0080               	movwf	0
  5171  0B49  3001               	movlw	1
  5172  0B4A  07CF               	addwf	POSITION@l,f
  5173  0B4B  1803               	skipnc
  5174  0B4C  0AD0               	incf	POSITION@l+1,f
  5175  0B4D  3000               	movlw	0
  5176  0B4E  07D0               	addwf	POSITION@l+1,f
  5177  0B4F  0850               	movf	POSITION@l+1,w
  5178  0B50  3A80               	xorlw	128
  5179  0B51  00FF               	movwf	127
  5180  0B52  3080               	movlw	128
  5181  0B53  027F               	subwf	127,w
  5182  0B54  1D03               	skipz
  5183  0B55  2B58               	goto	u1965
  5184  0B56  3009               	movlw	9
  5185  0B57  024F               	subwf	POSITION@l,w
  5186  0B58                     u1965:	
  5187  0B58  1C03               	skipc
  5188  0B59  2B30               	goto	l2595
  5189  0B5A                     l2603:	
  5190                           
  5191                           ;Main.c: 180: }
  5192                           ;Main.c: 181: }
  5193                           ;Main.c: 182: if (count == 3) {
  5194  0B5A  3003               	movlw	3
  5195  0B5B  1283               	bcf	3,5	;RP0=0, select bank0
  5196  0B5C  1303               	bcf	3,6	;RP1=0, select bank0
  5197  0B5D  0657               	xorwf	POSITION@count,w
  5198  0B5E  0458               	iorwf	POSITION@count+1,w
  5199  0B5F  1D03               	btfss	3,2
  5200  0B60  2B74               	goto	l2609
  5201                           
  5202                           ;Main.c: 183: _delay((unsigned long)((1.25)*(20000000/4000.0)));
  5203  0B61  3009               	movlw	9
  5204  0B62  00B4               	movwf	??_POSITION+1
  5205  0B63  301C               	movlw	28
  5206  0B64  00B3               	movwf	??_POSITION
  5207  0B65                     u3247:	
  5208  0B65  0BB3               	decfsz	??_POSITION,f
  5209  0B66  2B65               	goto	u3247
  5210  0B67  0BB4               	decfsz	??_POSITION+1,f
  5211  0B68  2B65               	goto	u3247
  5212  0B69  0000               	nop
  5213                           
  5214                           ;Main.c: 184: latNS = USARTReadData();
  5215  0B6A  160A  118A  221B  120A  158A  	fcall	_USARTReadData
  5216  0B6F  1283               	bcf	3,5	;RP0=0, select bank0
  5217  0B70  1303               	bcf	3,6	;RP1=0, select bank0
  5218  0B71  00B3               	movwf	??_POSITION
  5219  0B72  0833               	movf	??_POSITION,w
  5220  0B73  00CB               	movwf	POSITION@latNS
  5221  0B74                     l2609:	
  5222                           
  5223                           ;Main.c: 186: }
  5224                           ;Main.c: 187: if (count == 4) {
  5225  0B74  3004               	movlw	4
  5226  0B75  0657               	xorwf	POSITION@count,w
  5227  0B76  0458               	iorwf	POSITION@count+1,w
  5228  0B77  1D03               	btfss	3,2
  5229  0B78  2BB0               	goto	l2625
  5230                           
  5231                           ;Main.c: 188: for (int l = 0; l < 10; l++) {
  5232  0B79  01D1               	clrf	POSITION@l_339
  5233  0B7A  01D2               	clrf	POSITION@l_339+1
  5234  0B7B  0852               	movf	POSITION@l_339+1,w
  5235  0B7C  3A80               	xorlw	128
  5236  0B7D  00FF               	movwf	127
  5237  0B7E  3080               	movlw	128
  5238  0B7F  027F               	subwf	127,w
  5239  0B80  1D03               	skipz
  5240  0B81  2B84               	goto	u1995
  5241  0B82  300A               	movlw	10
  5242  0B83  0251               	subwf	POSITION@l_339,w
  5243  0B84                     u1995:	
  5244  0B84  1803               	btfsc	3,0
  5245  0B85  2BB0               	goto	l2625
  5246  0B86                     l2617:	
  5247                           
  5248                           ;Main.c: 189: _delay((unsigned long)((1.25)*(20000000/4000.0)));
  5249  0B86  3009               	movlw	9
  5250  0B87  1283               	bcf	3,5	;RP0=0, select bank0
  5251  0B88  1303               	bcf	3,6	;RP1=0, select bank0
  5252  0B89  00B4               	movwf	??_POSITION+1
  5253  0B8A  301C               	movlw	28
  5254  0B8B  00B3               	movwf	??_POSITION
  5255  0B8C                     u3257:	
  5256  0B8C  0BB3               	decfsz	??_POSITION,f
  5257  0B8D  2B8C               	goto	u3257
  5258  0B8E  0BB4               	decfsz	??_POSITION+1,f
  5259  0B8F  2B8C               	goto	u3257
  5260  0B90  0000               	nop
  5261                           
  5262                           ;Main.c: 190: longi[l] = USARTReadData();
  5263  0B91  160A  118A  221B  120A  158A  	fcall	_USARTReadData
  5264  0B96  1283               	bcf	3,5	;RP0=0, select bank0
  5265  0B97  1303               	bcf	3,6	;RP1=0, select bank0
  5266  0B98  00B3               	movwf	??_POSITION
  5267  0B99  0851               	movf	POSITION@l_339,w
  5268  0B9A  3E36               	addlw	(low (POSITION@longi| 0))& (0+255)
  5269  0B9B  0084               	movwf	4
  5270  0B9C  0833               	movf	??_POSITION,w
  5271  0B9D  1383               	bcf	3,7	;select IRP bank0
  5272  0B9E  0080               	movwf	0
  5273  0B9F  3001               	movlw	1
  5274  0BA0  07D1               	addwf	POSITION@l_339,f
  5275  0BA1  1803               	skipnc
  5276  0BA2  0AD2               	incf	POSITION@l_339+1,f
  5277  0BA3  3000               	movlw	0
  5278  0BA4  07D2               	addwf	POSITION@l_339+1,f
  5279  0BA5  0852               	movf	POSITION@l_339+1,w
  5280  0BA6  3A80               	xorlw	128
  5281  0BA7  00FF               	movwf	127
  5282  0BA8  3080               	movlw	128
  5283  0BA9  027F               	subwf	127,w
  5284  0BAA  1D03               	skipz
  5285  0BAB  2BAE               	goto	u2005
  5286  0BAC  300A               	movlw	10
  5287  0BAD  0251               	subwf	POSITION@l_339,w
  5288  0BAE                     u2005:	
  5289  0BAE  1C03               	skipc
  5290  0BAF  2B86               	goto	l2617
  5291  0BB0                     l2625:	
  5292                           
  5293                           ;Main.c: 192: }
  5294                           ;Main.c: 194: }
  5295                           ;Main.c: 195: if (count == 5) {
  5296  0BB0  3005               	movlw	5
  5297  0BB1  1283               	bcf	3,5	;RP0=0, select bank0
  5298  0BB2  1303               	bcf	3,6	;RP1=0, select bank0
  5299  0BB3  0657               	xorwf	POSITION@count,w
  5300  0BB4  0458               	iorwf	POSITION@count+1,w
  5301  0BB5  1D03               	btfss	3,2
  5302  0BB6  2BCA               	goto	l2631
  5303                           
  5304                           ;Main.c: 196: _delay((unsigned long)((1.25)*(20000000/4000.0)));
  5305  0BB7  3009               	movlw	9
  5306  0BB8  00B4               	movwf	??_POSITION+1
  5307  0BB9  301C               	movlw	28
  5308  0BBA  00B3               	movwf	??_POSITION
  5309  0BBB                     u3267:	
  5310  0BBB  0BB3               	decfsz	??_POSITION,f
  5311  0BBC  2BBB               	goto	u3267
  5312  0BBD  0BB4               	decfsz	??_POSITION+1,f
  5313  0BBE  2BBB               	goto	u3267
  5314  0BBF  0000               	nop
  5315                           
  5316                           ;Main.c: 197: longiEW = USARTReadData();
  5317  0BC0  160A  118A  221B  120A  158A  	fcall	_USARTReadData
  5318  0BC5  1283               	bcf	3,5	;RP0=0, select bank0
  5319  0BC6  1303               	bcf	3,6	;RP1=0, select bank0
  5320  0BC7  00B3               	movwf	??_POSITION
  5321  0BC8  0833               	movf	??_POSITION,w
  5322  0BC9  00CC               	movwf	POSITION@longiEW
  5323  0BCA                     l2631:	
  5324  0BCA  3001               	movlw	1
  5325  0BCB  1283               	bcf	3,5	;RP0=0, select bank0
  5326  0BCC  1303               	bcf	3,6	;RP1=0, select bank0
  5327  0BCD  07CD               	addwf	POSITION@i_337,f
  5328  0BCE  1803               	skipnc
  5329  0BCF  0ACE               	incf	POSITION@i_337+1,f
  5330  0BD0  3000               	movlw	0
  5331  0BD1  07CE               	addwf	POSITION@i_337+1,f
  5332  0BD2  2AF8               	goto	L6
  5333  0BD3                     l2635:	
  5334                           ;Main.c: 214: continue;
  5335                           
  5336                           ;Main.c: 199: }
  5337                           ;Main.c: 200: }
  5338                           ;Main.c: 203: }
  5339                           ;Main.c: 204: }
  5340                           ;Main.c: 205: }
  5341                           ;Main.c: 207: }
  5342                           ;Main.c: 208: }
  5343                           ;Main.c: 209: }
  5344                           ;Main.c: 213: } else {
  5345                           
  5346                           
  5347                           ;Main.c: 216: }
  5348                           ;Main.c: 217: count = 0;
  5349  0BD3  1283               	bcf	3,5	;RP0=0, select bank0
  5350  0BD4  1303               	bcf	3,6	;RP1=0, select bank0
  5351  0BD5  01D7               	clrf	POSITION@count
  5352  0BD6  01D8               	clrf	POSITION@count+1
  5353                           
  5354                           ;Main.c: 218: { LCDGotoXY(0,2); LCDWriteString("Lat :");};
  5355  0BD7  3002               	movlw	2
  5356  0BD8  00B3               	movwf	??_POSITION
  5357  0BD9  0833               	movf	??_POSITION,w
  5358  0BDA  00AC               	movwf	LCDGotoXY@y
  5359  0BDB  3000               	movlw	0
  5360  0BDC  160A  118A  2261  120A  158A  	fcall	_LCDGotoXY
  5361  0BE1  3013               	movlw	low (STR_15| (0+32768))
  5362  0BE2  1283               	bcf	3,5	;RP0=0, select bank0
  5363  0BE3  1303               	bcf	3,6	;RP1=0, select bank0
  5364  0BE4  00AC               	movwf	LCDWriteString@msg
  5365  0BE5  3089               	movlw	high (STR_15| (0+32768))
  5366  0BE6  00AD               	movwf	LCDWriteString@msg+1
  5367  0BE7  120A  158A  21B1  120A  158A  	fcall	_LCDWriteString
  5368                           
  5369                           ;Main.c: 219: { LCDGotoXY(0,3); LCDWriteString("Lon :");};
  5370  0BEC  3003               	movlw	3
  5371  0BED  1283               	bcf	3,5	;RP0=0, select bank0
  5372  0BEE  1303               	bcf	3,6	;RP1=0, select bank0
  5373  0BEF  00B3               	movwf	??_POSITION
  5374  0BF0  0833               	movf	??_POSITION,w
  5375  0BF1  00AC               	movwf	LCDGotoXY@y
  5376  0BF2  3000               	movlw	0
  5377  0BF3  160A  118A  2261  120A  158A  	fcall	_LCDGotoXY
  5378  0BF8  300D               	movlw	low (STR_16| (0+32768))
  5379  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  5380  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  5381  0BFB  00AC               	movwf	LCDWriteString@msg
  5382  0BFC  3089               	movlw	high (STR_16| (0+32768))
  5383  0BFD  00AD               	movwf	LCDWriteString@msg+1
  5384  0BFE  120A  158A  21B1  120A  158A  	fcall	_LCDWriteString
  5385                           
  5386                           ;Main.c: 220: {LCDGotoXY(17,2);LCDWriteChar(latNS);};
  5387  0C03  3002               	movlw	2
  5388  0C04  1283               	bcf	3,5	;RP0=0, select bank0
  5389  0C05  1303               	bcf	3,6	;RP1=0, select bank0
  5390  0C06  00B3               	movwf	??_POSITION
  5391  0C07  0833               	movf	??_POSITION,w
  5392  0C08  00AC               	movwf	LCDGotoXY@y
  5393  0C09  3011               	movlw	17
  5394  0C0A  160A  118A  2261  120A  158A  	fcall	_LCDGotoXY
  5395  0C0F  1283               	bcf	3,5	;RP0=0, select bank0
  5396  0C10  1303               	bcf	3,6	;RP1=0, select bank0
  5397  0C11  084B               	movf	POSITION@latNS,w
  5398  0C12  160A  118A  22B9  120A  158A  	fcall	_LCDWriteChar
  5399                           
  5400                           ;Main.c: 221: {LCDGotoXY(17,3);LCDWriteChar(longiEW);};
  5401  0C17  3003               	movlw	3
  5402  0C18  1283               	bcf	3,5	;RP0=0, select bank0
  5403  0C19  1303               	bcf	3,6	;RP1=0, select bank0
  5404  0C1A  00B3               	movwf	??_POSITION
  5405  0C1B  0833               	movf	??_POSITION,w
  5406  0C1C  00AC               	movwf	LCDGotoXY@y
  5407  0C1D  3011               	movlw	17
  5408  0C1E  160A  118A  2261  120A  158A  	fcall	_LCDGotoXY
  5409  0C23  1283               	bcf	3,5	;RP0=0, select bank0
  5410  0C24  1303               	bcf	3,6	;RP1=0, select bank0
  5411  0C25  084C               	movf	POSITION@longiEW,w
  5412  0C26  160A  118A  22B9  120A  158A  	fcall	_LCDWriteChar
  5413                           
  5414                           ;Main.c: 223: for (int l = 0; l < 9; l++) {
  5415  0C2B  1283               	bcf	3,5	;RP0=0, select bank0
  5416  0C2C  1303               	bcf	3,6	;RP1=0, select bank0
  5417  0C2D  01D3               	clrf	POSITION@l_343
  5418  0C2E  01D4               	clrf	POSITION@l_343+1
  5419  0C2F  0854               	movf	POSITION@l_343+1,w
  5420  0C30  3A80               	xorlw	128
  5421  0C31  00FF               	movwf	127
  5422  0C32  3080               	movlw	128
  5423  0C33  027F               	subwf	127,w
  5424  0C34  1D03               	skipz
  5425  0C35  2C38               	goto	u2035
  5426  0C36  3009               	movlw	9
  5427  0C37  0253               	subwf	POSITION@l_343,w
  5428  0C38                     u2035:	
  5429  0C38  1803               	btfsc	3,0
  5430  0C39  2C66               	goto	l2663
  5431  0C3A                     l2657:	
  5432                           
  5433                           ;Main.c: 224: {LCDGotoXY(l + 5,2);LCDWriteChar(lat[l]);};
  5434  0C3A  3002               	movlw	2
  5435  0C3B  1283               	bcf	3,5	;RP0=0, select bank0
  5436  0C3C  1303               	bcf	3,6	;RP1=0, select bank0
  5437  0C3D  00B3               	movwf	??_POSITION
  5438  0C3E  0833               	movf	??_POSITION,w
  5439  0C3F  00AC               	movwf	LCDGotoXY@y
  5440  0C40  0853               	movf	POSITION@l_343,w
  5441  0C41  3E05               	addlw	5
  5442  0C42  160A  118A  2261  120A  158A  	fcall	_LCDGotoXY
  5443  0C47  1283               	bcf	3,5	;RP0=0, select bank0
  5444  0C48  1303               	bcf	3,6	;RP1=0, select bank0
  5445  0C49  0853               	movf	POSITION@l_343,w
  5446  0C4A  3E40               	addlw	(low (POSITION@lat| 0))& (0+255)
  5447  0C4B  0084               	movwf	4
  5448  0C4C  1383               	bcf	3,7	;select IRP bank0
  5449  0C4D  0800               	movf	0,w
  5450  0C4E  160A  118A  22B9  120A  158A  	fcall	_LCDWriteChar
  5451  0C53  3001               	movlw	1
  5452  0C54  1283               	bcf	3,5	;RP0=0, select bank0
  5453  0C55  1303               	bcf	3,6	;RP1=0, select bank0
  5454  0C56  07D3               	addwf	POSITION@l_343,f
  5455  0C57  1803               	skipnc
  5456  0C58  0AD4               	incf	POSITION@l_343+1,f
  5457  0C59  3000               	movlw	0
  5458  0C5A  07D4               	addwf	POSITION@l_343+1,f
  5459  0C5B  0854               	movf	POSITION@l_343+1,w
  5460  0C5C  3A80               	xorlw	128
  5461  0C5D  00FF               	movwf	127
  5462  0C5E  3080               	movlw	128
  5463  0C5F  027F               	subwf	127,w
  5464  0C60  1D03               	skipz
  5465  0C61  2C64               	goto	u2045
  5466  0C62  3009               	movlw	9
  5467  0C63  0253               	subwf	POSITION@l_343,w
  5468  0C64                     u2045:	
  5469  0C64  1C03               	skipc
  5470  0C65  2C3A               	goto	l2657
  5471  0C66                     l2663:	
  5472                           
  5473                           ;Main.c: 225: }
  5474                           ;Main.c: 226: for (int l = 0; l < 9; l++) {
  5475  0C66  1283               	bcf	3,5	;RP0=0, select bank0
  5476  0C67  1303               	bcf	3,6	;RP1=0, select bank0
  5477  0C68  01D5               	clrf	POSITION@l_344
  5478  0C69  01D6               	clrf	POSITION@l_344+1
  5479  0C6A  0856               	movf	POSITION@l_344+1,w
  5480  0C6B  3A80               	xorlw	128
  5481  0C6C  00FF               	movwf	127
  5482  0C6D  3080               	movlw	128
  5483  0C6E  027F               	subwf	127,w
  5484  0C6F  1D03               	skipz
  5485  0C70  2C73               	goto	u2055
  5486  0C71  3009               	movlw	9
  5487  0C72  0255               	subwf	POSITION@l_344,w
  5488  0C73                     u2055:	
  5489  0C73  1803               	btfsc	3,0
  5490  0C74  2CA1               	goto	l2675
  5491  0C75                     l2669:	
  5492                           
  5493                           ;Main.c: 227: {LCDGotoXY(l + 5,3);LCDWriteChar(longi[l]);};
  5494  0C75  3003               	movlw	3
  5495  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  5496  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  5497  0C78  00B3               	movwf	??_POSITION
  5498  0C79  0833               	movf	??_POSITION,w
  5499  0C7A  00AC               	movwf	LCDGotoXY@y
  5500  0C7B  0855               	movf	POSITION@l_344,w
  5501  0C7C  3E05               	addlw	5
  5502  0C7D  160A  118A  2261  120A  158A  	fcall	_LCDGotoXY
  5503  0C82  1283               	bcf	3,5	;RP0=0, select bank0
  5504  0C83  1303               	bcf	3,6	;RP1=0, select bank0
  5505  0C84  0855               	movf	POSITION@l_344,w
  5506  0C85  3E36               	addlw	(low (POSITION@longi| 0))& (0+255)
  5507  0C86  0084               	movwf	4
  5508  0C87  1383               	bcf	3,7	;select IRP bank0
  5509  0C88  0800               	movf	0,w
  5510  0C89  160A  118A  22B9  120A  158A  	fcall	_LCDWriteChar
  5511  0C8E  3001               	movlw	1
  5512  0C8F  1283               	bcf	3,5	;RP0=0, select bank0
  5513  0C90  1303               	bcf	3,6	;RP1=0, select bank0
  5514  0C91  07D5               	addwf	POSITION@l_344,f
  5515  0C92  1803               	skipnc
  5516  0C93  0AD6               	incf	POSITION@l_344+1,f
  5517  0C94  3000               	movlw	0
  5518  0C95  07D6               	addwf	POSITION@l_344+1,f
  5519  0C96  0856               	movf	POSITION@l_344+1,w
  5520  0C97  3A80               	xorlw	128
  5521  0C98  00FF               	movwf	127
  5522  0C99  3080               	movlw	128
  5523  0C9A  027F               	subwf	127,w
  5524  0C9B  1D03               	skipz
  5525  0C9C  2C9F               	goto	u2065
  5526  0C9D  3009               	movlw	9
  5527  0C9E  0255               	subwf	POSITION@l_344,w
  5528  0C9F                     u2065:	
  5529  0C9F  1C03               	skipc
  5530  0CA0  2C75               	goto	l2669
  5531  0CA1                     l2675:	
  5532                           
  5533                           ;Main.c: 228: }
  5534                           ;Main.c: 231: if ((i % 100) == 0) {
  5535  0CA1  3064               	movlw	100
  5536  0CA2  1283               	bcf	3,5	;RP0=0, select bank0
  5537  0CA3  1303               	bcf	3,6	;RP1=0, select bank0
  5538  0CA4  00A0               	movwf	___awmod@divisor
  5539  0CA5  3000               	movlw	0
  5540  0CA6  00A1               	movwf	___awmod@divisor+1
  5541  0CA7  084A               	movf	POSITION@i+1,w
  5542  0CA8  00A3               	movwf	___awmod@dividend+1
  5543  0CA9  0849               	movf	POSITION@i,w
  5544  0CAA  00A2               	movwf	___awmod@dividend
  5545  0CAB  160A  118A  243E  120A  158A  	fcall	___awmod
  5546  0CB0  1283               	bcf	3,5	;RP0=0, select bank0
  5547  0CB1  1303               	bcf	3,6	;RP1=0, select bank0
  5548  0CB2  0820               	movf	?___awmod,w
  5549  0CB3  0421               	iorwf	?___awmod+1,w
  5550  0CB4  1D03               	btfss	3,2
  5551  0CB5  2A7A               	goto	l2549
  5552                           
  5553                           ;Main.c: 232: _delay((unsigned long)((2000)*(20000000/4000.0)));
  5554  0CB6  3033               	movlw	51
  5555  0CB7  00B5               	movwf	??_POSITION+2
  5556  0CB8  30BC               	movlw	188
  5557  0CB9  00B4               	movwf	??_POSITION+1
  5558  0CBA  3010               	movlw	16
  5559  0CBB  00B3               	movwf	??_POSITION
  5560  0CBC                     u3277:	
  5561  0CBC  0BB3               	decfsz	??_POSITION,f
  5562  0CBD  2CBC               	goto	u3277
  5563  0CBE  0BB4               	decfsz	??_POSITION+1,f
  5564  0CBF  2CBC               	goto	u3277
  5565  0CC0  0BB5               	decfsz	??_POSITION+2,f
  5566  0CC1  2CBC               	goto	u3277
  5567                           
  5568                           ;Main.c: 233: for (int i = 0; i < 10; i++) {
  5569  0CC2  1283               	bcf	3,5	;RP0=0, select bank0
  5570  0CC3  1303               	bcf	3,6	;RP1=0, select bank0
  5571  0CC4  01D9               	clrf	POSITION@i_345
  5572  0CC5  01DA               	clrf	POSITION@i_345+1
  5573  0CC6  085A               	movf	POSITION@i_345+1,w
  5574  0CC7  3A80               	xorlw	128
  5575  0CC8  00FF               	movwf	127
  5576  0CC9  3080               	movlw	128
  5577  0CCA  027F               	subwf	127,w
  5578  0CCB  1D03               	skipz
  5579  0CCC  2CCF               	goto	u2085
  5580  0CCD  300A               	movlw	10
  5581  0CCE  0259               	subwf	POSITION@i_345,w
  5582  0CCF                     u2085:	
  5583  0CCF  1803               	btfsc	3,0
  5584  0CD0  2D09               	goto	l2693
  5585  0CD1                     l2685:	
  5586                           
  5587                           ;Main.c: 234: if (i < 9)
  5588  0CD1  1283               	bcf	3,5	;RP0=0, select bank0
  5589  0CD2  1303               	bcf	3,6	;RP1=0, select bank0
  5590  0CD3  085A               	movf	POSITION@i_345+1,w
  5591  0CD4  3A80               	xorlw	128
  5592  0CD5  00FF               	movwf	127
  5593  0CD6  3080               	movlw	128
  5594  0CD7  027F               	subwf	127,w
  5595  0CD8  1D03               	skipz
  5596  0CD9  2CDC               	goto	u2095
  5597  0CDA  3009               	movlw	9
  5598  0CDB  0259               	subwf	POSITION@i_345,w
  5599  0CDC                     u2095:	
  5600  0CDC  1803               	skipnc
  5601  0CDD  2CEB               	goto	l313
  5602                           
  5603                           ;Main.c: 235: sendLa[i] = lat[i];
  5604  0CDE  1283               	bcf	3,5	;RP0=0, select bank0
  5605  0CDF  1303               	bcf	3,6	;RP1=0, select bank0
  5606  0CE0  0859               	movf	POSITION@i_345,w
  5607  0CE1  3E40               	addlw	(low (POSITION@lat| 0))& (0+255)
  5608  0CE2  0084               	movwf	4
  5609  0CE3  1383               	bcf	3,7	;select IRP bank0
  5610  0CE4  0800               	movf	0,w
  5611  0CE5  00B3               	movwf	??_POSITION
  5612  0CE6  0859               	movf	POSITION@i_345,w
  5613  0CE7  3ED2               	addlw	(low (_sendLa| 0))& (0+255)
  5614  0CE8  0084               	movwf	4
  5615  0CE9  0833               	movf	??_POSITION,w
  5616  0CEA  0080               	movwf	0
  5617  0CEB                     l313:	
  5618                           
  5619                           ;Main.c: 236: sendLo[i] = longi[i];
  5620  0CEB  1283               	bcf	3,5	;RP0=0, select bank0
  5621  0CEC  1303               	bcf	3,6	;RP1=0, select bank0
  5622  0CED  0859               	movf	POSITION@i_345,w
  5623  0CEE  3E36               	addlw	(low (POSITION@longi| 0))& (0+255)
  5624  0CEF  0084               	movwf	4
  5625  0CF0  1383               	bcf	3,7	;select IRP bank0
  5626  0CF1  0800               	movf	0,w
  5627  0CF2  00B3               	movwf	??_POSITION
  5628  0CF3  0859               	movf	POSITION@i_345,w
  5629  0CF4  3EC8               	addlw	(low (_sendLo| 0))& (0+255)
  5630  0CF5  0084               	movwf	4
  5631  0CF6  0833               	movf	??_POSITION,w
  5632  0CF7  0080               	movwf	0
  5633  0CF8  3001               	movlw	1
  5634  0CF9  07D9               	addwf	POSITION@i_345,f
  5635  0CFA  1803               	skipnc
  5636  0CFB  0ADA               	incf	POSITION@i_345+1,f
  5637  0CFC  3000               	movlw	0
  5638  0CFD  07DA               	addwf	POSITION@i_345+1,f
  5639  0CFE  085A               	movf	POSITION@i_345+1,w
  5640  0CFF  3A80               	xorlw	128
  5641  0D00  00FF               	movwf	127
  5642  0D01  3080               	movlw	128
  5643  0D02  027F               	subwf	127,w
  5644  0D03  1D03               	skipz
  5645  0D04  2D07               	goto	u2105
  5646  0D05  300A               	movlw	10
  5647  0D06  0259               	subwf	POSITION@i_345,w
  5648  0D07                     u2105:	
  5649  0D07  1C03               	skipc
  5650  0D08  2CD1               	goto	l2685
  5651  0D09                     l2693:	
  5652                           
  5653                           ;Main.c: 238: }
  5654                           ;Main.c: 240: sendByGPRS();
  5655  0D09  160A  118A  2654   	fcall	_sendByGPRS
  5656                           
  5657                           ;Main.c: 241: break;
  5658  0D0C  0008               	return
  5659  0D0D                     __end_of_POSITION:	
  5660                           
  5661                           	psect	text9
  5662  1654                     __ptext9:	
  5663 ;; *************** function _sendByGPRS *****************
  5664 ;; Defined at:
  5665 ;;		line 74 in file "Main.c"
  5666 ;; Parameters:    Size  Location     Type
  5667 ;;		None
  5668 ;; Auto vars:     Size  Location     Type
  5669 ;;		None
  5670 ;; Return value:  Size  Location     Type
  5671 ;;		None               void
  5672 ;; Registers used:
  5673 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5674 ;; Tracked objects:
  5675 ;;		On entry : 0/0
  5676 ;;		On exit  : 0/0
  5677 ;;		Unchanged: 0/0
  5678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5679 ;;      Params:         0       0       0       0       0
  5680 ;;      Locals:         0       0       0       0       0
  5681 ;;      Temps:          0       3       0       0       0
  5682 ;;      Totals:         0       3       0       0       0
  5683 ;;Total ram usage:        3 bytes
  5684 ;; Hardware stack levels used:    1
  5685 ;; Hardware stack levels required when called:    5
  5686 ;; This function calls:
  5687 ;;		_LCDByte
  5688 ;;		_LCDGotoXY
  5689 ;;		_LCDWriteString
  5690 ;;		_SendByteSerially
  5691 ;;		_SendStringSerially
  5692 ;; This function is called by:
  5693 ;;		_POSITION
  5694 ;; This function uses a non-reentrant model
  5695 ;;
  5696                           
  5697                           
  5698                           ;psect for function _sendByGPRS
  5699  1654                     _sendByGPRS:	
  5700                           
  5701                           ;Main.c: 78: _delay((unsigned long)((1500)*(20000000/4000.0)));
  5702                           
  5703                           ;incstack = 0
  5704                           ; Regs used in _sendByGPRS: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5705  1654  3027               	movlw	39
  5706  1655  1283               	bcf	3,5	;RP0=0, select bank0
  5707  1656  1303               	bcf	3,6	;RP1=0, select bank0
  5708  1657  00B2               	movwf	??_sendByGPRS+2
  5709  1658  300D               	movlw	13
  5710  1659  00B1               	movwf	??_sendByGPRS+1
  5711  165A  304B               	movlw	75
  5712  165B  00B0               	movwf	??_sendByGPRS
  5713  165C                     u3287:	
  5714  165C  0BB0               	decfsz	??_sendByGPRS,f
  5715  165D  2E5C               	goto	u3287
  5716  165E  0BB1               	decfsz	??_sendByGPRS+1,f
  5717  165F  2E5C               	goto	u3287
  5718  1660  0BB2               	decfsz	??_sendByGPRS+2,f
  5719  1661  2E5C               	goto	u3287
  5720  1662  0000               	nop
  5721                           
  5722                           ;Main.c: 82: (LCDByte(0b00000001,0));
  5723  1663  1283               	bcf	3,5	;RP0=0, select bank0
  5724  1664  1303               	bcf	3,6	;RP1=0, select bank0
  5725  1665  01A5               	clrf	LCDByte@isdata
  5726  1666  3001               	movlw	1
  5727  1667  160A  118A  23AF  160A  118A  	fcall	_LCDByte
  5728                           
  5729                           ;Main.c: 83: { LCDGotoXY(0,0); LCDWriteString("Sending Data via");};
  5730  166C  1283               	bcf	3,5	;RP0=0, select bank0
  5731  166D  1303               	bcf	3,6	;RP1=0, select bank0
  5732  166E  01AC               	clrf	LCDGotoXY@y
  5733  166F  3000               	movlw	0
  5734  1670  160A  118A  2261  160A  118A  	fcall	_LCDGotoXY
  5735  1675  309C               	movlw	low (STR_1| (0+32768))
  5736  1676  1283               	bcf	3,5	;RP0=0, select bank0
  5737  1677  1303               	bcf	3,6	;RP1=0, select bank0
  5738  1678  00AC               	movwf	LCDWriteString@msg
  5739  1679  3087               	movlw	high (STR_1| (0+32768))
  5740  167A  00AD               	movwf	LCDWriteString@msg+1
  5741  167B  120A  158A  21B1  160A  118A  	fcall	_LCDWriteString
  5742                           
  5743                           ;Main.c: 84: { LCDGotoXY(0,1); LCDWriteString("GPRS.....");};
  5744  1680  1283               	bcf	3,5	;RP0=0, select bank0
  5745  1681  1303               	bcf	3,6	;RP1=0, select bank0
  5746  1682  01AC               	clrf	LCDGotoXY@y
  5747  1683  0AAC               	incf	LCDGotoXY@y,f
  5748  1684  3000               	movlw	0
  5749  1685  160A  118A  2261  160A  118A  	fcall	_LCDGotoXY
  5750  168A  30AA               	movlw	low (STR_2| (0+32768))
  5751  168B  1283               	bcf	3,5	;RP0=0, select bank0
  5752  168C  1303               	bcf	3,6	;RP1=0, select bank0
  5753  168D  00AC               	movwf	LCDWriteString@msg
  5754  168E  3088               	movlw	high (STR_2| (0+32768))
  5755  168F  00AD               	movwf	LCDWriteString@msg+1
  5756  1690  120A  158A  21B1  160A  118A  	fcall	_LCDWriteString
  5757                           
  5758                           ;Main.c: 88: SendStringSerially("AT+CSQ");
  5759  1695  30F9               	movlw	low (STR_3| (0+32768))
  5760  1696  1283               	bcf	3,5	;RP0=0, select bank0
  5761  1697  1303               	bcf	3,6	;RP1=0, select bank0
  5762  1698  00A1               	movwf	SendStringSerially@st
  5763  1699  3088               	movlw	high (STR_3| (0+32768))
  5764  169A  00A2               	movwf	SendStringSerially@st+1
  5765  169B  120A  118A  25DB  160A  118A  	fcall	_SendStringSerially
  5766                           
  5767                           ;Main.c: 89: SendByteSerially((char) 13);
  5768  16A0  300D               	movlw	13
  5769  16A1  160A  118A  21D8  160A  118A  	fcall	_SendByteSerially
  5770                           
  5771                           ;Main.c: 90: _delay((unsigned long)((100)*(20000000/4000.0)));
  5772  16A6  3003               	movlw	3
  5773  16A7  1283               	bcf	3,5	;RP0=0, select bank0
  5774  16A8  1303               	bcf	3,6	;RP1=0, select bank0
  5775  16A9  00B2               	movwf	??_sendByGPRS+2
  5776  16AA  308A               	movlw	138
  5777  16AB  00B1               	movwf	??_sendByGPRS+1
  5778  16AC  3056               	movlw	86
  5779  16AD  00B0               	movwf	??_sendByGPRS
  5780  16AE                     u3297:	
  5781  16AE  0BB0               	decfsz	??_sendByGPRS,f
  5782  16AF  2EAE               	goto	u3297
  5783  16B0  0BB1               	decfsz	??_sendByGPRS+1,f
  5784  16B1  2EAE               	goto	u3297
  5785  16B2  0BB2               	decfsz	??_sendByGPRS+2,f
  5786  16B3  2EAE               	goto	u3297
  5787  16B4  2EB5               	nop2
  5788                           
  5789                           ;Main.c: 92: SendStringSerially("AT+CGATT?");
  5790  16B5  30BE               	movlw	low (STR_4| (0+32768))
  5791  16B6  1283               	bcf	3,5	;RP0=0, select bank0
  5792  16B7  1303               	bcf	3,6	;RP1=0, select bank0
  5793  16B8  00A1               	movwf	SendStringSerially@st
  5794  16B9  3088               	movlw	high (STR_4| (0+32768))
  5795  16BA  00A2               	movwf	SendStringSerially@st+1
  5796  16BB  120A  118A  25DB  160A  118A  	fcall	_SendStringSerially
  5797                           
  5798                           ;Main.c: 93: SendByteSerially((char) 13);
  5799  16C0  300D               	movlw	13
  5800  16C1  160A  118A  21D8  160A  118A  	fcall	_SendByteSerially
  5801                           
  5802                           ;Main.c: 94: _delay((unsigned long)((100)*(20000000/4000.0)));
  5803  16C6  3003               	movlw	3
  5804  16C7  1283               	bcf	3,5	;RP0=0, select bank0
  5805  16C8  1303               	bcf	3,6	;RP1=0, select bank0
  5806  16C9  00B2               	movwf	??_sendByGPRS+2
  5807  16CA  308A               	movlw	138
  5808  16CB  00B1               	movwf	??_sendByGPRS+1
  5809  16CC  3056               	movlw	86
  5810  16CD  00B0               	movwf	??_sendByGPRS
  5811  16CE                     u3307:	
  5812  16CE  0BB0               	decfsz	??_sendByGPRS,f
  5813  16CF  2ECE               	goto	u3307
  5814  16D0  0BB1               	decfsz	??_sendByGPRS+1,f
  5815  16D1  2ECE               	goto	u3307
  5816  16D2  0BB2               	decfsz	??_sendByGPRS+2,f
  5817  16D3  2ECE               	goto	u3307
  5818  16D4  2ED5               	nop2
  5819                           
  5820                           ;Main.c: 96: SendStringSerially("AT+SAPBR=3,1,\"CONTYPE\",\"GPRS\"");
  5821  16D5  3087               	movlw	low (STR_5| (0+32768))
  5822  16D6  1283               	bcf	3,5	;RP0=0, select bank0
  5823  16D7  1303               	bcf	3,6	;RP1=0, select bank0
  5824  16D8  00A1               	movwf	SendStringSerially@st
  5825  16D9  3086               	movlw	high (STR_5| (0+32768))
  5826  16DA  00A2               	movwf	SendStringSerially@st+1
  5827  16DB  120A  118A  25DB  160A  118A  	fcall	_SendStringSerially
  5828                           
  5829                           ;Main.c: 97: SendByteSerially((char) 13);
  5830  16E0  300D               	movlw	13
  5831  16E1  160A  118A  21D8  160A  118A  	fcall	_SendByteSerially
  5832                           
  5833                           ;Main.c: 98: _delay((unsigned long)((1000)*(20000000/4000.0)));
  5834  16E6  301A               	movlw	26
  5835  16E7  1283               	bcf	3,5	;RP0=0, select bank0
  5836  16E8  1303               	bcf	3,6	;RP1=0, select bank0
  5837  16E9  00B2               	movwf	??_sendByGPRS+2
  5838  16EA  305E               	movlw	94
  5839  16EB  00B1               	movwf	??_sendByGPRS+1
  5840  16EC  3086               	movlw	134
  5841  16ED  00B0               	movwf	??_sendByGPRS
  5842  16EE                     u3317:	
  5843  16EE  0BB0               	decfsz	??_sendByGPRS,f
  5844  16EF  2EEE               	goto	u3317
  5845  16F0  0BB1               	decfsz	??_sendByGPRS+1,f
  5846  16F1  2EEE               	goto	u3317
  5847  16F2  0BB2               	decfsz	??_sendByGPRS+2,f
  5848  16F3  2EEE               	goto	u3317
  5849  16F4  0000               	nop
  5850                           
  5851                           ;Main.c: 100: SendStringSerially("AT+SAPBR=3,1,\"APN\",\"CMNET\"");
  5852  16F5  30C1               	movlw	low (STR_6| (0+32768))
  5853  16F6  1283               	bcf	3,5	;RP0=0, select bank0
  5854  16F7  1303               	bcf	3,6	;RP1=0, select bank0
  5855  16F8  00A1               	movwf	SendStringSerially@st
  5856  16F9  3086               	movlw	high (STR_6| (0+32768))
  5857  16FA  00A2               	movwf	SendStringSerially@st+1
  5858  16FB  120A  118A  25DB  160A  118A  	fcall	_SendStringSerially
  5859                           
  5860                           ;Main.c: 101: SendByteSerially((char) 13);
  5861  1700  300D               	movlw	13
  5862  1701  160A  118A  21D8  160A  118A  	fcall	_SendByteSerially
  5863                           
  5864                           ;Main.c: 102: _delay((unsigned long)((4000)*(20000000/4000.0)));
  5865  1706  3066               	movlw	102
  5866  1707  1283               	bcf	3,5	;RP0=0, select bank0
  5867  1708  1303               	bcf	3,6	;RP1=0, select bank0
  5868  1709  00B2               	movwf	??_sendByGPRS+2
  5869  170A  3077               	movlw	119
  5870  170B  00B1               	movwf	??_sendByGPRS+1
  5871  170C  3024               	movlw	36
  5872  170D  00B0               	movwf	??_sendByGPRS
  5873  170E                     u3327:	
  5874  170E  0BB0               	decfsz	??_sendByGPRS,f
  5875  170F  2F0E               	goto	u3327
  5876  1710  0BB1               	decfsz	??_sendByGPRS+1,f
  5877  1711  2F0E               	goto	u3327
  5878  1712  0BB2               	decfsz	??_sendByGPRS+2,f
  5879  1713  2F0E               	goto	u3327
  5880  1714  0000               	nop
  5881                           
  5882                           ;Main.c: 104: SendStringSerially("AT+SAPBR=1,1");
  5883  1715  303B               	movlw	low (STR_7| (0+32768))
  5884  1716  1283               	bcf	3,5	;RP0=0, select bank0
  5885  1717  1303               	bcf	3,6	;RP1=0, select bank0
  5886  1718  00A1               	movwf	SendStringSerially@st
  5887  1719  3088               	movlw	high (STR_7| (0+32768))
  5888  171A  00A2               	movwf	SendStringSerially@st+1
  5889  171B  120A  118A  25DB  160A  118A  	fcall	_SendStringSerially
  5890                           
  5891                           ;Main.c: 105: SendByteSerially((char) 13);
  5892  1720  300D               	movlw	13
  5893  1721  160A  118A  21D8  160A  118A  	fcall	_SendByteSerially
  5894                           
  5895                           ;Main.c: 106: _delay((unsigned long)((2000)*(20000000/4000.0)));
  5896  1726  3033               	movlw	51
  5897  1727  1283               	bcf	3,5	;RP0=0, select bank0
  5898  1728  1303               	bcf	3,6	;RP1=0, select bank0
  5899  1729  00B2               	movwf	??_sendByGPRS+2
  5900  172A  30BC               	movlw	188
  5901  172B  00B1               	movwf	??_sendByGPRS+1
  5902  172C  3010               	movlw	16
  5903  172D  00B0               	movwf	??_sendByGPRS
  5904  172E                     u3337:	
  5905  172E  0BB0               	decfsz	??_sendByGPRS,f
  5906  172F  2F2E               	goto	u3337
  5907  1730  0BB1               	decfsz	??_sendByGPRS+1,f
  5908  1731  2F2E               	goto	u3337
  5909  1732  0BB2               	decfsz	??_sendByGPRS+2,f
  5910  1733  2F2E               	goto	u3337
  5911                           
  5912                           ;Main.c: 109: SendStringSerially("AT+HTTPINIT");
  5913  1734  307C               	movlw	low (STR_8| (0+32768))
  5914  1735  1283               	bcf	3,5	;RP0=0, select bank0
  5915  1736  1303               	bcf	3,6	;RP1=0, select bank0
  5916  1737  00A1               	movwf	SendStringSerially@st
  5917  1738  3088               	movlw	high (STR_8| (0+32768))
  5918  1739  00A2               	movwf	SendStringSerially@st+1
  5919  173A  120A  118A  25DB  160A  118A  	fcall	_SendStringSerially
  5920                           
  5921                           ;Main.c: 110: SendByteSerially((char) 13);
  5922  173F  300D               	movlw	13
  5923  1740  160A  118A  21D8  160A  118A  	fcall	_SendByteSerially
  5924                           
  5925                           ;Main.c: 111: _delay((unsigned long)((2000)*(20000000/4000.0)));
  5926  1745  3033               	movlw	51
  5927  1746  1283               	bcf	3,5	;RP0=0, select bank0
  5928  1747  1303               	bcf	3,6	;RP1=0, select bank0
  5929  1748  00B2               	movwf	??_sendByGPRS+2
  5930  1749  30BC               	movlw	188
  5931  174A  00B1               	movwf	??_sendByGPRS+1
  5932  174B  3010               	movlw	16
  5933  174C  00B0               	movwf	??_sendByGPRS
  5934  174D                     u3347:	
  5935  174D  0BB0               	decfsz	??_sendByGPRS,f
  5936  174E  2F4D               	goto	u3347
  5937  174F  0BB1               	decfsz	??_sendByGPRS+1,f
  5938  1750  2F4D               	goto	u3347
  5939  1751  0BB2               	decfsz	??_sendByGPRS+2,f
  5940  1752  2F4D               	goto	u3347
  5941                           
  5942                           ;Main.c: 116: SendStringSerially("AT+HTTPPARA=\"URL\",\"http://192.248.12.9/~s144186/tes
      +                          t.php?speed=");
  5943  1753  3000               	movlw	low (STR_9| (0+32768))
  5944  1754  1283               	bcf	3,5	;RP0=0, select bank0
  5945  1755  1303               	bcf	3,6	;RP1=0, select bank0
  5946  1756  00A1               	movwf	SendStringSerially@st
  5947  1757  3086               	movlw	high (STR_9| (0+32768))
  5948  1758  00A2               	movwf	SendStringSerially@st+1
  5949  1759  120A  118A  25DB  160A  118A  	fcall	_SendStringSerially
  5950                           
  5951                           ;Main.c: 117: SendStringSerially(sendS);
  5952  175E  30DB               	movlw	(low (_sendS| 0))& (0+255)
  5953  175F  1283               	bcf	3,5	;RP0=0, select bank0
  5954  1760  1303               	bcf	3,6	;RP1=0, select bank0
  5955  1761  00A1               	movwf	SendStringSerially@st
  5956  1762  3000               	movlw	0
  5957  1763  00A2               	movwf	SendStringSerially@st+1
  5958  1764  120A  118A  25DB  160A  118A  	fcall	_SendStringSerially
  5959                           
  5960                           ;Main.c: 118: SendStringSerially("&lata=");
  5961  1769  30F2               	movlw	low (STR_10| (0+32768))
  5962  176A  1283               	bcf	3,5	;RP0=0, select bank0
  5963  176B  1303               	bcf	3,6	;RP1=0, select bank0
  5964  176C  00A1               	movwf	SendStringSerially@st
  5965  176D  3088               	movlw	high (STR_10| (0+32768))
  5966  176E  00A2               	movwf	SendStringSerially@st+1
  5967  176F  120A  118A  25DB  160A  118A  	fcall	_SendStringSerially
  5968                           
  5969                           ;Main.c: 119: SendStringSerially(sendLa);
  5970  1774  30D2               	movlw	(low (_sendLa| 0))& (0+255)
  5971  1775  1283               	bcf	3,5	;RP0=0, select bank0
  5972  1776  1303               	bcf	3,6	;RP1=0, select bank0
  5973  1777  00A1               	movwf	SendStringSerially@st
  5974  1778  3000               	movlw	0
  5975  1779  00A2               	movwf	SendStringSerially@st+1
  5976  177A  120A  118A  25DB  160A  118A  	fcall	_SendStringSerially
  5977                           
  5978                           ;Main.c: 120: SendStringSerially("&longa=");
  5979  177F  30D2               	movlw	low (STR_11| (0+32768))
  5980  1780  1283               	bcf	3,5	;RP0=0, select bank0
  5981  1781  1303               	bcf	3,6	;RP1=0, select bank0
  5982  1782  00A1               	movwf	SendStringSerially@st
  5983  1783  3088               	movlw	high (STR_11| (0+32768))
  5984  1784  00A2               	movwf	SendStringSerially@st+1
  5985  1785  120A  118A  25DB  160A  118A  	fcall	_SendStringSerially
  5986                           
  5987                           ;Main.c: 121: SendStringSerially(sendLo);
  5988  178A  30C8               	movlw	(low (_sendLo| 0))& (0+255)
  5989  178B  1283               	bcf	3,5	;RP0=0, select bank0
  5990  178C  1303               	bcf	3,6	;RP1=0, select bank0
  5991  178D  00A1               	movwf	SendStringSerially@st
  5992  178E  3000               	movlw	0
  5993  178F  00A2               	movwf	SendStringSerially@st+1
  5994  1790  120A  118A  25DB  160A  118A  	fcall	_SendStringSerially
  5995                           
  5996                           ;Main.c: 122: SendStringSerially("\"");
  5997  1795  30A3               	movlw	low ((STR_5+28)| (0+32768))
  5998  1796  1283               	bcf	3,5	;RP0=0, select bank0
  5999  1797  1303               	bcf	3,6	;RP1=0, select bank0
  6000  1798  00A1               	movwf	SendStringSerially@st
  6001  1799  3086               	movlw	high ((STR_5+28)| (0+32768))
  6002  179A  00A2               	movwf	SendStringSerially@st+1
  6003  179B  120A  118A  25DB  160A  118A  	fcall	_SendStringSerially
  6004                           
  6005                           ;Main.c: 124: SendByteSerially((char) 13);
  6006  17A0  300D               	movlw	13
  6007  17A1  160A  118A  21D8  160A  118A  	fcall	_SendByteSerially
  6008                           
  6009                           ;Main.c: 125: _delay((unsigned long)((2000)*(20000000/4000.0)));
  6010  17A6  3033               	movlw	51
  6011  17A7  1283               	bcf	3,5	;RP0=0, select bank0
  6012  17A8  1303               	bcf	3,6	;RP1=0, select bank0
  6013  17A9  00B2               	movwf	??_sendByGPRS+2
  6014  17AA  30BC               	movlw	188
  6015  17AB  00B1               	movwf	??_sendByGPRS+1
  6016  17AC  3010               	movlw	16
  6017  17AD  00B0               	movwf	??_sendByGPRS
  6018  17AE                     u3357:	
  6019  17AE  0BB0               	decfsz	??_sendByGPRS,f
  6020  17AF  2FAE               	goto	u3357
  6021  17B0  0BB1               	decfsz	??_sendByGPRS+1,f
  6022  17B1  2FAE               	goto	u3357
  6023  17B2  0BB2               	decfsz	??_sendByGPRS+2,f
  6024  17B3  2FAE               	goto	u3357
  6025                           
  6026                           ;Main.c: 127: SendStringSerially("AT+HTTPACTION=0");
  6027  17B4  30BE               	movlw	low (STR_13| (0+32768))
  6028  17B5  1283               	bcf	3,5	;RP0=0, select bank0
  6029  17B6  1303               	bcf	3,6	;RP1=0, select bank0
  6030  17B7  00A1               	movwf	SendStringSerially@st
  6031  17B8  3087               	movlw	high (STR_13| (0+32768))
  6032  17B9  00A2               	movwf	SendStringSerially@st+1
  6033  17BA  120A  118A  25DB  160A  118A  	fcall	_SendStringSerially
  6034                           
  6035                           ;Main.c: 128: SendByteSerially((char) 13);
  6036  17BF  300D               	movlw	13
  6037  17C0  160A  118A  21D8  160A  118A  	fcall	_SendByteSerially
  6038                           
  6039                           ;Main.c: 129: _delay((unsigned long)((10000)*(20000000/4000.0)));
  6040  17C5  30FE               	movlw	254
  6041  17C6  1283               	bcf	3,5	;RP0=0, select bank0
  6042  17C7  1303               	bcf	3,6	;RP1=0, select bank0
  6043  17C8  00B2               	movwf	??_sendByGPRS+2
  6044  17C9  30A8               	movlw	168
  6045  17CA  00B1               	movwf	??_sendByGPRS+1
  6046  17CB  3061               	movlw	97
  6047  17CC  00B0               	movwf	??_sendByGPRS
  6048  17CD                     u3367:	
  6049  17CD  0BB0               	decfsz	??_sendByGPRS,f
  6050  17CE  2FCD               	goto	u3367
  6051  17CF  0BB1               	decfsz	??_sendByGPRS+1,f
  6052  17D0  2FCD               	goto	u3367
  6053  17D1  0BB2               	decfsz	??_sendByGPRS+2,f
  6054  17D2  2FCD               	goto	u3367
  6055                           
  6056                           ;Main.c: 131: (LCDByte(0b00000001,0));
  6057  17D3  1283               	bcf	3,5	;RP0=0, select bank0
  6058  17D4  1303               	bcf	3,6	;RP1=0, select bank0
  6059  17D5  01A5               	clrf	LCDByte@isdata
  6060  17D6  3001               	movlw	1
  6061  17D7  160A  118A  23AF  160A  118A  	fcall	_LCDByte
  6062                           
  6063                           ;Main.c: 132: { LCDGotoXY(0,0); LCDWriteString("Sending Over");};
  6064  17DC  1283               	bcf	3,5	;RP0=0, select bank0
  6065  17DD  1303               	bcf	3,6	;RP1=0, select bank0
  6066  17DE  01AC               	clrf	LCDGotoXY@y
  6067  17DF  3000               	movlw	0
  6068  17E0  160A  118A  2261  160A  118A  	fcall	_LCDGotoXY
  6069  17E5  3055               	movlw	low (STR_14| (0+32768))
  6070  17E6  1283               	bcf	3,5	;RP0=0, select bank0
  6071  17E7  1303               	bcf	3,6	;RP1=0, select bank0
  6072  17E8  00AC               	movwf	LCDWriteString@msg
  6073  17E9  3088               	movlw	high (STR_14| (0+32768))
  6074  17EA  00AD               	movwf	LCDWriteString@msg+1
  6075  17EB  120A  158A  21B1  160A  118A  	fcall	_LCDWriteString
  6076                           
  6077                           ;Main.c: 133: _delay((unsigned long)((1000)*(20000000/4000.0)));
  6078  17F0  301A               	movlw	26
  6079  17F1  1283               	bcf	3,5	;RP0=0, select bank0
  6080  17F2  1303               	bcf	3,6	;RP1=0, select bank0
  6081  17F3  00B2               	movwf	??_sendByGPRS+2
  6082  17F4  305E               	movlw	94
  6083  17F5  00B1               	movwf	??_sendByGPRS+1
  6084  17F6  3086               	movlw	134
  6085  17F7  00B0               	movwf	??_sendByGPRS
  6086  17F8                     u3377:	
  6087  17F8  0BB0               	decfsz	??_sendByGPRS,f
  6088  17F9  2FF8               	goto	u3377
  6089  17FA  0BB1               	decfsz	??_sendByGPRS+1,f
  6090  17FB  2FF8               	goto	u3377
  6091  17FC  0BB2               	decfsz	??_sendByGPRS+2,f
  6092  17FD  2FF8               	goto	u3377
  6093  17FE  0000               	nop
  6094  17FF  0008               	return
  6095  1800                     __end_of_sendByGPRS:	
  6096                           
  6097                           	psect	text10
  6098  05DB                     __ptext10:	
  6099 ;; *************** function _SendStringSerially *****************
  6100 ;; Defined at:
  6101 ;;		line 69 in file "Main.c"
  6102 ;; Parameters:    Size  Location     Type
  6103 ;;  st              2    1[BANK0 ] PTR const unsigned char 
  6104 ;;		 -> STR_39(28), STR_38(24), STR_37(10), STR_32(36), 
  6105 ;;		 -> STR_31(24), STR_30(10), STR_25(35), STR_24(24), 
  6106 ;;		 -> STR_23(10), STR_13(16), STR_12(2), sendLo(10), 
  6107 ;;		 -> STR_11(8), sendLa(9), STR_10(7), sendS(7), 
  6108 ;;		 -> STR_9(64), STR_8(12), STR_7(13), STR_6(27), 
  6109 ;;		 -> STR_5(30), STR_4(10), STR_3(7), 
  6110 ;; Auto vars:     Size  Location     Type
  6111 ;;		None
  6112 ;; Return value:  Size  Location     Type
  6113 ;;		None               void
  6114 ;; Registers used:
  6115 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6116 ;; Tracked objects:
  6117 ;;		On entry : 0/0
  6118 ;;		On exit  : 0/0
  6119 ;;		Unchanged: 0/0
  6120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6121 ;;      Params:         0       2       0       0       0
  6122 ;;      Locals:         0       0       0       0       0
  6123 ;;      Temps:          0       0       0       0       0
  6124 ;;      Totals:         0       2       0       0       0
  6125 ;;Total ram usage:        2 bytes
  6126 ;; Hardware stack levels used:    1
  6127 ;; Hardware stack levels required when called:    3
  6128 ;; This function calls:
  6129 ;;		_SendByteSerially
  6130 ;; This function is called by:
  6131 ;;		_sendByGPRS
  6132 ;;		_SPEED
  6133 ;;		_fireIndiSend
  6134 ;; This function uses a non-reentrant model
  6135 ;;
  6136                           
  6137                           
  6138                           ;psect for function _SendStringSerially
  6139  05DB                     _SendStringSerially:	
  6140  05DB                     l2279:	
  6141                           ;Main.c: 70: while (*st)
  6142                           
  6143                           ;incstack = 0
  6144                           ; Regs used in _SendStringSerially: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6145                           
  6146  05DB  1283               	bcf	3,5	;RP0=0, select bank0
  6147  05DC  1303               	bcf	3,6	;RP1=0, select bank0
  6148  05DD  0822               	movf	SendStringSerially@st+1,w
  6149  05DE  00FF               	movwf	127
  6150  05DF  0821               	movf	SendStringSerially@st,w
  6151  05E0  0084               	movwf	4
  6152  05E1  120A  158A  2141  120A  118A  	fcall	stringtab
  6153  05E6  3A00               	xorlw	0
  6154  05E7  1903               	btfsc	3,2
  6155  05E8  0008               	return
  6156                           
  6157                           ;Main.c: 71: SendByteSerially(*st++);
  6158  05E9  1283               	bcf	3,5	;RP0=0, select bank0
  6159  05EA  1303               	bcf	3,6	;RP1=0, select bank0
  6160  05EB  0822               	movf	SendStringSerially@st+1,w
  6161  05EC  00FF               	movwf	127
  6162  05ED  0821               	movf	SendStringSerially@st,w
  6163  05EE  0084               	movwf	4
  6164  05EF  120A  158A  2141  120A  118A  	fcall	stringtab
  6165  05F4  160A  118A  21D8  120A  118A  	fcall	_SendByteSerially
  6166  05F9  3001               	movlw	1
  6167  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  6168  05FB  1303               	bcf	3,6	;RP1=0, select bank0
  6169  05FC  07A1               	addwf	SendStringSerially@st,f
  6170  05FD  1803               	skipnc
  6171  05FE  0AA2               	incf	SendStringSerially@st+1,f
  6172  05FF  2DDB               	goto	l2279
  6173  0600                     __end_of_SendStringSerially:	
  6174                           
  6175                           	psect	text11
  6176  11D8                     __ptext11:	
  6177 ;; *************** function _SendByteSerially *****************
  6178 ;; Defined at:
  6179 ;;		line 63 in file "Main.c"
  6180 ;; Parameters:    Size  Location     Type
  6181 ;;  Byte            1    wreg     unsigned char 
  6182 ;; Auto vars:     Size  Location     Type
  6183 ;;  Byte            1    0[BANK0 ] unsigned char 
  6184 ;; Return value:  Size  Location     Type
  6185 ;;		None               void
  6186 ;; Registers used:
  6187 ;;		wreg
  6188 ;; Tracked objects:
  6189 ;;		On entry : 0/0
  6190 ;;		On exit  : 0/0
  6191 ;;		Unchanged: 0/0
  6192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6193 ;;      Params:         0       0       0       0       0
  6194 ;;      Locals:         0       1       0       0       0
  6195 ;;      Temps:          0       0       0       0       0
  6196 ;;      Totals:         0       1       0       0       0
  6197 ;;Total ram usage:        1 bytes
  6198 ;; Hardware stack levels used:    1
  6199 ;; Hardware stack levels required when called:    2
  6200 ;; This function calls:
  6201 ;;		Nothing
  6202 ;; This function is called by:
  6203 ;;		_SendStringSerially
  6204 ;;		_sendByGPRS
  6205 ;;		_SPEED
  6206 ;;		_fireIndiSend
  6207 ;; This function uses a non-reentrant model
  6208 ;;
  6209                           
  6210                           
  6211                           ;psect for function _SendByteSerially
  6212  11D8                     _SendByteSerially:	
  6213                           
  6214                           ;incstack = 0
  6215                           ; Regs used in _SendByteSerially: [wreg]
  6216                           ;SendByteSerially@Byte stored from wreg
  6217  11D8  1283               	bcf	3,5	;RP0=0, select bank0
  6218  11D9  1303               	bcf	3,6	;RP1=0, select bank0
  6219  11DA  00A0               	movwf	SendByteSerially@Byte
  6220  11DB                     l271:	
  6221                           ;Main.c: 65: while (!TXIF);
  6222                           
  6223  11DB  1E0C               	btfss	12,4	;volatile
  6224  11DC  29DB               	goto	l271
  6225                           
  6226                           ;Main.c: 66: TXREG = Byte;
  6227  11DD  0820               	movf	SendByteSerially@Byte,w
  6228  11DE  0099               	movwf	25	;volatile
  6229  11DF  0008               	return
  6230  11E0                     __end_of_SendByteSerially:	
  6231                           
  6232                           	psect	text12
  6233  09B1                     __ptext12:	
  6234 ;; *************** function _LCDWriteString *****************
  6235 ;; Defined at:
  6236 ;;		line 251 in file "lcd_hd44780_pic16.c"
  6237 ;; Parameters:    Size  Location     Type
  6238 ;;  msg             2   12[BANK0 ] PTR const unsigned char 
  6239 ;;		 -> STR_63(8), STR_62(4), STR_61(18), STR_60(7), 
  6240 ;;		 -> STR_59(19), STR_58(3), STR_57(18), STR_56(10), 
  6241 ;;		 -> STR_55(16), STR_54(8), STR_53(6), STR_52(20), 
  6242 ;;		 -> STR_51(6), STR_50(19), STR_49(12), STR_48(15), 
  6243 ;;		 -> STR_47(11), STR_46(11), STR_45(3), STR_44(8), 
  6244 ;;		 -> STR_43(13), STR_42(16), STR_41(20), STR_40(13), 
  6245 ;;		 -> STR_36(6), STR_35(13), STR_34(16), STR_33(17), 
  6246 ;;		 -> STR_29(6), STR_28(19), STR_27(16), STR_26(17), 
  6247 ;;		 -> STR_22(14), STR_21(16), STR_20(18), STR_19(6), 
  6248 ;;		 -> STR_18(6), STR_17(6), STR_16(6), STR_15(6), 
  6249 ;;		 -> STR_14(13), STR_2(10), STR_1(17), 
  6250 ;; Auto vars:     Size  Location     Type
  6251 ;;  cc              1   15[BANK0 ] char 
  6252 ;; Return value:  Size  Location     Type
  6253 ;;		None               void
  6254 ;; Registers used:
  6255 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6256 ;; Tracked objects:
  6257 ;;		On entry : 0/0
  6258 ;;		On exit  : 0/0
  6259 ;;		Unchanged: 0/0
  6260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6261 ;;      Params:         0       2       0       0       0
  6262 ;;      Locals:         0       1       0       0       0
  6263 ;;      Temps:          0       1       0       0       0
  6264 ;;      Totals:         0       4       0       0       0
  6265 ;;Total ram usage:        4 bytes
  6266 ;; Hardware stack levels used:    1
  6267 ;; Hardware stack levels required when called:    4
  6268 ;; This function calls:
  6269 ;;		_LCDByte
  6270 ;; This function is called by:
  6271 ;;		_sendByGPRS
  6272 ;;		_POSITION
  6273 ;;		_SPEED
  6274 ;;		_fireIndiSend
  6275 ;;		_main
  6276 ;; This function uses a non-reentrant model
  6277 ;;
  6278                           
  6279                           
  6280                           ;psect for function _LCDWriteString
  6281  09B1                     _LCDWriteString:	
  6282  09B1                     l2257:	
  6283                           ;lcd_hd44780_pic16.c: 281: while(*msg!='\0')
  6284                           
  6285                           ;incstack = 0
  6286                           ; Regs used in _LCDWriteString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6287                           
  6288  09B1  1283               	bcf	3,5	;RP0=0, select bank0
  6289  09B2  1303               	bcf	3,6	;RP1=0, select bank0
  6290  09B3  082D               	movf	LCDWriteString@msg+1,w
  6291  09B4  00FF               	movwf	127
  6292  09B5  082C               	movf	LCDWriteString@msg,w
  6293  09B6  0084               	movwf	4
  6294  09B7  120A  158A  2141  120A  158A  	fcall	stringtab
  6295  09BC  3A00               	xorlw	0
  6296  09BD  1903               	btfsc	3,2
  6297  09BE  0008               	return
  6298                           
  6299                           ;lcd_hd44780_pic16.c: 282: {
  6300                           ;lcd_hd44780_pic16.c: 284: if(*msg=='%')
  6301  09BF  1283               	bcf	3,5	;RP0=0, select bank0
  6302  09C0  1303               	bcf	3,6	;RP1=0, select bank0
  6303  09C1  082D               	movf	LCDWriteString@msg+1,w
  6304  09C2  00FF               	movwf	127
  6305  09C3  082C               	movf	LCDWriteString@msg,w
  6306  09C4  0084               	movwf	4
  6307  09C5  120A  158A  2141  120A  158A  	fcall	stringtab
  6308  09CA  3A25               	xorlw	37
  6309  09CB  1D03               	skipz
  6310  09CC  29F3               	goto	l2253
  6311                           
  6312                           ;lcd_hd44780_pic16.c: 285: {
  6313                           ;lcd_hd44780_pic16.c: 286: msg++;
  6314  09CD  3001               	movlw	1
  6315  09CE  07AC               	addwf	LCDWriteString@msg,f
  6316  09CF  1803               	skipnc
  6317  09D0  0AAD               	incf	LCDWriteString@msg+1,f
  6318                           
  6319                           ;lcd_hd44780_pic16.c: 287: int8_t cc=*msg-'0';
  6320  09D1  082D               	movf	LCDWriteString@msg+1,w
  6321  09D2  00FF               	movwf	127
  6322  09D3  082C               	movf	LCDWriteString@msg,w
  6323  09D4  0084               	movwf	4
  6324  09D5  120A  158A  2141  120A  158A  	fcall	stringtab
  6325  09DA  3ED0               	addlw	-48
  6326  09DB  00AE               	movwf	??_LCDWriteString
  6327  09DC  082E               	movf	??_LCDWriteString,w
  6328  09DD  00AF               	movwf	LCDWriteString@cc
  6329                           
  6330                           ;lcd_hd44780_pic16.c: 289: if(cc>=0 && cc<=7)
  6331  09DE  1BAF               	btfsc	LCDWriteString@cc,7
  6332  09DF  29E9               	goto	l2249
  6333  09E0  082F               	movf	LCDWriteString@cc,w
  6334  09E1  3A80               	xorlw	128
  6335  09E2  3E78               	addlw	-136
  6336  09E3  1803               	skipnc
  6337  09E4  29E9               	goto	l2249
  6338                           
  6339                           ;lcd_hd44780_pic16.c: 290: {
  6340                           ;lcd_hd44780_pic16.c: 291: (LCDByte(cc,1));
  6341  09E5  01A5               	clrf	LCDByte@isdata
  6342  09E6  0AA5               	incf	LCDByte@isdata,f
  6343  09E7  082F               	movf	LCDWriteString@cc,w
  6344  09E8  2A00               	goto	L7
  6345  09E9                     l2249:	
  6346                           ;lcd_hd44780_pic16.c: 292: }
  6347                           
  6348                           
  6349                           ;lcd_hd44780_pic16.c: 293: else
  6350                           ;lcd_hd44780_pic16.c: 294: {
  6351                           ;lcd_hd44780_pic16.c: 295: (LCDByte('%',1));
  6352  09E9  1283               	bcf	3,5	;RP0=0, select bank0
  6353  09EA  1303               	bcf	3,6	;RP1=0, select bank0
  6354  09EB  01A5               	clrf	LCDByte@isdata
  6355  09EC  0AA5               	incf	LCDByte@isdata,f
  6356  09ED  3025               	movlw	37
  6357  09EE  160A  118A  23AF  120A  158A  	fcall	_LCDByte
  6358  09F3                     l2253:	
  6359                           ;lcd_hd44780_pic16.c: 297: }
  6360                           ;lcd_hd44780_pic16.c: 298: }
  6361                           
  6362                           ;lcd_hd44780_pic16.c: 296: (LCDByte(*msg,1));
  6363                           
  6364                           
  6365                           ;lcd_hd44780_pic16.c: 299: else
  6366                           ;lcd_hd44780_pic16.c: 300: {
  6367                           ;lcd_hd44780_pic16.c: 301: (LCDByte(*msg,1));
  6368  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  6369  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  6370  09F5  01A5               	clrf	LCDByte@isdata
  6371  09F6  0AA5               	incf	LCDByte@isdata,f
  6372  09F7  082D               	movf	LCDWriteString@msg+1,w
  6373  09F8  00FF               	movwf	127
  6374  09F9  082C               	movf	LCDWriteString@msg,w
  6375  09FA  0084               	movwf	4
  6376  09FB  120A  158A  2141  120A  158A  	fcall	stringtab
  6377  0A00                     L7:	
  6378  0A00  160A  118A  23AF  120A  158A  	fcall	_LCDByte
  6379                           
  6380                           ;lcd_hd44780_pic16.c: 302: }
  6381                           ;lcd_hd44780_pic16.c: 303: msg++;
  6382  0A05  3001               	movlw	1
  6383  0A06  1283               	bcf	3,5	;RP0=0, select bank0
  6384  0A07  1303               	bcf	3,6	;RP1=0, select bank0
  6385  0A08  07AC               	addwf	LCDWriteString@msg,f
  6386  0A09  1803               	skipnc
  6387  0A0A  0AAD               	incf	LCDWriteString@msg+1,f
  6388  0A0B  29B1               	goto	l2257
  6389  0A0C                     __end_of_LCDWriteString:	
  6390                           
  6391                           	psect	text13
  6392  1261                     __ptext13:	
  6393 ;; *************** function _LCDGotoXY *****************
  6394 ;; Defined at:
  6395 ;;		line 352 in file "lcd_hd44780_pic16.c"
  6396 ;; Parameters:    Size  Location     Type
  6397 ;;  x               1    wreg     unsigned char 
  6398 ;;  y               1   12[BANK0 ] unsigned char 
  6399 ;; Auto vars:     Size  Location     Type
  6400 ;;  x               1   14[BANK0 ] unsigned char 
  6401 ;; Return value:  Size  Location     Type
  6402 ;;		None               void
  6403 ;; Registers used:
  6404 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6405 ;; Tracked objects:
  6406 ;;		On entry : 0/0
  6407 ;;		On exit  : 0/0
  6408 ;;		Unchanged: 0/0
  6409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6410 ;;      Params:         0       1       0       0       0
  6411 ;;      Locals:         0       1       0       0       0
  6412 ;;      Temps:          0       1       0       0       0
  6413 ;;      Totals:         0       3       0       0       0
  6414 ;;Total ram usage:        3 bytes
  6415 ;; Hardware stack levels used:    1
  6416 ;; Hardware stack levels required when called:    4
  6417 ;; This function calls:
  6418 ;;		_LCDByte
  6419 ;; This function is called by:
  6420 ;;		_sendByGPRS
  6421 ;;		_POSITION
  6422 ;;		_SPEED
  6423 ;;		_fireIndiSend
  6424 ;;		_main
  6425 ;; This function uses a non-reentrant model
  6426 ;;
  6427                           
  6428                           
  6429                           ;psect for function _LCDGotoXY
  6430  1261                     _LCDGotoXY:	
  6431                           
  6432                           ;incstack = 0
  6433                           ; Regs used in _LCDGotoXY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6434                           ;LCDGotoXY@x stored from wreg
  6435  1261  1283               	bcf	3,5	;RP0=0, select bank0
  6436  1262  1303               	bcf	3,6	;RP1=0, select bank0
  6437  1263  00AE               	movwf	LCDGotoXY@x
  6438                           
  6439                           ;lcd_hd44780_pic16.c: 354: if(x>=20) return;
  6440  1264  3014               	movlw	20
  6441  1265  022E               	subwf	LCDGotoXY@x,w
  6442  1266  1803               	btfsc	3,0
  6443  1267  0008               	return
  6444  1268  2A72               	goto	l2269
  6445  1269                     l67:	
  6446                           ;lcd_hd44780_pic16.c: 362: case 1:
  6447                           
  6448                           ;lcd_hd44780_pic16.c: 361: break;
  6449                           
  6450                           ;lcd_hd44780_pic16.c: 359: {
  6451                           ;lcd_hd44780_pic16.c: 360: case 0:
  6452                           
  6453                           ;lcd_hd44780_pic16.c: 358: switch(y)
  6454                           
  6455                           
  6456                           ;lcd_hd44780_pic16.c: 363: x|=0b01000000;
  6457  1269  172E               	bsf	LCDGotoXY@x,6
  6458                           
  6459                           ;lcd_hd44780_pic16.c: 364: break;
  6460  126A  2A80               	goto	l66
  6461  126B                     l2263:	
  6462                           ;lcd_hd44780_pic16.c: 365: case 2:
  6463                           
  6464                           
  6465                           ;lcd_hd44780_pic16.c: 366: x+=0x14;
  6466  126B  3014               	movlw	20
  6467  126C  2A6E               	goto	L8
  6468  126D                     l2265:	
  6469                           ;lcd_hd44780_pic16.c: 368: case 3:
  6470                           
  6471                           ;lcd_hd44780_pic16.c: 367: break;
  6472                           
  6473                           
  6474                           ;lcd_hd44780_pic16.c: 369: x+=0x54;
  6475  126D  3054               	movlw	84
  6476  126E                     L8:	
  6477  126E  00AD               	movwf	??_LCDGotoXY
  6478  126F  082D               	movf	??_LCDGotoXY,w
  6479  1270  07AE               	addwf	LCDGotoXY@x,f
  6480                           
  6481                           ;lcd_hd44780_pic16.c: 371: }
  6482                           
  6483                           ;lcd_hd44780_pic16.c: 370: break;
  6484  1271  2A80               	goto	l66
  6485  1272                     l2269:	
  6486  1272  082C               	movf	LCDGotoXY@y,w
  6487                           
  6488                           ; Switch size 1, requested type "space"
  6489                           ; Number of cases is 4, Range of values is 0 to 3
  6490                           ; switch strategies available:
  6491                           ; Name         Instructions Cycles
  6492                           ; simple_byte           13     7 (average)
  6493                           ; direct_byte           20     8 (fixed)
  6494                           ; jumptable            260     6 (fixed)
  6495                           ;	Chosen strategy is simple_byte
  6496  1273  3A00               	xorlw	0	; case 0
  6497  1274  1903               	skipnz
  6498  1275  2A80               	goto	l66
  6499  1276  3A01               	xorlw	1	; case 1
  6500  1277  1903               	skipnz
  6501  1278  2A69               	goto	l67
  6502  1279  3A03               	xorlw	3	; case 2
  6503  127A  1903               	skipnz
  6504  127B  2A6B               	goto	l2263
  6505  127C  3A01               	xorlw	1	; case 3
  6506  127D  1903               	skipnz
  6507  127E  2A6D               	goto	l2265
  6508  127F  2A80               	goto	l66
  6509  1280                     l66:	
  6510                           
  6511                           ;lcd_hd44780_pic16.c: 393: x|=0b10000000;
  6512  1280  17AE               	bsf	LCDGotoXY@x,7
  6513                           
  6514                           ;lcd_hd44780_pic16.c: 394: (LCDByte(x,0));
  6515  1281  01A5               	clrf	LCDByte@isdata
  6516  1282  082E               	movf	LCDGotoXY@x,w
  6517  1283  160A  118A  23AF   	fcall	_LCDByte
  6518  1286  0008               	return
  6519  1287                     __end_of_LCDGotoXY:	
  6520                           
  6521                           	psect	text14
  6522  121B                     __ptext14:	
  6523 ;; *************** function _USARTReadData *****************
  6524 ;; Defined at:
  6525 ;;		line 125 in file "usart_pic16.c"
  6526 ;; Parameters:    Size  Location     Type
  6527 ;;		None
  6528 ;; Auto vars:     Size  Location     Type
  6529 ;;  data            1    1[BANK0 ] unsigned char 
  6530 ;; Return value:  Size  Location     Type
  6531 ;;                  1    wreg      unsigned char 
  6532 ;; Registers used:
  6533 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6534 ;; Tracked objects:
  6535 ;;		On entry : 0/0
  6536 ;;		On exit  : 0/0
  6537 ;;		Unchanged: 0/0
  6538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6539 ;;      Params:         0       0       0       0       0
  6540 ;;      Locals:         0       1       0       0       0
  6541 ;;      Temps:          0       1       0       0       0
  6542 ;;      Totals:         0       2       0       0       0
  6543 ;;Total ram usage:        2 bytes
  6544 ;; Hardware stack levels used:    1
  6545 ;; Hardware stack levels required when called:    2
  6546 ;; This function calls:
  6547 ;;		Nothing
  6548 ;; This function is called by:
  6549 ;;		_POSITION
  6550 ;;		_SPEED
  6551 ;;		_USARTReadBuffer
  6552 ;;		_USARTFlushBuffer
  6553 ;; This function uses a non-reentrant model
  6554 ;;
  6555                           
  6556                           
  6557                           ;psect for function _USARTReadData
  6558  121B                     _USARTReadData:	
  6559                           
  6560                           ;usart_pic16.c: 127: char data;
  6561                           ;usart_pic16.c: 130: if(UQFront==-1)
  6562                           
  6563                           ;incstack = 0
  6564                           ; Regs used in _USARTReadData: [wreg-fsr0h+status,2+status,0]
  6565  121B  0A7C               	incf	_UQFront,w	;volatile
  6566  121C  1D03               	btfss	3,2
  6567  121D  2A20               	goto	l2301
  6568                           
  6569                           ;usart_pic16.c: 131: return 0;
  6570  121E  3000               	movlw	0
  6571  121F  0008               	return
  6572  1220                     l2301:	
  6573                           
  6574                           ;usart_pic16.c: 133: data=URBuff[UQFront];
  6575  1220  087C               	movf	_UQFront,w
  6576  1221  3E90               	addlw	(low (_URBuff| (0+256)))& (0+255)
  6577  1222  0084               	movwf	4
  6578  1223  1783               	bsf	3,7	;select IRP bank3
  6579  1224  0800               	movf	0,w
  6580  1225  1283               	bcf	3,5	;RP0=0, select bank0
  6581  1226  1303               	bcf	3,6	;RP1=0, select bank0
  6582  1227  00A0               	movwf	??_USARTReadData
  6583  1228  0820               	movf	??_USARTReadData,w
  6584  1229  00A1               	movwf	USARTReadData@data
  6585                           
  6586                           ;usart_pic16.c: 135: if(UQFront==UQEnd)
  6587  122A  087C               	movf	_UQFront,w	;volatile
  6588  122B  067B               	xorwf	_UQEnd,w	;volatile
  6589  122C  1D03               	skipz
  6590  122D  2A34               	goto	l2307
  6591                           
  6592                           ;usart_pic16.c: 136: {
  6593                           ;usart_pic16.c: 139: UQFront=UQEnd=-1;
  6594  122E  30FF               	movlw	255
  6595  122F  00FB               	movwf	_UQEnd	;volatile
  6596  1230  00A0               	movwf	??_USARTReadData
  6597  1231  0820               	movf	??_USARTReadData,w
  6598  1232  00FC               	movwf	_UQFront	;volatile
  6599                           
  6600                           ;usart_pic16.c: 140: }
  6601  1233  2A3C               	goto	l2311
  6602  1234                     l2307:	
  6603                           
  6604                           ;usart_pic16.c: 141: else
  6605                           ;usart_pic16.c: 142: {
  6606                           ;usart_pic16.c: 143: UQFront++;
  6607  1234  3001               	movlw	1
  6608  1235  00A0               	movwf	??_USARTReadData
  6609  1236  0820               	movf	??_USARTReadData,w
  6610  1237  07FC               	addwf	_UQFront,f	;volatile
  6611                           
  6612                           ;usart_pic16.c: 145: if(UQFront==64)
  6613  1238  3040               	movlw	64
  6614  1239  067C               	xorwf	_UQFront,w	;volatile
  6615  123A  1903               	btfsc	3,2
  6616                           
  6617                           ;usart_pic16.c: 146: UQFront=0;
  6618  123B  01FC               	clrf	_UQFront	;volatile
  6619  123C                     l2311:	
  6620                           
  6621                           ;usart_pic16.c: 147: }
  6622                           ;usart_pic16.c: 149: return data;
  6623  123C  0821               	movf	USARTReadData@data,w
  6624  123D  0008               	return
  6625  123E                     __end_of_USARTReadData:	
  6626                           
  6627                           	psect	text15
  6628  12B9                     __ptext15:	
  6629 ;; *************** function _LCDWriteChar *****************
  6630 ;; Defined at:
  6631 ;;		line 396 in file "lcd_hd44780_pic16.c"
  6632 ;; Parameters:    Size  Location     Type
  6633 ;;  ch              1    wreg     unsigned char 
  6634 ;; Auto vars:     Size  Location     Type
  6635 ;;  ch              1   14[BANK0 ] unsigned char 
  6636 ;;  cc              1   13[BANK0 ] char 
  6637 ;; Return value:  Size  Location     Type
  6638 ;;		None               void
  6639 ;; Registers used:
  6640 ;;		wreg, status,2, status,0, pclath, cstack
  6641 ;; Tracked objects:
  6642 ;;		On entry : 0/0
  6643 ;;		On exit  : 0/0
  6644 ;;		Unchanged: 0/0
  6645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6646 ;;      Params:         0       0       0       0       0
  6647 ;;      Locals:         0       2       0       0       0
  6648 ;;      Temps:          0       1       0       0       0
  6649 ;;      Totals:         0       3       0       0       0
  6650 ;;Total ram usage:        3 bytes
  6651 ;; Hardware stack levels used:    1
  6652 ;; Hardware stack levels required when called:    4
  6653 ;; This function calls:
  6654 ;;		_LCDByte
  6655 ;; This function is called by:
  6656 ;;		_POSITION
  6657 ;;		_SPEED
  6658 ;; This function uses a non-reentrant model
  6659 ;;
  6660                           
  6661                           
  6662                           ;psect for function _LCDWriteChar
  6663  12B9                     _LCDWriteChar:	
  6664                           
  6665                           ;incstack = 0
  6666                           ; Regs used in _LCDWriteChar: [wreg+status,2+status,0+pclath+cstack]
  6667                           ;LCDWriteChar@ch stored from wreg
  6668  12B9  1283               	bcf	3,5	;RP0=0, select bank0
  6669  12BA  1303               	bcf	3,6	;RP1=0, select bank0
  6670  12BB  00AE               	movwf	LCDWriteChar@ch
  6671                           
  6672                           ;lcd_hd44780_pic16.c: 400: if(ch=='%')
  6673  12BC  3025               	movlw	37
  6674  12BD  062E               	xorwf	LCDWriteChar@ch,w
  6675  12BE  1D03               	btfss	3,2
  6676  12BF  2AE6               	goto	l2293
  6677                           
  6678                           ;lcd_hd44780_pic16.c: 401: {
  6679                           ;lcd_hd44780_pic16.c: 403: int8_t cc=ch-'0';
  6680  12C0  082E               	movf	LCDWriteChar@ch,w
  6681  12C1  3ED0               	addlw	-48
  6682  12C2  00AC               	movwf	??_LCDWriteChar
  6683  12C3  082C               	movf	??_LCDWriteChar,w
  6684  12C4  00AD               	movwf	LCDWriteChar@cc
  6685                           
  6686                           ;lcd_hd44780_pic16.c: 405: if(cc>=0 && cc<=7)
  6687  12C5  1BAD               	btfsc	LCDWriteChar@cc,7
  6688  12C6  2AD3               	goto	l2291
  6689  12C7  082D               	movf	LCDWriteChar@cc,w
  6690  12C8  3A80               	xorlw	128
  6691  12C9  3E78               	addlw	-136
  6692  12CA  1803               	skipnc
  6693  12CB  2AD3               	goto	l2291
  6694                           
  6695                           ;lcd_hd44780_pic16.c: 406: {
  6696                           ;lcd_hd44780_pic16.c: 407: (LCDByte(cc,1));
  6697  12CC  01A5               	clrf	LCDByte@isdata
  6698  12CD  0AA5               	incf	LCDByte@isdata,f
  6699  12CE  082D               	movf	LCDWriteChar@cc,w
  6700  12CF  160A  118A  23AF   	fcall	_LCDByte
  6701                           
  6702                           ;lcd_hd44780_pic16.c: 408: }
  6703  12D2  0008               	return
  6704  12D3                     l2291:	
  6705                           
  6706                           ;lcd_hd44780_pic16.c: 409: else
  6707                           ;lcd_hd44780_pic16.c: 410: {
  6708                           ;lcd_hd44780_pic16.c: 411: (LCDByte('%',1));
  6709  12D3  1283               	bcf	3,5	;RP0=0, select bank0
  6710  12D4  1303               	bcf	3,6	;RP1=0, select bank0
  6711  12D5  01A5               	clrf	LCDByte@isdata
  6712  12D6  0AA5               	incf	LCDByte@isdata,f
  6713  12D7  3025               	movlw	37
  6714  12D8  160A  118A  23AF  160A  118A  	fcall	_LCDByte
  6715                           
  6716                           ;lcd_hd44780_pic16.c: 412: (LCDByte(ch,1));
  6717  12DD  1283               	bcf	3,5	;RP0=0, select bank0
  6718  12DE  1303               	bcf	3,6	;RP1=0, select bank0
  6719  12DF  01A5               	clrf	LCDByte@isdata
  6720  12E0  0AA5               	incf	LCDByte@isdata,f
  6721  12E1  082E               	movf	LCDWriteChar@ch,w
  6722  12E2  160A  118A  23AF   	fcall	_LCDByte
  6723                           
  6724                           ;lcd_hd44780_pic16.c: 413: }
  6725                           ;lcd_hd44780_pic16.c: 414: }
  6726  12E5  0008               	return
  6727  12E6                     l2293:	
  6728                           
  6729                           ;lcd_hd44780_pic16.c: 415: else
  6730                           ;lcd_hd44780_pic16.c: 416: {
  6731                           ;lcd_hd44780_pic16.c: 417: (LCDByte(ch,1));
  6732  12E6  1283               	bcf	3,5	;RP0=0, select bank0
  6733  12E7  1303               	bcf	3,6	;RP1=0, select bank0
  6734  12E8  01A5               	clrf	LCDByte@isdata
  6735  12E9  0AA5               	incf	LCDByte@isdata,f
  6736  12EA  082E               	movf	LCDWriteChar@ch,w
  6737  12EB  160A  118A  23AF   	fcall	_LCDByte
  6738  12EE  0008               	return
  6739  12EF                     __end_of_LCDWriteChar:	
  6740                           
  6741                           	psect	text16
  6742  0531                     __ptext16:	
  6743 ;; *************** function _LCDWriteInt *****************
  6744 ;; Defined at:
  6745 ;;		line 307 in file "lcd_hd44780_pic16.c"
  6746 ;; Parameters:    Size  Location     Type
  6747 ;;  val             2   12[BANK0 ] int 
  6748 ;;  field_length    1   14[BANK0 ] char 
  6749 ;; Auto vars:     Size  Location     Type
  6750 ;;  str             5   17[BANK0 ] unsigned char [5]
  6751 ;;  i               2   24[BANK0 ] int 
  6752 ;;  j               2   22[BANK0 ] int 
  6753 ;; Return value:  Size  Location     Type
  6754 ;;		None               void
  6755 ;; Registers used:
  6756 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6757 ;; Tracked objects:
  6758 ;;		On entry : 0/0
  6759 ;;		On exit  : 0/0
  6760 ;;		Unchanged: 0/0
  6761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6762 ;;      Params:         0       3       0       0       0
  6763 ;;      Locals:         0       9       0       0       0
  6764 ;;      Temps:          0       2       0       0       0
  6765 ;;      Totals:         0      14       0       0       0
  6766 ;;Total ram usage:       14 bytes
  6767 ;; Hardware stack levels used:    1
  6768 ;; Hardware stack levels required when called:    4
  6769 ;; This function calls:
  6770 ;;		_LCDByte
  6771 ;;		___awdiv
  6772 ;;		___awmod
  6773 ;; This function is called by:
  6774 ;;		_SPEED
  6775 ;;		_main
  6776 ;; This function uses a non-reentrant model
  6777 ;;
  6778                           
  6779                           
  6780                           ;psect for function _LCDWriteInt
  6781  0531                     _LCDWriteInt:	
  6782                           
  6783                           ;lcd_hd44780_pic16.c: 320: char str[5]={0,0,0,0,0};
  6784                           
  6785                           ;incstack = 0
  6786                           ; Regs used in _LCDWriteInt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6787  0531  3031               	movlw	LCDWriteInt@str& (0+255)
  6788  0532  0084               	movwf	4
  6789  0533  1283               	bcf	3,5	;RP0=0, select bank0
  6790  0534  1303               	bcf	3,6	;RP1=0, select bank0
  6791  0535  0863               	movf	LCDWriteInt@F1171,w
  6792  0536  1383               	bcf	3,7	;select IRP bank0
  6793  0537  0080               	movwf	0
  6794  0538  0A84               	incf	4,f
  6795  0539  0864               	movf	LCDWriteInt@F1171+1,w
  6796  053A  0080               	movwf	0
  6797  053B  0A84               	incf	4,f
  6798  053C  0865               	movf	LCDWriteInt@F1171+2,w
  6799  053D  0080               	movwf	0
  6800  053E  0A84               	incf	4,f
  6801  053F  0866               	movf	LCDWriteInt@F1171+3,w
  6802  0540  0080               	movwf	0
  6803  0541  0A84               	incf	4,f
  6804  0542  0867               	movf	LCDWriteInt@F1171+4,w
  6805  0543  0080               	movwf	0
  6806                           
  6807                           ;lcd_hd44780_pic16.c: 321: int i=4,j=0;
  6808  0544  3004               	movlw	4
  6809  0545  00B8               	movwf	LCDWriteInt@i
  6810  0546  3000               	movlw	0
  6811  0547  00B9               	movwf	LCDWriteInt@i+1
  6812  0548  01B6               	clrf	LCDWriteInt@j
  6813  0549  01B7               	clrf	LCDWriteInt@j+1
  6814                           
  6815                           ;lcd_hd44780_pic16.c: 324: if(val<0)
  6816  054A  1FAD               	btfss	LCDWriteInt@val+1,7
  6817  054B  2D5B               	goto	l2493
  6818                           
  6819                           ;lcd_hd44780_pic16.c: 325: {
  6820                           ;lcd_hd44780_pic16.c: 326: (LCDByte('-',1));
  6821  054C  01A5               	clrf	LCDByte@isdata
  6822  054D  0AA5               	incf	LCDByte@isdata,f
  6823  054E  302D               	movlw	45
  6824  054F  160A  118A  23AF  120A  118A  	fcall	_LCDByte
  6825                           
  6826                           ;lcd_hd44780_pic16.c: 327: val=val*-1;
  6827  0554  1283               	bcf	3,5	;RP0=0, select bank0
  6828  0555  1303               	bcf	3,6	;RP1=0, select bank0
  6829  0556  09AC               	comf	LCDWriteInt@val,f
  6830  0557  09AD               	comf	LCDWriteInt@val+1,f
  6831  0558  0AAC               	incf	LCDWriteInt@val,f
  6832  0559  1903               	skipnz
  6833  055A  0AAD               	incf	LCDWriteInt@val+1,f
  6834  055B                     l2493:	
  6835                           ;lcd_hd44780_pic16.c: 328: }
  6836                           ;lcd_hd44780_pic16.c: 330: while(val)
  6837                           
  6838  055B  082C               	movf	LCDWriteInt@val,w
  6839  055C  042D               	iorwf	LCDWriteInt@val+1,w
  6840  055D  1903               	btfsc	3,2
  6841  055E  2D90               	goto	l2495
  6842                           
  6843                           ;lcd_hd44780_pic16.c: 331: {
  6844                           ;lcd_hd44780_pic16.c: 332: str[i]=val%10;
  6845  055F  300A               	movlw	10
  6846  0560  00A0               	movwf	___awmod@divisor
  6847  0561  3000               	movlw	0
  6848  0562  00A1               	movwf	___awmod@divisor+1
  6849  0563  082D               	movf	LCDWriteInt@val+1,w
  6850  0564  00A3               	movwf	___awmod@dividend+1
  6851  0565  082C               	movf	LCDWriteInt@val,w
  6852  0566  00A2               	movwf	___awmod@dividend
  6853  0567  160A  118A  243E  120A  118A  	fcall	___awmod
  6854  056C  1283               	bcf	3,5	;RP0=0, select bank0
  6855  056D  1303               	bcf	3,6	;RP1=0, select bank0
  6856  056E  0820               	movf	?___awmod,w
  6857  056F  00AF               	movwf	??_LCDWriteInt
  6858  0570  0838               	movf	LCDWriteInt@i,w
  6859  0571  3E31               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  6860  0572  0084               	movwf	4
  6861  0573  082F               	movf	??_LCDWriteInt,w
  6862  0574  1383               	bcf	3,7	;select IRP bank0
  6863  0575  0080               	movwf	0
  6864                           
  6865                           ;lcd_hd44780_pic16.c: 333: val=val/10;
  6866  0576  300A               	movlw	10
  6867  0577  00A0               	movwf	___awdiv@divisor
  6868  0578  3000               	movlw	0
  6869  0579  00A1               	movwf	___awdiv@divisor+1
  6870  057A  082D               	movf	LCDWriteInt@val+1,w
  6871  057B  00A3               	movwf	___awdiv@dividend+1
  6872  057C  082C               	movf	LCDWriteInt@val,w
  6873  057D  00A2               	movwf	___awdiv@dividend
  6874  057E  120A  158A  2156  120A  118A  	fcall	___awdiv
  6875  0583  1283               	bcf	3,5	;RP0=0, select bank0
  6876  0584  1303               	bcf	3,6	;RP1=0, select bank0
  6877  0585  0821               	movf	?___awdiv+1,w
  6878  0586  00AD               	movwf	LCDWriteInt@val+1
  6879  0587  0820               	movf	?___awdiv,w
  6880  0588  00AC               	movwf	LCDWriteInt@val
  6881                           
  6882                           ;lcd_hd44780_pic16.c: 334: i--;
  6883  0589  30FF               	movlw	255
  6884  058A  07B8               	addwf	LCDWriteInt@i,f
  6885  058B  1803               	skipnc
  6886  058C  0AB9               	incf	LCDWriteInt@i+1,f
  6887  058D  30FF               	movlw	255
  6888  058E  07B9               	addwf	LCDWriteInt@i+1,f
  6889  058F  2D5B               	goto	l2493
  6890  0590                     l2495:	
  6891                           
  6892                           ;lcd_hd44780_pic16.c: 335: }
  6893                           ;lcd_hd44780_pic16.c: 336: if(field_length==-1)
  6894  0590  0A2E               	incf	LCDWriteInt@field_length,w
  6895  0591  1903               	btfsc	3,2
  6896  0592  2D9A               	goto	l2501
  6897  0593  2DA2               	goto	l2503
  6898  0594                     l2499:	
  6899                           ;lcd_hd44780_pic16.c: 337: while(str[j]==0) j++;
  6900                           
  6901  0594  3001               	movlw	1
  6902  0595  07B6               	addwf	LCDWriteInt@j,f
  6903  0596  1803               	skipnc
  6904  0597  0AB7               	incf	LCDWriteInt@j+1,f
  6905  0598  3000               	movlw	0
  6906  0599  07B7               	addwf	LCDWriteInt@j+1,f
  6907  059A                     l2501:	
  6908  059A  0836               	movf	LCDWriteInt@j,w
  6909  059B  3E31               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  6910  059C  0084               	movwf	4
  6911  059D  1383               	bcf	3,7	;select IRP bank0
  6912  059E  0800               	movf	0,w
  6913  059F  1D03               	btfss	3,2
  6914  05A0  2DB4               	goto	l2505
  6915  05A1  2D94               	goto	l2499
  6916  05A2                     l2503:	
  6917                           
  6918                           ;lcd_hd44780_pic16.c: 338: else
  6919                           ;lcd_hd44780_pic16.c: 339: j=5-field_length;
  6920  05A2  082E               	movf	LCDWriteInt@field_length,w
  6921  05A3  00AF               	movwf	??_LCDWriteInt
  6922  05A4  01B0               	clrf	??_LCDWriteInt+1
  6923  05A5  1BAF               	btfsc	??_LCDWriteInt,7
  6924  05A6  03B0               	decf	??_LCDWriteInt+1,f
  6925  05A7  09AF               	comf	??_LCDWriteInt,f
  6926  05A8  09B0               	comf	??_LCDWriteInt+1,f
  6927  05A9  0AAF               	incf	??_LCDWriteInt,f
  6928  05AA  1903               	skipnz
  6929  05AB  0AB0               	incf	??_LCDWriteInt+1,f
  6930  05AC  082F               	movf	??_LCDWriteInt,w
  6931  05AD  3E05               	addlw	5
  6932  05AE  00B6               	movwf	LCDWriteInt@j
  6933  05AF  0830               	movf	??_LCDWriteInt+1,w
  6934  05B0  1803               	skipnc
  6935  05B1  3E01               	addlw	1
  6936  05B2  3E00               	addlw	0
  6937  05B3  00B7               	movwf	LCDWriteInt@j+1
  6938  05B4                     l2505:	
  6939                           
  6940                           ;lcd_hd44780_pic16.c: 342: for(i=j;i<5;i++)
  6941  05B4  0837               	movf	LCDWriteInt@j+1,w
  6942  05B5  00B9               	movwf	LCDWriteInt@i+1
  6943  05B6  0836               	movf	LCDWriteInt@j,w
  6944  05B7  00B8               	movwf	LCDWriteInt@i
  6945  05B8                     L9:	
  6946  05B8  0839               	movf	LCDWriteInt@i+1,w
  6947  05B9  3A80               	xorlw	128
  6948  05BA  00FF               	movwf	127
  6949  05BB  3080               	movlw	128
  6950  05BC  027F               	subwf	127,w
  6951  05BD  1D03               	skipz
  6952  05BE  2DC1               	goto	u1845
  6953  05BF  3005               	movlw	5
  6954  05C0  0238               	subwf	LCDWriteInt@i,w
  6955  05C1                     u1845:	
  6956  05C1  1803               	btfsc	3,0
  6957  05C2  0008               	return
  6958                           
  6959                           ;lcd_hd44780_pic16.c: 343: {
  6960                           ;lcd_hd44780_pic16.c: 344: (LCDByte(48+str[i],1));
  6961  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  6962  05C4  1303               	bcf	3,6	;RP1=0, select bank0
  6963  05C5  01A5               	clrf	LCDByte@isdata
  6964  05C6  0AA5               	incf	LCDByte@isdata,f
  6965  05C7  0838               	movf	LCDWriteInt@i,w
  6966  05C8  3E31               	addlw	(low (LCDWriteInt@str| 0))& (0+255)
  6967  05C9  0084               	movwf	4
  6968  05CA  1383               	bcf	3,7	;select IRP bank0
  6969  05CB  0800               	movf	0,w
  6970  05CC  3E30               	addlw	48
  6971  05CD  160A  118A  23AF  120A  118A  	fcall	_LCDByte
  6972  05D2  3001               	movlw	1
  6973  05D3  1283               	bcf	3,5	;RP0=0, select bank0
  6974  05D4  1303               	bcf	3,6	;RP1=0, select bank0
  6975  05D5  07B8               	addwf	LCDWriteInt@i,f
  6976  05D6  1803               	skipnc
  6977  05D7  0AB9               	incf	LCDWriteInt@i+1,f
  6978  05D8  3000               	movlw	0
  6979  05D9  07B9               	addwf	LCDWriteInt@i+1,f
  6980  05DA  2DB8               	goto	L9
  6981  05DB                     __end_of_LCDWriteInt:	
  6982                           
  6983                           	psect	text17
  6984  143E                     __ptext17:	
  6985 ;; *************** function ___awmod *****************
  6986 ;; Defined at:
  6987 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  6988 ;; Parameters:    Size  Location     Type
  6989 ;;  divisor         2    0[BANK0 ] int 
  6990 ;;  dividend        2    2[BANK0 ] int 
  6991 ;; Auto vars:     Size  Location     Type
  6992 ;;  sign            1    6[BANK0 ] unsigned char 
  6993 ;;  counter         1    5[BANK0 ] unsigned char 
  6994 ;; Return value:  Size  Location     Type
  6995 ;;                  2    0[BANK0 ] int 
  6996 ;; Registers used:
  6997 ;;		wreg, status,2, status,0
  6998 ;; Tracked objects:
  6999 ;;		On entry : 0/0
  7000 ;;		On exit  : 0/0
  7001 ;;		Unchanged: 0/0
  7002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7003 ;;      Params:         0       4       0       0       0
  7004 ;;      Locals:         0       2       0       0       0
  7005 ;;      Temps:          0       1       0       0       0
  7006 ;;      Totals:         0       7       0       0       0
  7007 ;;Total ram usage:        7 bytes
  7008 ;; Hardware stack levels used:    1
  7009 ;; Hardware stack levels required when called:    2
  7010 ;; This function calls:
  7011 ;;		Nothing
  7012 ;; This function is called by:
  7013 ;;		_LCDWriteInt
  7014 ;;		_POSITION
  7015 ;;		_SPEED
  7016 ;;		_USARTWriteInt
  7017 ;; This function uses a non-reentrant model
  7018 ;;
  7019                           
  7020                           
  7021                           ;psect for function ___awmod
  7022  143E                     ___awmod:	
  7023                           
  7024                           ;incstack = 0
  7025                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  7026  143E  1283               	bcf	3,5	;RP0=0, select bank0
  7027  143F  1303               	bcf	3,6	;RP1=0, select bank0
  7028  1440  01A6               	clrf	___awmod@sign
  7029  1441  1FA3               	btfss	___awmod@dividend+1,7
  7030  1442  2C4A               	goto	l2445
  7031  1443  09A2               	comf	___awmod@dividend,f
  7032  1444  09A3               	comf	___awmod@dividend+1,f
  7033  1445  0AA2               	incf	___awmod@dividend,f
  7034  1446  1903               	skipnz
  7035  1447  0AA3               	incf	___awmod@dividend+1,f
  7036  1448  01A6               	clrf	___awmod@sign
  7037  1449  0AA6               	incf	___awmod@sign,f
  7038  144A                     l2445:	
  7039  144A  1FA1               	btfss	___awmod@divisor+1,7
  7040  144B  2C51               	goto	l2449
  7041  144C  09A0               	comf	___awmod@divisor,f
  7042  144D  09A1               	comf	___awmod@divisor+1,f
  7043  144E  0AA0               	incf	___awmod@divisor,f
  7044  144F  1903               	skipnz
  7045  1450  0AA1               	incf	___awmod@divisor+1,f
  7046  1451                     l2449:	
  7047  1451  0820               	movf	___awmod@divisor,w
  7048  1452  0421               	iorwf	___awmod@divisor+1,w
  7049  1453  1903               	btfsc	3,2
  7050  1454  2C7E               	goto	l2467
  7051  1455  01A5               	clrf	___awmod@counter
  7052  1456  0AA5               	incf	___awmod@counter,f
  7053  1457                     l2457:	
  7054  1457  1BA1               	btfsc	___awmod@divisor+1,7
  7055  1458  2C65               	goto	l2459
  7056  1459  3001               	movlw	1
  7057  145A                     u1745:	
  7058  145A  1003               	clrc
  7059  145B  0DA0               	rlf	___awmod@divisor,f
  7060  145C  0DA1               	rlf	___awmod@divisor+1,f
  7061  145D  3EFF               	addlw	-1
  7062  145E  1D03               	skipz
  7063  145F  2C5A               	goto	u1745
  7064  1460  3001               	movlw	1
  7065  1461  00A4               	movwf	??___awmod
  7066  1462  0824               	movf	??___awmod,w
  7067  1463  07A5               	addwf	___awmod@counter,f
  7068  1464  2C57               	goto	l2457
  7069  1465                     l2459:	
  7070  1465  0821               	movf	___awmod@divisor+1,w
  7071  1466  0223               	subwf	___awmod@dividend+1,w
  7072  1467  1D03               	skipz
  7073  1468  2C6B               	goto	u1765
  7074  1469  0820               	movf	___awmod@divisor,w
  7075  146A  0222               	subwf	___awmod@dividend,w
  7076  146B                     u1765:	
  7077  146B  1C03               	skipc
  7078  146C  2C73               	goto	l2463
  7079  146D  0820               	movf	___awmod@divisor,w
  7080  146E  02A2               	subwf	___awmod@dividend,f
  7081  146F  0821               	movf	___awmod@divisor+1,w
  7082  1470  1C03               	skipc
  7083  1471  03A3               	decf	___awmod@dividend+1,f
  7084  1472  02A3               	subwf	___awmod@dividend+1,f
  7085  1473                     l2463:	
  7086  1473  3001               	movlw	1
  7087  1474                     u1775:	
  7088  1474  1003               	clrc
  7089  1475  0CA1               	rrf	___awmod@divisor+1,f
  7090  1476  0CA0               	rrf	___awmod@divisor,f
  7091  1477  3EFF               	addlw	-1
  7092  1478  1D03               	skipz
  7093  1479  2C74               	goto	u1775
  7094  147A  3001               	movlw	1
  7095  147B  02A5               	subwf	___awmod@counter,f
  7096  147C  1D03               	btfss	3,2
  7097  147D  2C65               	goto	l2459
  7098  147E                     l2467:	
  7099  147E  0826               	movf	___awmod@sign,w
  7100  147F  1903               	btfsc	3,2
  7101  1480  2C86               	goto	l2471
  7102  1481  09A2               	comf	___awmod@dividend,f
  7103  1482  09A3               	comf	___awmod@dividend+1,f
  7104  1483  0AA2               	incf	___awmod@dividend,f
  7105  1484  1903               	skipnz
  7106  1485  0AA3               	incf	___awmod@dividend+1,f
  7107  1486                     l2471:	
  7108  1486  0823               	movf	___awmod@dividend+1,w
  7109  1487  00A1               	movwf	?___awmod+1
  7110  1488  0822               	movf	___awmod@dividend,w
  7111  1489  00A0               	movwf	?___awmod
  7112  148A  0008               	return
  7113  148B                     __end_of___awmod:	
  7114                           
  7115                           	psect	text18
  7116  0956                     __ptext18:	
  7117 ;; *************** function ___awdiv *****************
  7118 ;; Defined at:
  7119 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  7120 ;; Parameters:    Size  Location     Type
  7121 ;;  divisor         2    0[BANK0 ] int 
  7122 ;;  dividend        2    2[BANK0 ] int 
  7123 ;; Auto vars:     Size  Location     Type
  7124 ;;  quotient        2    7[BANK0 ] int 
  7125 ;;  sign            1    6[BANK0 ] unsigned char 
  7126 ;;  counter         1    5[BANK0 ] unsigned char 
  7127 ;; Return value:  Size  Location     Type
  7128 ;;                  2    0[BANK0 ] int 
  7129 ;; Registers used:
  7130 ;;		wreg, status,2, status,0
  7131 ;; Tracked objects:
  7132 ;;		On entry : 0/0
  7133 ;;		On exit  : 0/0
  7134 ;;		Unchanged: 0/0
  7135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7136 ;;      Params:         0       4       0       0       0
  7137 ;;      Locals:         0       4       0       0       0
  7138 ;;      Temps:          0       1       0       0       0
  7139 ;;      Totals:         0       9       0       0       0
  7140 ;;Total ram usage:        9 bytes
  7141 ;; Hardware stack levels used:    1
  7142 ;; Hardware stack levels required when called:    2
  7143 ;; This function calls:
  7144 ;;		Nothing
  7145 ;; This function is called by:
  7146 ;;		_LCDWriteInt
  7147 ;;		_USARTWriteInt
  7148 ;; This function uses a non-reentrant model
  7149 ;;
  7150                           
  7151                           
  7152                           ;psect for function ___awdiv
  7153  0956                     ___awdiv:	
  7154                           
  7155                           ;incstack = 0
  7156                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7157  0956  1283               	bcf	3,5	;RP0=0, select bank0
  7158  0957  1303               	bcf	3,6	;RP1=0, select bank0
  7159  0958  01A6               	clrf	___awdiv@sign
  7160  0959  1FA1               	btfss	___awdiv@divisor+1,7
  7161  095A  2962               	goto	l2401
  7162  095B  09A0               	comf	___awdiv@divisor,f
  7163  095C  09A1               	comf	___awdiv@divisor+1,f
  7164  095D  0AA0               	incf	___awdiv@divisor,f
  7165  095E  1903               	skipnz
  7166  095F  0AA1               	incf	___awdiv@divisor+1,f
  7167  0960  01A6               	clrf	___awdiv@sign
  7168  0961  0AA6               	incf	___awdiv@sign,f
  7169  0962                     l2401:	
  7170  0962  1FA3               	btfss	___awdiv@dividend+1,7
  7171  0963  296D               	goto	l2407
  7172  0964  09A2               	comf	___awdiv@dividend,f
  7173  0965  09A3               	comf	___awdiv@dividend+1,f
  7174  0966  0AA2               	incf	___awdiv@dividend,f
  7175  0967  1903               	skipnz
  7176  0968  0AA3               	incf	___awdiv@dividend+1,f
  7177  0969  3001               	movlw	1
  7178  096A  00A4               	movwf	??___awdiv
  7179  096B  0824               	movf	??___awdiv,w
  7180  096C  06A6               	xorwf	___awdiv@sign,f
  7181  096D                     l2407:	
  7182  096D  01A7               	clrf	___awdiv@quotient
  7183  096E  01A8               	clrf	___awdiv@quotient+1
  7184  096F  0820               	movf	___awdiv@divisor,w
  7185  0970  0421               	iorwf	___awdiv@divisor+1,w
  7186  0971  1903               	btfsc	3,2
  7187  0972  29A4               	goto	l2429
  7188  0973  01A5               	clrf	___awdiv@counter
  7189  0974  0AA5               	incf	___awdiv@counter,f
  7190  0975                     l2417:	
  7191  0975  1BA1               	btfsc	___awdiv@divisor+1,7
  7192  0976  2983               	goto	l2419
  7193  0977  3001               	movlw	1
  7194  0978                     u1645:	
  7195  0978  1003               	clrc
  7196  0979  0DA0               	rlf	___awdiv@divisor,f
  7197  097A  0DA1               	rlf	___awdiv@divisor+1,f
  7198  097B  3EFF               	addlw	-1
  7199  097C  1D03               	skipz
  7200  097D  2978               	goto	u1645
  7201  097E  3001               	movlw	1
  7202  097F  00A4               	movwf	??___awdiv
  7203  0980  0824               	movf	??___awdiv,w
  7204  0981  07A5               	addwf	___awdiv@counter,f
  7205  0982  2975               	goto	l2417
  7206  0983                     l2419:	
  7207  0983  3001               	movlw	1
  7208  0984                     u1665:	
  7209  0984  1003               	clrc
  7210  0985  0DA7               	rlf	___awdiv@quotient,f
  7211  0986  0DA8               	rlf	___awdiv@quotient+1,f
  7212  0987  3EFF               	addlw	-1
  7213  0988  1D03               	skipz
  7214  0989  2984               	goto	u1665
  7215  098A  0821               	movf	___awdiv@divisor+1,w
  7216  098B  0223               	subwf	___awdiv@dividend+1,w
  7217  098C  1D03               	skipz
  7218  098D  2990               	goto	u1675
  7219  098E  0820               	movf	___awdiv@divisor,w
  7220  098F  0222               	subwf	___awdiv@dividend,w
  7221  0990                     u1675:	
  7222  0990  1C03               	skipc
  7223  0991  2999               	goto	l2425
  7224  0992  0820               	movf	___awdiv@divisor,w
  7225  0993  02A2               	subwf	___awdiv@dividend,f
  7226  0994  0821               	movf	___awdiv@divisor+1,w
  7227  0995  1C03               	skipc
  7228  0996  03A3               	decf	___awdiv@dividend+1,f
  7229  0997  02A3               	subwf	___awdiv@dividend+1,f
  7230  0998  1427               	bsf	___awdiv@quotient,0
  7231  0999                     l2425:	
  7232  0999  3001               	movlw	1
  7233  099A                     u1685:	
  7234  099A  1003               	clrc
  7235  099B  0CA1               	rrf	___awdiv@divisor+1,f
  7236  099C  0CA0               	rrf	___awdiv@divisor,f
  7237  099D  3EFF               	addlw	-1
  7238  099E  1D03               	skipz
  7239  099F  299A               	goto	u1685
  7240  09A0  3001               	movlw	1
  7241  09A1  02A5               	subwf	___awdiv@counter,f
  7242  09A2  1D03               	btfss	3,2
  7243  09A3  2983               	goto	l2419
  7244  09A4                     l2429:	
  7245  09A4  0826               	movf	___awdiv@sign,w
  7246  09A5  1903               	btfsc	3,2
  7247  09A6  29AC               	goto	l2433
  7248  09A7  09A7               	comf	___awdiv@quotient,f
  7249  09A8  09A8               	comf	___awdiv@quotient+1,f
  7250  09A9  0AA7               	incf	___awdiv@quotient,f
  7251  09AA  1903               	skipnz
  7252  09AB  0AA8               	incf	___awdiv@quotient+1,f
  7253  09AC                     l2433:	
  7254  09AC  0828               	movf	___awdiv@quotient+1,w
  7255  09AD  00A1               	movwf	?___awdiv+1
  7256  09AE  0827               	movf	___awdiv@quotient,w
  7257  09AF  00A0               	movwf	?___awdiv
  7258  09B0  0008               	return
  7259  09B1                     __end_of___awdiv:	
  7260                           
  7261                           	psect	text19
  7262  0A0C                     __ptext19:	
  7263 ;; *************** function _LCDInit *****************
  7264 ;; Defined at:
  7265 ;;		line 193 in file "lcd_hd44780_pic16.c"
  7266 ;; Parameters:    Size  Location     Type
  7267 ;;  style           1    wreg     unsigned char 
  7268 ;; Auto vars:     Size  Location     Type
  7269 ;;  style           1   14[BANK0 ] unsigned char 
  7270 ;;  __i             1   15[BANK0 ] unsigned char 
  7271 ;; Return value:  Size  Location     Type
  7272 ;;		None               void
  7273 ;; Registers used:
  7274 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7275 ;; Tracked objects:
  7276 ;;		On entry : 0/0
  7277 ;;		On exit  : 0/0
  7278 ;;		Unchanged: 0/0
  7279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7280 ;;      Params:         0       0       0       0       0
  7281 ;;      Locals:         0       2       0       0       0
  7282 ;;      Temps:          0       2       0       0       0
  7283 ;;      Totals:         0       4       0       0       0
  7284 ;;Total ram usage:        4 bytes
  7285 ;; Hardware stack levels used:    1
  7286 ;; Hardware stack levels required when called:    4
  7287 ;; This function calls:
  7288 ;;		_LCDBusyLoop
  7289 ;;		_LCDByte
  7290 ;; This function is called by:
  7291 ;;		_main
  7292 ;; This function uses a non-reentrant model
  7293 ;;
  7294                           
  7295                           
  7296                           ;psect for function _LCDInit
  7297  0A0C                     _LCDInit:	
  7298                           
  7299                           ;incstack = 0
  7300                           ; Regs used in _LCDInit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7301                           ;LCDInit@style stored from wreg
  7302  0A0C  1283               	bcf	3,5	;RP0=0, select bank0
  7303  0A0D  1303               	bcf	3,6	;RP1=0, select bank0
  7304  0A0E  00AE               	movwf	LCDInit@style
  7305                           
  7306                           ;lcd_hd44780_pic16.c: 209: _delay((unsigned long)((30)*(20000000/4000.0)));
  7307  0A0F  30C3               	movlw	195
  7308  0A10  00AD               	movwf	??_LCDInit+1
  7309  0A11  30CD               	movlw	205
  7310  0A12  00AC               	movwf	??_LCDInit
  7311  0A13                     u3387:	
  7312  0A13  0BAC               	decfsz	??_LCDInit,f
  7313  0A14  2A13               	goto	u3387
  7314  0A15  0BAD               	decfsz	??_LCDInit+1,f
  7315  0A16  2A13               	goto	u3387
  7316                           
  7317                           ;lcd_hd44780_pic16.c: 212: TRISD&=(~(0x0F<<0));
  7318  0A17  30F0               	movlw	240
  7319  0A18  1283               	bcf	3,5	;RP0=0, select bank0
  7320  0A19  1303               	bcf	3,6	;RP1=0, select bank0
  7321  0A1A  00AC               	movwf	??_LCDInit
  7322  0A1B  082C               	movf	??_LCDInit,w
  7323  0A1C  1683               	bsf	3,5	;RP0=1, select bank1
  7324  0A1D  1303               	bcf	3,6	;RP1=0, select bank1
  7325  0A1E  0588               	andwf	8,f	;volatile
  7326                           
  7327                           ;lcd_hd44780_pic16.c: 214: TRISDbits.TRISD6=0;
  7328  0A1F  1308               	bcf	8,6	;volatile
  7329                           
  7330                           ;lcd_hd44780_pic16.c: 215: TRISDbits.TRISD4=0;
  7331  0A20  1208               	bcf	8,4	;volatile
  7332                           
  7333                           ;lcd_hd44780_pic16.c: 216: TRISDbits.TRISD5=0;
  7334  0A21  1288               	bcf	8,5	;volatile
  7335                           
  7336                           ;lcd_hd44780_pic16.c: 218: PORTD&=(~(0x0F<<0));
  7337  0A22  30F0               	movlw	240
  7338  0A23  1283               	bcf	3,5	;RP0=0, select bank0
  7339  0A24  1303               	bcf	3,6	;RP1=0, select bank0
  7340  0A25  00AC               	movwf	??_LCDInit
  7341  0A26  082C               	movf	??_LCDInit,w
  7342  0A27  0588               	andwf	8,f	;volatile
  7343                           
  7344                           ;lcd_hd44780_pic16.c: 220: (RD6=0);
  7345  0A28  1308               	bcf	8,6	;volatile
  7346                           
  7347                           ;lcd_hd44780_pic16.c: 221: (RD5=0);
  7348  0A29  1288               	bcf	8,5	;volatile
  7349                           
  7350                           ;lcd_hd44780_pic16.c: 222: (RD4=0);
  7351  0A2A  1208               	bcf	8,4	;volatile
  7352                           
  7353                           ;lcd_hd44780_pic16.c: 225: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  7354  0A2B  2A2C               	nop2	;2 cycle nop
  7355                           
  7356                           ;lcd_hd44780_pic16.c: 227: (RD6=1);
  7357  0A2C  1283               	bcf	3,5	;RP0=0, select bank0
  7358  0A2D  1303               	bcf	3,6	;RP1=0, select bank0
  7359  0A2E  1708               	bsf	8,6	;volatile
  7360                           
  7361                           ;lcd_hd44780_pic16.c: 228: PORTD|=((0b00000010)<<0);
  7362  0A2F  1488               	bsf	8,1	;volatile
  7363                           
  7364                           ;lcd_hd44780_pic16.c: 229: _delay((unsigned long)((1)*(20000000/4000000.0)));
  7365  0A30  2A31               	nop2	;2 cycle nop
  7366  0A31  2A32               	nop2	;2 cycle nop
  7367  0A32  0000               	nop
  7368                           
  7369                           ;lcd_hd44780_pic16.c: 230: (RD6=0);
  7370  0A33  1283               	bcf	3,5	;RP0=0, select bank0
  7371  0A34  1303               	bcf	3,6	;RP1=0, select bank0
  7372  0A35  1308               	bcf	8,6	;volatile
  7373                           
  7374                           ;lcd_hd44780_pic16.c: 231: _delay((unsigned long)((1)*(20000000/4000000.0)));
  7375  0A36  2A37               	nop2	;2 cycle nop
  7376  0A37  2A38               	nop2	;2 cycle nop
  7377  0A38  0000               	nop
  7378                           
  7379                           ;lcd_hd44780_pic16.c: 234: LCDBusyLoop();
  7380  0A39  160A  118A  248B  120A  158A  	fcall	_LCDBusyLoop
  7381                           
  7382                           ;lcd_hd44780_pic16.c: 239: (LCDByte(0b00101000,0));
  7383  0A3E  1283               	bcf	3,5	;RP0=0, select bank0
  7384  0A3F  1303               	bcf	3,6	;RP1=0, select bank0
  7385  0A40  01A5               	clrf	LCDByte@isdata
  7386  0A41  3028               	movlw	40
  7387  0A42  160A  118A  23AF  120A  158A  	fcall	_LCDByte
  7388                           
  7389                           ;lcd_hd44780_pic16.c: 240: (LCDByte(0b00001100|style,0));
  7390  0A47  1283               	bcf	3,5	;RP0=0, select bank0
  7391  0A48  1303               	bcf	3,6	;RP1=0, select bank0
  7392  0A49  01A5               	clrf	LCDByte@isdata
  7393  0A4A  082E               	movf	LCDInit@style,w
  7394  0A4B  380C               	iorlw	12
  7395  0A4C  160A  118A  23AF  120A  158A  	fcall	_LCDByte
  7396                           
  7397                           ;lcd_hd44780_pic16.c: 243: (LCDByte(0b01000000,0));
  7398  0A51  1283               	bcf	3,5	;RP0=0, select bank0
  7399  0A52  1303               	bcf	3,6	;RP1=0, select bank0
  7400  0A53  01A5               	clrf	LCDByte@isdata
  7401  0A54  3040               	movlw	64
  7402  0A55  160A  118A  23AF  120A  158A  	fcall	_LCDByte
  7403                           
  7404                           ;lcd_hd44780_pic16.c: 245: uint8_t __i;
  7405                           ;lcd_hd44780_pic16.c: 246: for(__i=0;__i<sizeof(__cgram);__i++)
  7406  0A5A  1283               	bcf	3,5	;RP0=0, select bank0
  7407  0A5B  1303               	bcf	3,6	;RP1=0, select bank0
  7408  0A5C  01AF               	clrf	LCDInit@__i
  7409  0A5D                     L10:	
  7410  0A5D  3040               	movlw	64
  7411  0A5E  022F               	subwf	LCDInit@__i,w
  7412  0A5F  1803               	btfsc	3,0
  7413  0A60  0008               	return
  7414                           
  7415                           ;lcd_hd44780_pic16.c: 247: (LCDByte(__cgram[__i],1));
  7416  0A61  01A5               	clrf	LCDByte@isdata
  7417  0A62  0AA5               	incf	LCDByte@isdata,f
  7418  0A63  082F               	movf	LCDInit@__i,w
  7419  0A64  3E10               	addlw	(low (___cgram| (0+256)))& (0+255)
  7420  0A65  0084               	movwf	4
  7421  0A66  1783               	bsf	3,7	;select IRP bank2
  7422  0A67  0800               	movf	0,w
  7423  0A68  160A  118A  23AF  120A  158A  	fcall	_LCDByte
  7424  0A6D  3001               	movlw	1
  7425  0A6E  1283               	bcf	3,5	;RP0=0, select bank0
  7426  0A6F  1303               	bcf	3,6	;RP1=0, select bank0
  7427  0A70  00AC               	movwf	??_LCDInit
  7428  0A71  082C               	movf	??_LCDInit,w
  7429  0A72  07AF               	addwf	LCDInit@__i,f
  7430  0A73  2A5D               	goto	L10
  7431  0A74                     __end_of_LCDInit:	
  7432                           
  7433                           	psect	text20
  7434  13AF                     __ptext20:	
  7435 ;; *************** function _LCDByte *****************
  7436 ;; Defined at:
  7437 ;;		line 80 in file "lcd_hd44780_pic16.c"
  7438 ;; Parameters:    Size  Location     Type
  7439 ;;  c               1    wreg     unsigned char 
  7440 ;;  isdata          1    5[BANK0 ] unsigned char 
  7441 ;; Auto vars:     Size  Location     Type
  7442 ;;  c               1   10[BANK0 ] unsigned char 
  7443 ;;  temp            1   11[BANK0 ] unsigned char 
  7444 ;;  ln              1    9[BANK0 ] unsigned char 
  7445 ;;  hn              1    8[BANK0 ] unsigned char 
  7446 ;; Return value:  Size  Location     Type
  7447 ;;		None               void
  7448 ;; Registers used:
  7449 ;;		wreg, status,2, status,0, pclath, cstack
  7450 ;; Tracked objects:
  7451 ;;		On entry : 0/0
  7452 ;;		On exit  : 0/0
  7453 ;;		Unchanged: 0/0
  7454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7455 ;;      Params:         0       1       0       0       0
  7456 ;;      Locals:         0       4       0       0       0
  7457 ;;      Temps:          0       2       0       0       0
  7458 ;;      Totals:         0       7       0       0       0
  7459 ;;Total ram usage:        7 bytes
  7460 ;; Hardware stack levels used:    1
  7461 ;; Hardware stack levels required when called:    3
  7462 ;; This function calls:
  7463 ;;		_LCDBusyLoop
  7464 ;; This function is called by:
  7465 ;;		_LCDInit
  7466 ;;		_LCDWriteString
  7467 ;;		_LCDWriteInt
  7468 ;;		_LCDGotoXY
  7469 ;;		_LCDWriteChar
  7470 ;;		_sendByGPRS
  7471 ;;		_SPEED
  7472 ;;		_fireIndiSend
  7473 ;;		_main
  7474 ;; This function uses a non-reentrant model
  7475 ;;
  7476                           
  7477                           
  7478                           ;psect for function _LCDByte
  7479  13AF                     _LCDByte:	
  7480                           
  7481                           ;incstack = 0
  7482                           ; Regs used in _LCDByte: [wreg+status,2+status,0+pclath+cstack]
  7483                           ;LCDByte@c stored from wreg
  7484  13AF  1283               	bcf	3,5	;RP0=0, select bank0
  7485  13B0  1303               	bcf	3,6	;RP1=0, select bank0
  7486  13B1  00AA               	movwf	LCDByte@c
  7487                           
  7488                           ;lcd_hd44780_pic16.c: 89: uint8_t hn,ln;
  7489                           ;lcd_hd44780_pic16.c: 90: uint8_t temp;
  7490                           ;lcd_hd44780_pic16.c: 92: hn=c>>4;
  7491  13B2  082A               	movf	LCDByte@c,w
  7492  13B3  00A6               	movwf	??_LCDByte
  7493  13B4  3004               	movlw	4
  7494  13B5                     u1435:	
  7495  13B5  1003               	clrc
  7496  13B6  0CA6               	rrf	??_LCDByte,f
  7497  13B7  3EFF               	addlw	-1
  7498  13B8  1D03               	skipz
  7499  13B9  2BB5               	goto	u1435
  7500  13BA  0826               	movf	??_LCDByte,w
  7501  13BB  00A7               	movwf	??_LCDByte+1
  7502  13BC  0827               	movf	??_LCDByte+1,w
  7503  13BD  00A8               	movwf	LCDByte@hn
  7504                           
  7505                           ;lcd_hd44780_pic16.c: 93: ln=(c & 0x0F);
  7506  13BE  082A               	movf	LCDByte@c,w
  7507  13BF  390F               	andlw	15
  7508  13C0  00A6               	movwf	??_LCDByte
  7509  13C1  0826               	movf	??_LCDByte,w
  7510  13C2  00A9               	movwf	LCDByte@ln
  7511                           
  7512                           ;lcd_hd44780_pic16.c: 95: if(isdata==0)
  7513  13C3  0825               	movf	LCDByte@isdata,w
  7514  13C4  1D03               	btfss	3,2
  7515  13C5  2BC8               	goto	l21
  7516                           
  7517                           ;lcd_hd44780_pic16.c: 96: (RD4=0);
  7518  13C6  1208               	bcf	8,4	;volatile
  7519  13C7  2BC9               	goto	l22
  7520  13C8                     l21:	
  7521                           
  7522                           ;lcd_hd44780_pic16.c: 97: else
  7523                           ;lcd_hd44780_pic16.c: 98: (RD4=1);
  7524  13C8  1608               	bsf	8,4	;volatile
  7525  13C9                     l22:	
  7526                           
  7527                           ;lcd_hd44780_pic16.c: 100: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  7528  13C9  2BCA               	nop2	;2 cycle nop
  7529                           
  7530                           ;lcd_hd44780_pic16.c: 102: (RD6=1);
  7531  13CA  1283               	bcf	3,5	;RP0=0, select bank0
  7532  13CB  1303               	bcf	3,6	;RP1=0, select bank0
  7533  13CC  1708               	bsf	8,6	;volatile
  7534                           
  7535                           ;lcd_hd44780_pic16.c: 106: temp=(PORTD & (~(0X0F<<0)))|((hn<<0));
  7536  13CD  0808               	movf	8,w	;volatile
  7537  13CE  39F0               	andlw	240
  7538  13CF  0428               	iorwf	LCDByte@hn,w
  7539  13D0  00A6               	movwf	??_LCDByte
  7540  13D1  0826               	movf	??_LCDByte,w
  7541  13D2  00AB               	movwf	LCDByte@temp
  7542                           
  7543                           ;lcd_hd44780_pic16.c: 107: PORTD=temp;
  7544  13D3  082B               	movf	LCDByte@temp,w
  7545  13D4  0088               	movwf	8	;volatile
  7546                           
  7547                           ;lcd_hd44780_pic16.c: 109: _delay((unsigned long)((1)*(20000000/4000000.0)));
  7548  13D5  2BD6               	nop2	;2 cycle nop
  7549  13D6  2BD7               	nop2	;2 cycle nop
  7550  13D7  0000               	nop
  7551                           
  7552                           ;lcd_hd44780_pic16.c: 113: (RD6=0);
  7553  13D8  1283               	bcf	3,5	;RP0=0, select bank0
  7554  13D9  1303               	bcf	3,6	;RP1=0, select bank0
  7555  13DA  1308               	bcf	8,6	;volatile
  7556                           
  7557                           ;lcd_hd44780_pic16.c: 115: _delay((unsigned long)((1)*(20000000/4000000.0)));
  7558  13DB  2BDC               	nop2	;2 cycle nop
  7559  13DC  2BDD               	nop2	;2 cycle nop
  7560  13DD  0000               	nop
  7561                           
  7562                           ;lcd_hd44780_pic16.c: 118: (RD6=1);
  7563  13DE  1283               	bcf	3,5	;RP0=0, select bank0
  7564  13DF  1303               	bcf	3,6	;RP1=0, select bank0
  7565  13E0  1708               	bsf	8,6	;volatile
  7566                           
  7567                           ;lcd_hd44780_pic16.c: 120: temp=(PORTD & (~(0X0F<<0)))|((ln<<0));
  7568  13E1  0808               	movf	8,w	;volatile
  7569  13E2  39F0               	andlw	240
  7570  13E3  0429               	iorwf	LCDByte@ln,w
  7571  13E4  00A6               	movwf	??_LCDByte
  7572  13E5  0826               	movf	??_LCDByte,w
  7573  13E6  00AB               	movwf	LCDByte@temp
  7574                           
  7575                           ;lcd_hd44780_pic16.c: 122: PORTD=temp;
  7576  13E7  082B               	movf	LCDByte@temp,w
  7577  13E8  0088               	movwf	8	;volatile
  7578                           
  7579                           ;lcd_hd44780_pic16.c: 124: _delay((unsigned long)((1)*(20000000/4000000.0)));
  7580  13E9  2BEA               	nop2	;2 cycle nop
  7581  13EA  2BEB               	nop2	;2 cycle nop
  7582  13EB  0000               	nop
  7583                           
  7584                           ;lcd_hd44780_pic16.c: 128: (RD6=0);
  7585  13EC  1283               	bcf	3,5	;RP0=0, select bank0
  7586  13ED  1303               	bcf	3,6	;RP1=0, select bank0
  7587  13EE  1308               	bcf	8,6	;volatile
  7588                           
  7589                           ;lcd_hd44780_pic16.c: 130: _delay((unsigned long)((1)*(20000000/4000000.0)));
  7590  13EF  2BF0               	nop2	;2 cycle nop
  7591  13F0  2BF1               	nop2	;2 cycle nop
  7592  13F1  0000               	nop
  7593                           
  7594                           ;lcd_hd44780_pic16.c: 132: LCDBusyLoop();
  7595  13F2  160A  118A  248B   	fcall	_LCDBusyLoop
  7596  13F5  0008               	return
  7597  13F6                     __end_of_LCDByte:	
  7598                           
  7599                           	psect	text21
  7600  148B                     __ptext21:	
  7601 ;; *************** function _LCDBusyLoop *****************
  7602 ;; Defined at:
  7603 ;;		line 135 in file "lcd_hd44780_pic16.c"
  7604 ;; Parameters:    Size  Location     Type
  7605 ;;		None
  7606 ;; Auto vars:     Size  Location     Type
  7607 ;;  status          1    4[BANK0 ] unsigned char 
  7608 ;;  temp            1    3[BANK0 ] unsigned char 
  7609 ;;  busy            1    2[BANK0 ] unsigned char 
  7610 ;; Return value:  Size  Location     Type
  7611 ;;		None               void
  7612 ;; Registers used:
  7613 ;;		wreg, status,2, status,0
  7614 ;; Tracked objects:
  7615 ;;		On entry : 0/0
  7616 ;;		On exit  : 0/0
  7617 ;;		Unchanged: 0/0
  7618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7619 ;;      Params:         0       0       0       0       0
  7620 ;;      Locals:         0       3       0       0       0
  7621 ;;      Temps:          0       2       0       0       0
  7622 ;;      Totals:         0       5       0       0       0
  7623 ;;Total ram usage:        5 bytes
  7624 ;; Hardware stack levels used:    1
  7625 ;; Hardware stack levels required when called:    2
  7626 ;; This function calls:
  7627 ;;		Nothing
  7628 ;; This function is called by:
  7629 ;;		_LCDByte
  7630 ;;		_LCDInit
  7631 ;; This function uses a non-reentrant model
  7632 ;;
  7633                           
  7634                           
  7635                           ;psect for function _LCDBusyLoop
  7636  148B                     _LCDBusyLoop:	
  7637                           
  7638                           ;lcd_hd44780_pic16.c: 139: uint8_t busy,status=0x00,temp;
  7639                           
  7640                           ;incstack = 0
  7641                           ; Regs used in _LCDBusyLoop: [wreg+status,2+status,0]
  7642  148B  1283               	bcf	3,5	;RP0=0, select bank0
  7643  148C  1303               	bcf	3,6	;RP1=0, select bank0
  7644  148D  01A4               	clrf	LCDBusyLoop@status
  7645                           
  7646                           ;lcd_hd44780_pic16.c: 142: TRISD|=(0x0f<<0);
  7647  148E  300F               	movlw	15
  7648  148F  00A0               	movwf	??_LCDBusyLoop
  7649  1490  0820               	movf	??_LCDBusyLoop,w
  7650  1491  1683               	bsf	3,5	;RP0=1, select bank1
  7651  1492  1303               	bcf	3,6	;RP1=0, select bank1
  7652  1493  0488               	iorwf	8,f	;volatile
  7653                           
  7654                           ;lcd_hd44780_pic16.c: 145: (RD5=1);
  7655  1494  1283               	bcf	3,5	;RP0=0, select bank0
  7656  1495  1303               	bcf	3,6	;RP1=0, select bank0
  7657  1496  1688               	bsf	8,5	;volatile
  7658                           
  7659                           ;lcd_hd44780_pic16.c: 146: (RD4=0);
  7660  1497  1208               	bcf	8,4	;volatile
  7661                           
  7662                           ;lcd_hd44780_pic16.c: 150: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  7663  1498  2C99               	nop2	;2 cycle nop
  7664  1499                     l2165:	
  7665                           ;lcd_hd44780_pic16.c: 153: do
  7666                           
  7667                           
  7668                           ;lcd_hd44780_pic16.c: 154: {
  7669                           ;lcd_hd44780_pic16.c: 156: (RD6=1);
  7670  1499  1283               	bcf	3,5	;RP0=0, select bank0
  7671  149A  1303               	bcf	3,6	;RP1=0, select bank0
  7672  149B  1708               	bsf	8,6	;volatile
  7673                           
  7674                           ;lcd_hd44780_pic16.c: 159: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  7675  149C  2C9D               	nop2	;2 cycle nop
  7676                           
  7677                           ;lcd_hd44780_pic16.c: 161: status=(PORTD>>0);
  7678  149D  1283               	bcf	3,5	;RP0=0, select bank0
  7679  149E  1303               	bcf	3,6	;RP1=0, select bank0
  7680  149F  0808               	movf	8,w	;volatile
  7681  14A0  00A0               	movwf	??_LCDBusyLoop
  7682  14A1  0820               	movf	??_LCDBusyLoop,w
  7683  14A2  00A4               	movwf	LCDBusyLoop@status
  7684                           
  7685                           ;lcd_hd44780_pic16.c: 162: status=status<<4;
  7686  14A3  0824               	movf	LCDBusyLoop@status,w
  7687  14A4  00A0               	movwf	??_LCDBusyLoop
  7688  14A5  3003               	movlw	3
  7689  14A6                     u1415:	
  7690  14A6  1003               	clrc
  7691  14A7  0DA0               	rlf	??_LCDBusyLoop,f
  7692  14A8  3EFF               	addlw	-1
  7693  14A9  1D03               	skipz
  7694  14AA  2CA6               	goto	u1415
  7695  14AB  1003               	clrc
  7696  14AC  0D20               	rlf	??_LCDBusyLoop,w
  7697  14AD  00A1               	movwf	??_LCDBusyLoop+1
  7698  14AE  0821               	movf	??_LCDBusyLoop+1,w
  7699  14AF  00A4               	movwf	LCDBusyLoop@status
  7700                           
  7701                           ;lcd_hd44780_pic16.c: 164: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  7702  14B0  2CB1               	nop2	;2 cycle nop
  7703                           
  7704                           ;lcd_hd44780_pic16.c: 167: (RD6=0);
  7705  14B1  1283               	bcf	3,5	;RP0=0, select bank0
  7706  14B2  1303               	bcf	3,6	;RP1=0, select bank0
  7707  14B3  1308               	bcf	8,6	;volatile
  7708                           
  7709                           ;lcd_hd44780_pic16.c: 168: _delay((unsigned long)((1)*(20000000/4000000.0)));
  7710  14B4  2CB5               	nop2	;2 cycle nop
  7711  14B5  2CB6               	nop2	;2 cycle nop
  7712  14B6  0000               	nop
  7713                           
  7714                           ;lcd_hd44780_pic16.c: 170: (RD6=1);
  7715  14B7  1283               	bcf	3,5	;RP0=0, select bank0
  7716  14B8  1303               	bcf	3,6	;RP1=0, select bank0
  7717  14B9  1708               	bsf	8,6	;volatile
  7718                           
  7719                           ;lcd_hd44780_pic16.c: 171: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  7720  14BA  2CBB               	nop2	;2 cycle nop
  7721                           
  7722                           ;lcd_hd44780_pic16.c: 173: temp=(PORTD>>0);
  7723  14BB  1283               	bcf	3,5	;RP0=0, select bank0
  7724  14BC  1303               	bcf	3,6	;RP1=0, select bank0
  7725  14BD  0808               	movf	8,w	;volatile
  7726  14BE  00A0               	movwf	??_LCDBusyLoop
  7727  14BF  0820               	movf	??_LCDBusyLoop,w
  7728  14C0  00A3               	movwf	LCDBusyLoop@temp
  7729                           
  7730                           ;lcd_hd44780_pic16.c: 174: temp&=0x0F;
  7731  14C1  300F               	movlw	15
  7732  14C2  00A0               	movwf	??_LCDBusyLoop
  7733  14C3  0820               	movf	??_LCDBusyLoop,w
  7734  14C4  05A3               	andwf	LCDBusyLoop@temp,f
  7735                           
  7736                           ;lcd_hd44780_pic16.c: 176: status=status|temp;
  7737  14C5  0824               	movf	LCDBusyLoop@status,w
  7738  14C6  0423               	iorwf	LCDBusyLoop@temp,w
  7739  14C7  00A0               	movwf	??_LCDBusyLoop
  7740  14C8  0820               	movf	??_LCDBusyLoop,w
  7741  14C9  00A4               	movwf	LCDBusyLoop@status
  7742                           
  7743                           ;lcd_hd44780_pic16.c: 178: busy=status & 0b10000000;
  7744  14CA  0824               	movf	LCDBusyLoop@status,w
  7745  14CB  3980               	andlw	128
  7746  14CC  00A0               	movwf	??_LCDBusyLoop
  7747  14CD  0820               	movf	??_LCDBusyLoop,w
  7748  14CE  00A2               	movwf	LCDBusyLoop@busy
  7749                           
  7750                           ;lcd_hd44780_pic16.c: 180: _delay((unsigned long)((0.5)*(20000000/4000000.0)));
  7751  14CF  2CD0               	nop2	;2 cycle nop
  7752                           
  7753                           ;lcd_hd44780_pic16.c: 182: (RD6=0);
  7754  14D0  1283               	bcf	3,5	;RP0=0, select bank0
  7755  14D1  1303               	bcf	3,6	;RP1=0, select bank0
  7756  14D2  1308               	bcf	8,6	;volatile
  7757                           
  7758                           ;lcd_hd44780_pic16.c: 183: _delay((unsigned long)((1)*(20000000/4000000.0)));
  7759  14D3  2CD4               	nop2	;2 cycle nop
  7760  14D4  2CD5               	nop2	;2 cycle nop
  7761  14D5  0000               	nop
  7762                           
  7763                           ;lcd_hd44780_pic16.c: 184: }while(busy);
  7764  14D6  1283               	bcf	3,5	;RP0=0, select bank0
  7765  14D7  1303               	bcf	3,6	;RP1=0, select bank0
  7766  14D8  0822               	movf	LCDBusyLoop@busy,w
  7767  14D9  1D03               	btfss	3,2
  7768  14DA  2C99               	goto	l2165
  7769                           
  7770                           ;lcd_hd44780_pic16.c: 186: (RD5=0);
  7771  14DB  1288               	bcf	8,5	;volatile
  7772                           
  7773                           ;lcd_hd44780_pic16.c: 189: TRISD&=(~(0x0F<<0));
  7774  14DC  30F0               	movlw	240
  7775  14DD  00A0               	movwf	??_LCDBusyLoop
  7776  14DE  0820               	movf	??_LCDBusyLoop,w
  7777  14DF  1683               	bsf	3,5	;RP0=1, select bank1
  7778  14E0  1303               	bcf	3,6	;RP1=0, select bank1
  7779  14E1  0588               	andwf	8,f	;volatile
  7780  14E2  0008               	return
  7781  14E3                     __end_of_LCDBusyLoop:	
  7782                           
  7783                           	psect	text22
  7784  1201                     __ptext22:	
  7785 ;; *************** function _ISR *****************
  7786 ;; Defined at:
  7787 ;;		line 6 in file "isr.c"
  7788 ;; Parameters:    Size  Location     Type
  7789 ;;		None
  7790 ;; Auto vars:     Size  Location     Type
  7791 ;;		None
  7792 ;; Return value:  Size  Location     Type
  7793 ;;		None               void
  7794 ;; Registers used:
  7795 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7796 ;; Tracked objects:
  7797 ;;		On entry : 0/0
  7798 ;;		On exit  : 0/0
  7799 ;;		Unchanged: 0/0
  7800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7801 ;;      Params:         0       0       0       0       0
  7802 ;;      Locals:         0       0       0       0       0
  7803 ;;      Temps:          4       0       0       0       0
  7804 ;;      Totals:         4       0       0       0       0
  7805 ;;Total ram usage:        4 bytes
  7806 ;; Hardware stack levels used:    1
  7807 ;; Hardware stack levels required when called:    1
  7808 ;; This function calls:
  7809 ;;		_USARTHandleRxInt
  7810 ;; This function is called by:
  7811 ;;		Interrupt level 1
  7812 ;; This function uses a non-reentrant model
  7813 ;;
  7814                           
  7815                           
  7816                           ;psect for function _ISR
  7817  1201                     _ISR:	
  7818                           
  7819                           ;isr.c: 8: if (RCIE && RCIF) {
  7820  1201  1683               	bsf	3,5	;RP0=1, select bank1
  7821  1202  1303               	bcf	3,6	;RP1=0, select bank1
  7822  1203  1E8C               	btfss	12,5	;volatile
  7823  1204  2A0E               	goto	i1l92
  7824  1205  1283               	bcf	3,5	;RP0=0, select bank0
  7825  1206  1303               	bcf	3,6	;RP1=0, select bank0
  7826  1207  1E8C               	btfss	12,5	;volatile
  7827  1208  2A0E               	goto	i1l92
  7828                           
  7829                           ;isr.c: 9: USARTHandleRxInt();
  7830  1209  160A  118A  236A  160A  118A  	fcall	_USARTHandleRxInt
  7831  120E                     i1l92:	
  7832                           ;isr.c: 10: return;
  7833                           
  7834  120E  0878               	movf	??_ISR+3,w
  7835  120F  1283               	bcf	3,5	;RP0=0, select bank0
  7836  1210  1303               	bcf	3,6	;RP1=0, select bank0
  7837  1211  00FF               	movwf	127
  7838  1212  0877               	movf	??_ISR+2,w
  7839  1213  008A               	movwf	10
  7840  1214  0876               	movf	??_ISR+1,w
  7841  1215  0084               	movwf	4
  7842  1216  0E75               	swapf	??_ISR^(0+-128),w
  7843  1217  0083               	movwf	3
  7844  1218  0EFE               	swapf	126,f
  7845  1219  0E7E               	swapf	126,w
  7846  121A  0009               	retfie
  7847  121B                     __end_of_ISR:	
  7848                           
  7849                           	psect	intentry
  7850  0004                     __pintentry:	
  7851                           ;incstack = 0
  7852                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7853                           
  7854  0004                     interrupt_function:	
  7855  007E                     saved_w	set	btemp
  7856  0004  00FE               	movwf	btemp
  7857  0005  0E03               	swapf	3,w
  7858  0006  00F5               	movwf	??_ISR
  7859  0007  0804               	movf	4,w
  7860  0008  00F6               	movwf	??_ISR+1
  7861  0009  080A               	movf	10,w
  7862  000A  00F7               	movwf	??_ISR+2
  7863  000B  1283               	bcf	3,5	;RP0=0, select bank0
  7864  000C  1303               	bcf	3,6	;RP1=0, select bank0
  7865  000D  087F               	movf	btemp+1,w
  7866  000E  00F8               	movwf	??_ISR+3
  7867  000F  160A  118A  2A01   	ljmp	_ISR
  7868                           
  7869                           	psect	text23
  7870  136A                     __ptext23:	
  7871 ;; *************** function _USARTHandleRxInt *****************
  7872 ;; Defined at:
  7873 ;;		line 96 in file "usart_pic16.c"
  7874 ;; Parameters:    Size  Location     Type
  7875 ;;		None
  7876 ;; Auto vars:     Size  Location     Type
  7877 ;;  data            1    4[COMMON] unsigned char 
  7878 ;; Return value:  Size  Location     Type
  7879 ;;		None               void
  7880 ;; Registers used:
  7881 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7882 ;; Tracked objects:
  7883 ;;		On entry : 0/0
  7884 ;;		On exit  : 0/0
  7885 ;;		Unchanged: 0/0
  7886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7887 ;;      Params:         0       0       0       0       0
  7888 ;;      Locals:         1       0       0       0       0
  7889 ;;      Temps:          4       0       0       0       0
  7890 ;;      Totals:         5       0       0       0       0
  7891 ;;Total ram usage:        5 bytes
  7892 ;; Hardware stack levels used:    1
  7893 ;; This function calls:
  7894 ;;		Nothing
  7895 ;; This function is called by:
  7896 ;;		_ISR
  7897 ;; This function uses a non-reentrant model
  7898 ;;
  7899                           
  7900                           
  7901                           ;psect for function _USARTHandleRxInt
  7902  136A                     _USARTHandleRxInt:	
  7903                           
  7904                           ;usart_pic16.c: 98: if(RB1==1)
  7905                           
  7906                           ;incstack = 0
  7907                           ; Regs used in _USARTHandleRxInt: [wreg-fsr0h+status,2+status,0]
  7908  136A  1283               	bcf	3,5	;RP0=0, select bank0
  7909  136B  1303               	bcf	3,6	;RP1=0, select bank0
  7910  136C  1C86               	btfss	6,1	;volatile
  7911  136D  2B70               	goto	i1l145
  7912                           
  7913                           ;usart_pic16.c: 99: RB1=0;
  7914  136E  1086               	bcf	6,1	;volatile
  7915  136F  2B71               	goto	i1l2831
  7916  1370                     i1l145:	
  7917                           
  7918                           ;usart_pic16.c: 100: else
  7919                           ;usart_pic16.c: 101: RB1=1;
  7920  1370  1486               	bsf	6,1	;volatile
  7921  1371                     i1l2831:	
  7922                           
  7923                           ;usart_pic16.c: 104: char data=RCREG;
  7924  1371  081A               	movf	26,w	;volatile
  7925  1372  00F0               	movwf	??_USARTHandleRxInt
  7926  1373  0870               	movf	??_USARTHandleRxInt,w
  7927  1374  00F4               	movwf	USARTHandleRxInt@data
  7928                           
  7929                           ;usart_pic16.c: 107: if(((UQEnd==64-1) && UQFront==0) || ((UQEnd+1)==UQFront))
  7930  1375  303F               	movlw	63
  7931  1376  067B               	xorwf	_UQEnd,w	;volatile
  7932  1377  1903               	btfsc	3,2
  7933  1378  087C               	movf	_UQFront,w	;volatile
  7934  1379  1903               	btfsc	3,2
  7935  137A  2B90               	goto	i1l2839
  7936  137B  087C               	movf	_UQFront,w	;volatile
  7937  137C  00F0               	movwf	??_USARTHandleRxInt
  7938  137D  01F1               	clrf	??_USARTHandleRxInt+1
  7939  137E  1BF0               	btfsc	??_USARTHandleRxInt,7
  7940  137F  03F1               	decf	??_USARTHandleRxInt+1,f
  7941  1380  3001               	movlw	1
  7942  1381  077B               	addwf	_UQEnd,w	;volatile
  7943  1382  00F2               	movwf	??_USARTHandleRxInt+2
  7944  1383  01F3               	clrf	??_USARTHandleRxInt+3
  7945  1384  1803               	skipnc
  7946  1385  0AF3               	incf	??_USARTHandleRxInt+3,f
  7947  1386  1BFB               	btfsc	_UQEnd,7	;volatile
  7948  1387  03F3               	decf	??_USARTHandleRxInt+3,f
  7949  1388  0871               	movf	??_USARTHandleRxInt+1,w
  7950  1389  0673               	xorwf	??_USARTHandleRxInt+3,w
  7951  138A  1D03               	skipz
  7952  138B  2B8E               	goto	u222_25
  7953  138C  0870               	movf	??_USARTHandleRxInt,w
  7954  138D  0672               	xorwf	??_USARTHandleRxInt+2,w
  7955  138E                     u222_25:	
  7956  138E  1D03               	skipz
  7957  138F  2B98               	goto	i1l2843
  7958  1390                     i1l2839:	
  7959                           
  7960                           ;usart_pic16.c: 108: {
  7961                           ;usart_pic16.c: 110: UQFront++;
  7962  1390  3001               	movlw	1
  7963  1391  00F0               	movwf	??_USARTHandleRxInt
  7964  1392  0870               	movf	??_USARTHandleRxInt,w
  7965  1393  07FC               	addwf	_UQFront,f	;volatile
  7966                           
  7967                           ;usart_pic16.c: 111: if(UQFront==64) UQFront=0;
  7968  1394  3040               	movlw	64
  7969  1395  067C               	xorwf	_UQFront,w	;volatile
  7970  1396  1903               	btfsc	3,2
  7971  1397  01FC               	clrf	_UQFront	;volatile
  7972  1398                     i1l2843:	
  7973                           
  7974                           ;usart_pic16.c: 112: }
  7975                           ;usart_pic16.c: 114: if(UQEnd==64-1)
  7976  1398  303F               	movlw	63
  7977  1399  067B               	xorwf	_UQEnd,w	;volatile
  7978  139A  1D03               	btfss	3,2
  7979  139B  2B9E               	goto	i1l2847
  7980                           
  7981                           ;usart_pic16.c: 115: UQEnd=0;
  7982  139C  01FB               	clrf	_UQEnd	;volatile
  7983  139D  2BA2               	goto	i1l2849
  7984  139E                     i1l2847:	
  7985                           
  7986                           ;usart_pic16.c: 116: else
  7987                           ;usart_pic16.c: 117: UQEnd++;
  7988  139E  3001               	movlw	1
  7989  139F  00F0               	movwf	??_USARTHandleRxInt
  7990  13A0  0870               	movf	??_USARTHandleRxInt,w
  7991  13A1  07FB               	addwf	_UQEnd,f	;volatile
  7992  13A2                     i1l2849:	
  7993                           
  7994                           ;usart_pic16.c: 119: URBuff[UQEnd]=data;
  7995  13A2  0874               	movf	USARTHandleRxInt@data,w
  7996  13A3  00F0               	movwf	??_USARTHandleRxInt
  7997  13A4  087B               	movf	_UQEnd,w
  7998  13A5  3E90               	addlw	(low (_URBuff| (0+256)))& (0+255)
  7999  13A6  0084               	movwf	4
  8000  13A7  0870               	movf	??_USARTHandleRxInt,w
  8001  13A8  1783               	bsf	3,7	;select IRP bank3
  8002  13A9  0080               	movwf	0
  8003                           
  8004                           ;usart_pic16.c: 121: if(UQFront==-1) UQFront=0;
  8005  13AA  0A7C               	incf	_UQFront,w	;volatile
  8006  13AB  1D03               	btfss	3,2
  8007  13AC  0008               	return
  8008  13AD  01FC               	clrf	_UQFront	;volatile
  8009  13AE  0008               	return
  8010  13AF                     __end_of_USARTHandleRxInt:	
  8011  007E                     btemp	set	126	;btemp
  8012  007E                     wtemp	set	126
  8013  007E                     wtemp0	set	126
  8014  0080                     wtemp1	set	128
  8015  0082                     wtemp2	set	130
  8016  0084                     wtemp3	set	132
  8017  0086                     wtemp4	set	134
  8018  0088                     wtemp5	set	136
  8019  007F                     wtemp6	set	127
  8020  007E                     ttemp	set	126
  8021  007E                     ttemp0	set	126
  8022  0081                     ttemp1	set	129
  8023  0084                     ttemp2	set	132
  8024  0087                     ttemp3	set	135
  8025  007F                     ttemp4	set	127
  8026  007E                     ltemp	set	126
  8027  007E                     ltemp0	set	126
  8028  0082                     ltemp1	set	130
  8029  0086                     ltemp2	set	134
  8030  0080                     ltemp3	set	128


Data Sizes:
    Strings     833
    Constant    0
    Data        64
    BSS         110
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      13
    BANK0            80     67      77
    BANK1            80     34      66
    BANK3            96      0      64
    BANK2            96      0      64

Pointer List with Targets:

    SendStringSerially@st	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_39(CODE[28]), STR_38(CODE[24]), STR_37(CODE[10]), STR_32(CODE[36]), 
		 -> STR_31(CODE[24]), STR_30(CODE[10]), STR_25(CODE[35]), STR_24(CODE[24]), 
		 -> STR_23(CODE[10]), STR_13(CODE[16]), STR_12(CODE[2]), sendLo(BANK1[10]), 
		 -> STR_11(CODE[8]), sendLa(BANK1[9]), STR_10(CODE[7]), sendS(BANK1[7]), 
		 -> STR_9(CODE[64]), STR_8(CODE[12]), STR_7(CODE[13]), STR_6(CODE[27]), 
		 -> STR_5(CODE[30]), STR_4(CODE[10]), STR_3(CODE[7]), 

    LCDWriteString@msg	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_63(CODE[8]), STR_62(CODE[4]), STR_61(CODE[18]), STR_60(CODE[7]), 
		 -> STR_59(CODE[19]), STR_58(CODE[3]), STR_57(CODE[18]), STR_56(CODE[10]), 
		 -> STR_55(CODE[16]), STR_54(CODE[8]), STR_53(CODE[6]), STR_52(CODE[20]), 
		 -> STR_51(CODE[6]), STR_50(CODE[19]), STR_49(CODE[12]), STR_48(CODE[15]), 
		 -> STR_47(CODE[11]), STR_46(CODE[11]), STR_45(CODE[3]), STR_44(CODE[8]), 
		 -> STR_43(CODE[13]), STR_42(CODE[16]), STR_41(CODE[20]), STR_40(CODE[13]), 
		 -> STR_36(CODE[6]), STR_35(CODE[13]), STR_34(CODE[16]), STR_33(CODE[17]), 
		 -> STR_29(CODE[6]), STR_28(CODE[19]), STR_27(CODE[16]), STR_26(CODE[17]), 
		 -> STR_22(CODE[14]), STR_21(CODE[16]), STR_20(CODE[18]), STR_19(CODE[6]), 
		 -> STR_18(CODE[6]), STR_17(CODE[6]), STR_16(CODE[6]), STR_15(CODE[6]), 
		 -> STR_14(CODE[13]), STR_2(CODE[10]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_USARTHandleRxInt

Critical Paths under _main in BANK0

    _main->_SPEED
    _SPEED->_POSITION
    _fireIndiSend->_LCDWriteString
    _POSITION->_sendByGPRS
    _sendByGPRS->_LCDWriteString
    _SendStringSerially->_SendByteSerially
    _LCDWriteString->_LCDByte
    _LCDGotoXY->_LCDByte
    _LCDWriteChar->_LCDByte
    _LCDWriteInt->_LCDByte
    _LCDInit->_LCDByte
    _LCDByte->_LCDBusyLoop

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_SPEED

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   74444
                                             62 BANK0      5     5      0
                            _LCDByte
                          _LCDGotoXY
                            _LCDInit
                        _LCDWriteInt
                     _LCDWriteString
                              _SPEED
                         _buzzerTone
 ---------------------------------------------------------------------------------
 (1) _buzzerTone                                           5     5      0      46
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _SPEED                                               37    37      0   57470
                                             59 BANK0      3     3      0
                                              0 BANK1     34    34      0
                            _LCDByte
                          _LCDGotoXY
                       _LCDWriteChar
                        _LCDWriteInt
                     _LCDWriteString
                           _POSITION
                   _SendByteSerially
                 _SendStringSerially
                          _USARTInit
                      _USARTReadData
                            ___awmod
                             ___wmul
                       _fireIndiSend
 ---------------------------------------------------------------------------------
 (2) _fireIndiSend                                         5     5      0   12360
                                             16 BANK0      5     5      0
                           _ADC_Init
                           _ADC_Read
                            _LCDByte
                          _LCDGotoXY
                     _LCDWriteString
                   _SendByteSerially
                 _SendStringSerially
 ---------------------------------------------------------------------------------
 (3) _ADC_Read                                             5     3      2      44
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     198
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _USARTInit                                            3     1      2      75
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _POSITION                                            40    40      0   24995
                                             19 BANK0     40    40      0
                          _LCDGotoXY
                       _LCDWriteChar
                     _LCDWriteString
                      _USARTReadData
                            ___awmod
                         _sendByGPRS
 ---------------------------------------------------------------------------------
 (3) _sendByGPRS                                           3     3      0   12293
                                             16 BANK0      3     3      0
                            _LCDByte
                          _LCDGotoXY
                     _LCDWriteString
                   _SendByteSerially
                 _SendStringSerially
 ---------------------------------------------------------------------------------
 (3) _SendStringSerially                                   2     0      2    1286
                                              1 BANK0      2     0      2
                   _SendByteSerially
 ---------------------------------------------------------------------------------
 (4) _SendByteSerially                                     1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _LCDWriteString                                       4     2      2    4376
                                             12 BANK0      4     2      2
                            _LCDByte
 ---------------------------------------------------------------------------------
 (3) _LCDGotoXY                                            3     2      1    4691
                                             12 BANK0      3     2      1
                            _LCDByte
 ---------------------------------------------------------------------------------
 (2) _USARTReadData                                        2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _LCDWriteChar                                         3     3      0    2073
                                             12 BANK0      3     3      0
                            _LCDByte
 ---------------------------------------------------------------------------------
 (2) _LCDWriteInt                                         14    11      3    3728
                                             12 BANK0     14    11      3
                            _LCDByte
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     720
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     512
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              4     4      0    2125
                                             12 BANK0      4     4      0
                        _LCDBusyLoop
                            _LCDByte
 ---------------------------------------------------------------------------------
 (4) _LCDByte                                              7     6      1    1918
                                              5 BANK0      7     6      1
                        _LCDBusyLoop
 ---------------------------------------------------------------------------------
 (5) _LCDBusyLoop                                          5     5      0     117
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  4     4      0      23
                                              5 COMMON     4     4      0
                   _USARTHandleRxInt
 ---------------------------------------------------------------------------------
 (8) _USARTHandleRxInt                                     5     5      0      23
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDByte
     _LCDBusyLoop
   _LCDGotoXY
     _LCDByte
       _LCDBusyLoop
   _LCDInit
     _LCDBusyLoop
     _LCDByte
       _LCDBusyLoop
   _LCDWriteInt
     _LCDByte
       _LCDBusyLoop
     ___awdiv
     ___awmod
   _LCDWriteString
     _LCDByte
       _LCDBusyLoop
   _SPEED
     _LCDByte
       _LCDBusyLoop
     _LCDGotoXY
       _LCDByte
         _LCDBusyLoop
     _LCDWriteChar
       _LCDByte
         _LCDBusyLoop
     _LCDWriteInt
       _LCDByte
         _LCDBusyLoop
       ___awdiv
       ___awmod
     _LCDWriteString
       _LCDByte
         _LCDBusyLoop
     _POSITION
       _LCDGotoXY
         _LCDByte
           _LCDBusyLoop
       _LCDWriteChar
         _LCDByte
           _LCDBusyLoop
       _LCDWriteString
         _LCDByte
           _LCDBusyLoop
       _USARTReadData
       ___awmod
       _sendByGPRS
         _LCDByte
           _LCDBusyLoop
         _LCDGotoXY
           _LCDByte
             _LCDBusyLoop
         _LCDWriteString
           _LCDByte
             _LCDBusyLoop
         _SendByteSerially
         _SendStringSerially
           _SendByteSerially
     _SendByteSerially
     _SendStringSerially
       _SendByteSerially
     _USARTInit
     _USARTReadData
     ___awmod
     ___wmul
     _fireIndiSend
       _ADC_Init
       _ADC_Read
       _LCDByte
         _LCDBusyLoop
       _LCDGotoXY
         _LCDByte
           _LCDBusyLoop
       _LCDWriteString
         _LCDByte
           _LCDBusyLoop
       _SendByteSerially
       _SendStringSerially
         _SendByteSerially
   _buzzerTone

 _ISR (ROOT)
   _USARTHandleRxInt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      40       9       66.7%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0      40      11       66.7%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     22      42       7       82.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     43      4D       5       96.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0     11C      12        0.0%
ABS                  0      0     11C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Tue May 10 22:33:23 2016

               ?_LCDBusyLoop 0070                            pc 0002                  __CFG_CP$OFF 0000  
                         l21 13C8                           l22 13C9                           l66 1280  
                         l67 1269                 ___awdiv@sign 0026                           _co 00C4  
                         fsr 0004          ___wmul@multiplicand 0022           USARTInit@baud_rate 0020  
                        l123 142C                          l313 0CEB                          l350 0299  
                        l271 11DB                          l373 12AE                          l475 124A  
                        _GIE 005F                          _RB0 0030                          _RB1 0031  
                        _RB6 0036                          _RD4 0044                          _RD5 0045  
                        _RD6 0046                 __CFG_CPD$OFF 0000                          _ISR 1201  
             ?_USARTReadData 0070               ??_fireIndiSend 0030                          fsr0 0004  
                        indf 0000                 ___awmod@sign 0026                 __CFG_FOSC$HS 0000  
    LCDWriteInt@field_length 002E              __end_of_LCDByte 13F6              __end_of_LCDInit 0A74  
               __CFG_LVP$OFF 0000                 ?_LCDWriteInt 002C                         ?_ISR 0070  
                LCDByte@temp 002B                         l2301 1220                         l2311 123C  
                       l3103 0500                         l3007 02AC                         l2401 0962  
                       l2307 1234                         l2165 1499                         l2501 059A  
                       l2253 09F3                         l3109 0526                         l2407 096D  
                       l2503 05A2                         l2263 126B                         l3055 03EC  
                       l2433 09AC                         l2425 0999                         l2417 0975  
                       l2505 05B4                         l2265 126D                         l2249 09E9  
                       l2257 09B1                         l2521 1400                         l3057 03FC  
                       l2419 0983                         l2291 12D3                         l2603 0B5A  
                       l2523 1402                         l2429 09A4                         l2445 144A  
                       l2293 12E6                         l2269 1272                         l2525 1404  
                       l3093 04C8                         l2471 1486                         l2463 1473  
                       l2279 05DB                         l2631 0BCA                         l2519 13FE  
                       l2383 1291                         l3343 0FCF                         l3319 0F53  
                       l2457 1457                         l2449 1451                         l2617 0B86  
                       l2625 0BB0                         l2609 0B74                         l3433 1418  
                       l2529 1409                         l2459 1465                         l2467 147E  
                       l2635 0BD3                         l3435 141D                         l3347 0FE2  
                       l2493 055B                         l2549 0A7A                         l3437 1422  
                       l3349 0FEB                         l2495 0590                         l2663 0C66  
                       l3439 1427                         l2657 0C3A                         l2499 0594  
                       l2675 0CA1                         l2595 0B30                         l2693 0D09  
                       l2685 0CD1                         l2669 0C75                         l2765 1242  
                       l2933 014B                         l2941 017B                         l2961 01C8  
                       l2949 018F                         l2957 01BF                         l2885 008C  
                       l2983 0236                         l2975 0203                         l2887 0095  
                       l2879 0060                         l2993 026F                         l2985 023B  
                       l2979 0223                         l2989 025C                         l2999 027E  
                       STR_1 079C                         STR_2 08AA                         STR_3 08F9  
                       STR_4 08BE                         STR_5 0687                         STR_6 06C1  
                       STR_7 083B                         STR_8 087C                         STR_9 0600  
                       u2005 0BAE                         u2105 0D07                         u2035 0C38  
                       u2045 0C64                         u1415 14A6                         u2055 0C73  
                       u2135 124B                         u3007 03AB                         u2065 0C9F  
                       u2145 1252                         u3017 03C5                         u1435 13B5  
                       u3107 1541                         u3027 03E5                         u2085 0CCF  
                       u3117 15A4                         u3037 03F4                         u2405 0179  
                       u2095 0CDC                         u3207 0ADC                         u3127 15BE  
                       u3047 0486                         u3217 0AEF                         u3137 15DE  
                       u3057 04A0                         u2425 018D                         u3307 16CE  
                       u3227 0B09                         u3147 164D                         u3067 04C0  
                       u2515 0291                         u2435 01BD                         u1645 0978  
                       u3317 16EE                         u3237 0B36                         u3157 12A6  
                       u2605 0524                         u3077 04EB                         u2525 02AA  
                       u2365 011C                         u2285 005E                         u3327 170E  
                       u3247 0B65                         u3167 0A90                         u3087 14FE  
                       u2295 008A                         u2615 12FF                         u1665 0984  
                       u1745 145A                         u3337 172E                         u3257 0B8C  
                       u3177 0AA3                         u3097 1515                         u2545 02F1  
                       u2465 0234                         u1675 0990                         u3347 174D  
                       u3267 0BBB                         u3187 0AB6                         u1595 1298  
                       u2395 0149                         u1685 099A                         u1765 146B  
                       u1845 05C1                         u3357 17AE                         u3277 0CBC  
                       u1925 0B01                         u3197 0AC9                         u2485 026D  
                       u1775 1474                         u3367 17CD                         u3287 165C  
                       u2575 040B                         u2495 027C                         u2807 0DC2  
                       u3377 17F8                         u3297 16AE                         u2817 0DF1  
                       u3387 0A13                         u1955 0B2E                         u2595 04FE  
                       u2907 00AB                         u2755 0F51                         u2827 0E60  
                       _PEIE 005E                         u1965 0B58                         u2917 00BE  
                       u2837 0E91                         u2927 00D1                         u2775 0FE0  
                       u2847 0ECC                         u2937 00E4                         u2857 0F3B  
                       u1995 0B84                         u2947 00F7                         u2867 0FBD  
                       u2787 0D1B                         _RCIE 0465                         _RCIF 0065  
                       u2957 010A                         u2877 0FF8                         u2797 0D8F  
                       u2967 0124                         u2887 130A                         u2977 0151  
                       u2897 131A                         u2987 0195                         i1l92 120E  
                       u2997 0303                         _TXIF 0064                 __CFG_WRT$OFF 0000  
                       _main 0D0D           __size_of_LCDGotoXY 0026                         btemp 007E  
          USARTReadData@data 0021             __end_of_ADC_Init 11E8             __end_of_ADC_Read 12B9  
              __CFG_BOREN$ON 0000                         ltemp 007E                         start 0012  
                       ttemp 007E                         wtemp 007E                        ??_ISR 0075  
              ?_LCDWriteChar 0070            ?_USARTHandleRxInt 0070                        ?_main 0070  
            __end_of___awdiv 09B1           ??_USARTHandleRxInt 0070                        STR_10 08F2  
                      STR_11 08D2                        STR_12 06A3                        STR_20 0755  
                      STR_21 07EE                        STR_13 07BE                        STR_30 08B4  
                      STR_14 0855                        STR_22 082D                        STR_31 06DC  
                      STR_15 0913                        STR_23 08B4                        STR_16 090D  
                      STR_40 0862                        STR_24 06DC                        STR_32 0640  
                      STR_17 0919                        STR_33 078B                        STR_41 06F4  
                      STR_25 0664                __CFG_WDTE$OFF 0000                        STR_18 091F  
                      STR_42 080E                        STR_34 07DE                        STR_26 07AD  
                      STR_50 072F                        STR_51 0925                        STR_19 0907  
                      STR_35 086F                        STR_43 0848                        STR_27 07CE  
                      STR_36 092B                        STR_60 0900                        STR_44 08E2  
                      STR_28 0742                        STR_52 0708              __end_of___awmod 148B  
                      STR_37 08B4                        STR_45 093E                        STR_53 0931  
                      STR_29 092B                        STR_61 0779                        STR_38 06DC  
                      STR_62 0937                        STR_54 08DA                        STR_46 089F  
                      STR_63 08EA                        STR_47 0894                        STR_55 07FE  
                      STR_39 06A5                        STR_56 08C8                        STR_48 081E  
                      STR_49 0888                        STR_57 0767                        STR_58 093B  
                      STR_59 071C                 LCDInit@style 002E              ___awdiv@divisor 0020  
                      i1l145 1370              ___awdiv@counter 0025                        _RCREG 001A  
                      _SPEED 0042                        _SPBRG 0099                        _PORTD 0008  
                      _TRISA 0085                        _TRISD 0088                        _TXREG 0019  
                      _UQEnd 007B             __end_of_POSITION 0D0D           _SendStringSerially 05DB  
                      _sendS 00DB                        _warNo 00C6                        main@i 0061  
                      pclath 000A                        ltemp0 007E                        ltemp1 0082  
                      ltemp2 0086                        ltemp3 0080           __size_of_USARTInit 0048  
        ?_SendStringSerially 0021                        ttemp0 007E                        ttemp1 0081  
                      ttemp2 0084                        ttemp3 0087                        ttemp4 007F  
                      status 0003                        wtemp0 007E                        wtemp1 0080  
                      wtemp2 0082                        wtemp3 0084                        wtemp4 0086  
                      wtemp5 0088                        wtemp6 007F              __initialization 0015  
               __end_of_main 1000               ??_LCDWriteChar 002C              ??_USARTReadData 0020  
       ??_SendStringSerially 0023                       ??_main 005E            __end_of_LCDGotoXY 1287  
              LCDByte@isdata 0025                    ??_LCDByte 0026                    ??_LCDInit 002C  
                     ?_SPEED 0070                       SPEED@i 00AE                       SPEED@l 00B4  
                     _ADCON0 001F                       _ADCON1 009F                       _ADRESH 001E  
                     _ADRESL 009E             ___awdiv@dividend 0022                       i1l2831 1371  
                     i1l2843 1398                       i1l2847 139E                       i1l2839 1390  
                     i1l2849 13A2                       u222_25 138E                       _TRISB0 0430  
                     _TRISB6 0436                       _URBuff 0190               __CFG_PWRTE$OFF 0000  
       __end_of_fireIndiSend 1654               _LCDWriteString 09B1                       ___wmul 123E  
                  ??___awdiv 0024                    ??___awmod 0024              ADC_Read@channel 0024  
       __size_of_LCDBusyLoop 0058                       _sendLa 00D2                       _sendLo 00C8  
           ___awdiv@quotient 0027              ___awmod@divisor 0020              ___awmod@counter 0025  
          __end_of_USARTInit 143E     __end_of_SendByteSerially 11E0                    ?_ADC_Init 0070  
                  ?_ADC_Read 0020                 LCDWriteInt@i 0038                 LCDWriteInt@j 0036  
                     saved_w 007E         __size_of_LCDWriteInt 00AA      __end_of__initialization 003E  
     __end_of_LCDWriteString 0A0C                    LCDByte@hn 0028                    LCDByte@ln 0029  
              __end_of_SPEED 0531               __pcstackCOMMON 0070                 __pidataBANK2 132A  
                  ?_POSITION 0070         SendByteSerially@Byte 0020                  buzzerTone@i 0023  
                    ??_SPEED 005B                   ??_ADC_Init 0020                   ??_ADC_Read 0022  
       __end_of_LCDWriteChar 12EF                   __pbssBANK0 0063                   __pbssBANK1 00C2  
                 __pbssBANK3 0190              ?_LCDWriteString 002C                   __pmaintext 0D0D  
                 ??_POSITION 0033                      ?___wmul 0020                    SPEED@kmph 00A7  
                  SPEED@knot 00A0                   __pintentry 0004                    POSITION@i 0049  
                  POSITION@l 004F              POSITION@longiEW 004C                      _LCDByte 13AF  
                    _LCDInit 0A0C                  SPEED@count1 00B2           USARTWriteInt@F1170 0068  
  __size_of_USARTHandleRxInt 0045                   __stringtab 0941                      _UQFront 007C  
      __size_of_fireIndiSend 0171         SendStringSerially@st 0021                  POSITION@lat 0040  
                    ___cgram 0110                      ___awdiv 0956                      ___awmod 143E  
            __size_of___wmul 0023                      __ptext1 12EF                      __ptext2 0042  
                    __ptext3 14E3                      __ptext4 1287                      __ptext5 11E0  
                    __ptext6 123E                      __ptext7 13F6                      __ptext8 0A74  
                    __ptext9 1654                 __size_of_ISR 001A             ___awmod@dividend 0022  
                 _buzzerTone 12EF                 _fireIndiSend 14E3                   _sendByGPRS 1654  
                  _LCDGotoXY 1261                      clrloop0 11E9         end_of_initialization 003E  
                  _RCSTAbits 0018                 __pstringtext 0600  __size_of_SendStringSerially 0025  
      __end_of_USARTReadData 123E            LCDWriteString@msg 002C            ?_SendByteSerially 0070  
      __size_of_LCDWriteChar 0036                    _USARTInit 13F6                    _TRISDbits 0088  
                 ?_LCDGotoXY 002C           ??_SendByteSerially 0020            __size_of_ADC_Init 0008  
          __size_of_ADC_Read 0032                   LCDInit@__i 002F                    _TXSTAbits 0098  
                 LCDGotoXY@x 002E                   LCDGotoXY@y 002C                ??_LCDBusyLoop 0020  
               _LCDWriteChar 12B9               __end_of___wmul 1261            __size_of_POSITION 0299  
                ?_buzzerTone 0070          start_initialization 0015                   ?_USARTInit 0020  
                __end_of_ISR 121B                  ?_sendByGPRS 0070                ??_LCDWriteInt 002F  
           _USARTHandleRxInt 136A             ??_LCDWriteString 002E                POSITION@i_345 0059  
              POSITION@i_337 004D                POSITION@l_343 0053                POSITION@l_344 0055  
              POSITION@l_339 0051                POSITION@latNS 004B                POSITION@count 0057  
              POSITION@longi 0036                     ??___wmul 0024                   init_fetch0 11F0  
                __pdataBANK2 0110          __end_of_LCDBusyLoop 14E3                     ?_LCDByte 0025  
                   ?_LCDInit 0070                  __pbssCOMMON 0079                     LCDByte@c 002A  
                  ___latbits 0002                __pcstackBANK0 0020                __pcstackBANK1 00A0  
                ??_LCDGotoXY 002D             LCDWriteInt@F1171 0063          __end_of_LCDWriteInt 05DB  
                  _checkZero 0079          __size_of_buzzerTone 003B          __size_of_sendByGPRS 01AC  
                   ?___awdiv 0020                   SPEED@i_353 00B8                   SPEED@i_354 00B0  
                   ?___awmod 0020                   SPEED@i_377 00BE                   SPEED@l_360 00BC  
                 SPEED@l_361 00C0                   SPEED@l_356 00B6                   SPEED@l_359 00BA  
                  __pstrings 0941               __size_of_SPEED 04EF                     _ADC_Init 11E0  
                   _ADC_Read 1287                  ??_USARTInit 0022              LCDBusyLoop@busy 0022  
            LCDBusyLoop@temp 0023            interrupt_function 0004               ___wmul@product 0024  
                  clear_ram0 11E8                     _PIR1bits 000C                     _GO_nDONE 00FA  
                _LCDBusyLoop 148B                     _POSITION 0A74             LCDWriteString@cc 002F  
                __stringbase 0953            ___wmul@multiplier 0020             __size_of_LCDByte 0047  
           __size_of_LCDInit 0068                  _LCDWriteInt 0531    __size_of_SendByteSerially 0008  
   __end_of_USARTHandleRxInt 13AF   __end_of_SendStringSerially 0600             __size_of___awdiv 005B  
           __size_of___awmod 004D            LCDBusyLoop@status 0024           __end_of__stringtab 0953  
               ??_buzzerTone 0020                     _checkSpd 00C2                 ??_sendByGPRS 0030  
                   __ptext10 05DB                     __ptext11 11D8                     __ptext20 13AF  
                   __ptext12 09B1                     __ptext21 148B                     __ptext13 1261  
                   __ptext22 1201                     __ptext14 121B                     __ptext23 136A  
                   __ptext15 12B9                     __ptext16 0531                     __ptext17 143E  
                   __ptext18 0956                     __ptext19 0A0C                __size_of_main 02F3  
     __size_of_USARTReadData 0023           __end_of_buzzerTone 132A           __end_of_sendByGPRS 1800  
                   init_ram0 11F4               LCDWriteChar@cc 002D               LCDWriteChar@ch 002E  
                   intlevel1 0000               LCDWriteInt@val 002C               LCDWriteInt@str 0031  
                  stringcode 094B                _USARTReadData 121B                ?_fireIndiSend 0070  
       USARTHandleRxInt@data 0074                     stringtab 0941             _SendByteSerially 11D8  
              fireIndiSend@a 0033      __size_of_LCDWriteString 005B  
